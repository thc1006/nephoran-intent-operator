prometheus:
  prometheusSpec:
    retention: 30d
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: openebs-hostpath
          resources:
            requests:
              storage: 100Gi
    additionalScrapeConfigs:
    - job_name: 'oran-metrics'
      static_configs:
      - targets:
        - oai-cu.oran:9090
        - oai-du.oran:9090
        - ric-e2term.ricplt:8080
        - ric-a1mediator.ricplt:8080
        - ves-collector.oran:8080
    - job_name: 'nephio-metrics'
      static_configs:
      - targets:
        - porch-server.porch-system:7443
        - nephio-controller.nephio-system:8080
    - job_name: 'nwdaf-analytics'
      static_configs:
      - targets:
        - nwdaf-analytics.analytics:9090
    - job_name: 'kubernetes-pods'
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)

grafana:
  adminPassword: admin123
  persistence:
    enabled: true
    size: 10Gi
    storageClassName: openebs-hostpath
  additionalDataSources:
  - name: VES-Metrics
    type: prometheus
    url: http://ves-prometheus:9090
    access: proxy
    isDefault: false
  - name: Jaeger
    type: jaeger
    url: http://oran-tracing-query:16686
    access: proxy
  - name: Elasticsearch
    type: elasticsearch
    url: http://elasticsearch.monitoring:9200
    database: oran-logs-*
    timeField: "@timestamp"

alertmanager:
  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: openebs-hostpath
          resources:
            requests:
              storage: 10Gi
    config:
      global:
        smtp_smarthost: 'localhost:587'
        smtp_from: 'alertmanager@oran.local'
      route:
        group_by: ['alertname', 'cluster', 'service']
        group_wait: 10s
        group_interval: 10s
        repeat_interval: 1h
        receiver: 'web.hook'
        routes:
        - match:
            severity: critical
          receiver: 'critical-alerts'
        - match:
            component: oran
          receiver: 'oran-team'
      receivers:
      - name: 'web.hook'
        webhook_configs:
        - url: 'http://webhook-receiver:8080/alerts'
      - name: 'critical-alerts'
        webhook_configs:
        - url: 'http://webhook-receiver:8080/critical'
          send_resolved: true
      - name: 'oran-team'
        webhook_configs:
        - url: 'http://webhook-receiver:8080/oran'

nodeExporter:
  enabled: true

kubeStateMetrics:
  enabled: true

defaultRules:
  create: true
  rules:
    alertmanager: true
    etcd: true
    general: true
    k8s: true
    kubeApiserver: true
    kubeApiserverAvailability: true
    kubeApiserverError: true
    kubeApiserverSlos: true
    kubeControllerManager: true
    kubelet: true
    kubeProxy: true
    kubePrometheusGeneral: true
    kubePrometheusNodeRecording: true
    kubernetesApps: true
    kubernetesResources: true
    kubernetesStorage: true
    kubernetesSystem: true
    node: true
    nodeExporterAlerting: true
    nodeExporterRecording: true
    prometheus: true
    prometheusOperator: true