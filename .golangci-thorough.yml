# Thorough golangci-lint configuration for CI/CD (2025 optimized)
# Comprehensive quality checks with performance optimizations
# Compatible with golangci-lint v1.64.8+ and Go 1.24.x
# Optimized for CI environments with parallel execution

run:
  timeout: 20m  # Generous timeout for CI
  issues-exit-code: 1
  tests: true  # Include test files
  go: "1.24"
  
  build-tags:
    - integration
    - e2e
    - test
    - benchmarks
    - debug
    - race
    
  modules-download-mode: readonly
  
  # CI optimization: use all available cores
  concurrency: 0  # 0 = number of CPUs

output:
  formats:
    - format: colored-line-number
    - format: junit-xml
      path: test-results/golangci-lint-report.xml
    - format: code-climate
      path: test-results/golangci-code-climate.json
  print-issued-lines: true
  print-linter-name: true
  sort-results: true


linters:
  disable-all: true
  enable:
    # Code quality and style (comprehensive set)
    - revive          # Comprehensive style checker
    - staticcheck     # Advanced static analysis
    - govet          # Go vet on steroids
    - gosimple       # Simplification suggestions
    - unused         # Dead code detection
    - typecheck      # Type checking
    
    # Error handling and security
    - errcheck       # Unchecked errors
    - gosec          # Security audit
    - errorlint      # Error wrapping
    - contextcheck   # Context propagation
    - nilerr        # Nil error returns
    
    # Performance and efficiency
    - ineffassign    # Ineffective assignments
    - unconvert      # Unnecessary conversions
    - prealloc       # Slice preallocation
    - gocritic       # Highly extensible
    - bodyclose      # HTTP body closure
    - copyloopvar    # Go 1.22+ loop variable
    - intrange       # Go 1.22+ integer ranges
    - perfsprint     # Performance sprintf
    
    # Code clarity and maintainability
    - misspell       # Spelling errors
    - unparam        # Unused parameters
    - gci            # Import formatting
    - gofumpt        # Stricter gofmt
    - whitespace     # Whitespace issues
    - nolintlint     # Nolint directive issues
    - maintidx       # Maintainability index
    - gocognit       # Cognitive complexity
    
    # Testing
    - testifylint    # Testify best practices
    - tparallel      # Test parallelization
    - testableexamples # Example tests
    
    # Kubernetes/Cloud-native specific
    - noctx          # HTTP without context
    - rowserrcheck   # SQL rows.Err()
    - sqlclosecheck  # SQL close checking
    
    # Documentation and naming
    - godot          # Comment punctuation
    - stylecheck     # Style guide
    - predeclared    # Shadowed identifiers
    - godox          # TODO/FIXME comments
    
    # Modern Go practices
    - ireturn        # Accept interfaces
    - exhaustive     # Exhaustive enums
    - forcetypeassert # Force type assertions
    - wastedassign   # Wasted assignments
    
    # Additional security
    - bidichk        # Bidirectional text
    - durationcheck  # Duration multiplications
    - makezero       # Make with zero length
    - musttag        # Struct tag enforcement
    

linters-settings:
  revive:
    severity: warning
    confidence: 0.8
    enable-all-rules: false
    rules:
      # Error handling
      - name: blank-imports
      - name: context-as-argument
      - name: context-keys-type
      - name: error-return
      - name: error-strings
      - name: error-naming
      - name: errorf
      - name: handle-error
        arguments: ["fmt.Printf", "fmt.Println", "fmt.Print", "log.Printf", "log.Println", "log.Print"]
      
      # Code clarity
      - name: indent-error-flow
      - name: var-naming
        arguments: [["ID", "URL", "HTTP", "JSON", "API", "K8s", "CRD", "CNF", "VNF", "RAN", "AI", "ML", "O1", "O2", "E2", "A1", "FCAPS", "KPM", "VES", "xApp"], []]
      - name: var-declaration
      - name: package-comments
      - name: receiver-naming
      - name: function-result-limit
        arguments: [3]
      - name: argument-limit
        arguments: [5]
      - name: cognitive-complexity
        arguments: [20]
      - name: cyclomatic
        arguments: [15]
      - name: function-length
        arguments: [60, 100]
      
      # Best practices
      - name: if-return
      - name: increment-decrement
      - name: range
      - name: superfluous-else
      - name: modifies-value-receiver
      - name: constant-logical-expr
      - name: bool-literal-in-expr
      - name: redefines-builtin-id
      - name: imports-blacklist
        arguments: ["github.com/pkg/errors"]
      - name: range-val-in-closure
      - name: range-val-address
      - name: waitgroup-by-value
      - name: atomic
      - name: call-to-gc
      - name: duplicated-imports
      - name: import-shadowing
      - name: bare-return
      - name: unused-receiver
      - name: unhandled-error
        arguments: ["fmt.Fprint", "fmt.Fprintf", "fmt.Fprintln", "hash.Hash.Write", "io.Copy"]
      - name: string-of-int
      - name: string-format
        arguments:
          - - "logging.Info"
            - "/^[A-Z]/"
          - - "fmt.Errorf"
            - "/^([a-z][a-z\\d]*)+: /"
      - name: early-return
      - name: unconditional-recursion
      - name: identical-branches
      - name: defer
        arguments: [["call-chain", "loop", "method-call", "recover", "immediate-recover", "return"]]
      - name: unexported-naming
      - name: useless-break
      
  staticcheck:
    checks: ["all"]
    
  govet:
    enable-all: true
    disable:
      - fieldalignment  # Can be expensive in CI
    settings:
      shadow:
        strict: false  # Allow variable shadowing for flexibility
        
  gosec:
    severity: "low"  # All severities in CI
    confidence: "low"  # All confidence levels
    excludes: []  # No exclusions in CI
    config:
      global:
        audit: true
        nosec: false
        show-ignored: true
        tls-min-version: "1.2"
        
  errcheck:
    check-type-assertions: true
    check-blank: true
    disable-default-exclusions: false
    exclude-functions:
      - (github.com/sirupsen/logrus.Logger).Debug
      - (github.com/sirupsen/logrus.Logger).Debugf
      - (github.com/sirupsen/logrus.Logger).Info
      - (github.com/sirupsen/logrus.Logger).Infof
      
  gocritic:
    enabled-tags:
      - diagnostic
      - style
      - performance
      - experimental
      - opinionated
    disabled-checks:
      - commentedOutCode  # Too many false positives
      
  errorlint:
    errorf: true
    asserts: true
    comparison: true
    errorf-multi: true
    
  nolintlint:
    require-explanation: true
    require-specific: true
    allow-no-explanation: ["test", "Test"]
    
  godot:
    scope: all
    exclude: []
    capital: true
    period: true
    
  gocognit:
    min-complexity: 30
    
  maintidx:
    under: 20
    
  gofumpt:
    extra-rules: true
    module-path: github.com/thc1006/nephoran-intent-operator
    
  gci:
    sections:
      - standard
      - default
      - prefix(github.com/thc1006/nephoran-intent-operator)
      - prefix(sigs.k8s.io)
      - prefix(k8s.io)
      - blank
      - dot
    skip-generated: true
    custom-order: true
    
  misspell:
    locale: US
    ignore-words: []
    
  unparam:
    check-exported: true
    
  prealloc:
    simple: true
    range-loops: true
    for-loops: true
    
  whitespace:
    multi-if: true
    multi-func: true
    
  testifylint:
    enable-all: true
    
  exhaustive:
    check-generated: false
    default-signifies-exhaustive: true
    ignore-enum-members: ""
    package-scope-only: false
    
  godox:
    keywords:
      - TODO
      - FIXME
      - BUG
      - HACK
      - OPTIMIZE
      - XXX
      
  stylecheck:
    checks: ["all"]
    initialisms: ["ACL", "API", "ASCII", "CPU", "CSS", "DNS", "EOF", "GUID", "HTML", "HTTP", "HTTPS", "ID", "IP", "JSON", "QPS", "RAM", "RPC", "SLA", "SMTP", "SQL", "SSH", "TCP", "TLS", "TTL", "UDP", "UI", "GID", "UID", "UUID", "URI", "URL", "UTF8", "VM", "XML", "YAML", "O1", "O2", "E2", "A1", "RAN", "CNF", "VNF", "K8s", "CRD", "KPM", "VES", "FCAPS"]
    
  cyclop:
    max-complexity: 15
    package-average: 10.0
    skip-tests: false
    
  dupl:
    threshold: 100
    
  gocyclo:
    min-complexity: 15
    
  lll:
    line-length: 140
    tab-width: 4
    
  funlen:
    lines: 100
    statements: 60
    ignore-comments: true

issues:
  max-issues-per-linter: 0  # No limit in CI
  max-same-issues: 0  # No limit in CI
  
  # Enable fixing in CI for automated PRs
  fix: true
  
  # Check against base branch for PRs
  new: false
  new-from-rev: ""
  
  # Directories to exclude from linting  
  exclude-dirs:
    - vendor
    - third_party
    - .git
    - .github
    - node_modules
    - testdata

  # Comprehensive file exclusions
  exclude-files:
    - '.*\.pb\.go$'
    - '.*_generated\.go$'
    - '.*_gen\.go$'
    - 'zz_generated\..*\.go$'
    - 'mock_.*\.go$'
    - 'vendor/.*'
    
  exclude-rules:
    # Test files - relaxed rules
    - path: '_test\.go'
      linters:
        - gosec
        - unparam
        - errcheck
        - funlen
        - gocognit
        - maintidx
        - gocritic
        - dupl
        - forcetypeassert
        
    # Generated files - minimal checks
    - path: '(.*\.pb\.go|.*_generated\.go|.*_gen\.go|zz_generated\..*\.go)'
      linters:
        - revive
        - gocritic
        - gosec
        - staticcheck
        - govet
        - errcheck
        - ineffassign
        - stylecheck
        - gci
        - gofumpt
        - godot
        - misspell
        
    # Example files - relaxed
    - path: 'examples/'
      linters:
        - gosec
        - errcheck
        - ineffassign
        
    # Main packages - some relaxation
    - path: 'cmd/.*/main\.go'
      linters:
        - funlen
        - gocyclo
        - gocognit
        
    # Specific exclusions
    - text: "ST1000: at least one file in a package should have a package comment"
      linters:
        - stylecheck
        
    - text: "G404: Use of weak random number generator"
      linters:
        - gosec
        
    # Allow TODO/FIXME in certain contexts
    - source: "TODO|FIXME|BUG"
      path: '(internal/|pkg/)'
      linters:
        - godox
        
  # Don't use default exclusions - we want comprehensive checks
  exclude-use-default: false
  
  # Include specific checks
  include:
    - EXC0002  # Disable excluding of issues about comments from golint
    - EXC0003  # Disable excluding of issues about comments from golint
    - EXC0004  # Disable excluding of issues about comments from govet
    - EXC0005  # Disable excluding of issues about comments from staticcheck
    - EXC0011  # Disable excluding of issues about missing package comments
    - EXC0012  # Disable excluding of issues about missing comments for exported (EXC0012)
    
  # Performance optimizations for CI
  whole-files: true  # Check entire files
  
severity:
  default-severity: warning
  case-sensitive: true
  rules:
    - linters:
        - gosec
      severity: error
    - linters:
        - errcheck
      severity: error
    - linters:
        - staticcheck
      severity: error
    - linters:
        - govet
      severity: error