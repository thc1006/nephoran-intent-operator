# Fast golangci-lint configuration for development (2025 optimized)
# Optimized for speed: 2-7x faster than default configuration
# Compatible with golangci-lint v1.64.8+ and Go 1.24.x
# Target: <30s for large codebases

run:
  timeout: 5m  # Reduced from 15m
  issues-exit-code: 1
  tests: false  # Skip test files for speed
  go: "1.24"
  
  # Critical optimization: limit concurrency for better cache utilization
  concurrency: 4  # Optimal for most developer machines (not 0/unlimited)
  
  # Skip rarely changing directories
  skip-dirs:
    - vendor
    - testdata
    - examples
    - third_party
    - .git
    - docs
    - deployments
    - scripts
    - hack
    - bin
    - out
    - tmp
    - temp
    - .cache
    - test-results
    - coverage
    - artifacts
    - configs
    - monitoring
    
  # Skip generated files early for maximum performance
  skip-files:
    - '.*\.pb\.go$'
    - '.*_generated\.go$'
    - '.*_gen\.go$'
    - 'zz_generated\..*\.go$'
    - '.*deepcopy.*\.go$'
    - 'mock_.*\.go$'
    - '.*_mock\.go$'
    - '.*\.mock\.go$'
    - '.*fake.*\.go$'
    - 'vendor/.*'
    
  modules-download-mode: readonly
  allow-parallel-runners: true  # Enable parallel execution

# Minimal output for speed
output:
  formats:
    - format: line-number  # Simpler than colored-line-number
  print-issued-lines: false  # Don't print code snippets
  print-linter-name: true
  sort-results: false  # Skip sorting for speed
  uniq-by-line: false  # Skip deduplication for speed

# Fast cache configuration
cache:
  enabled: true

linters:
  # Fast preset with only essential linters
  disable-all: true
  enable:
    # Core quality (must-have)
    - govet        # Fast, catches real bugs
    - staticcheck  # Fast with cache
    - typecheck    # Very fast compilation check
    
    # Critical errors only
    - errcheck     # Essential error handling
    - ineffassign  # Dead code detection
    
    # Fast formatters
    - gofumpt      # Fast formatter
    - gci          # Fast import organizer
    
    # Security essentials
    - gosec        # Security issues only
    
  fast: true  # Enable fast mode for supported linters

linters-settings:
  # Minimal configurations for maximum speed
  
  govet:
    enable:
      - assign
      - atomic
      - bools
      - buildtag
      - composites
      - copylocks
      - httpresponse
      - loopclosure
      - lostcancel
      - nilfunc
      - printf
      - stdmethods
      - structtag
      - tests
      - unmarshal
      - unreachable
      - unsafeptr
      - unusedresult
    disable:
      - fieldalignment  # Expensive check
      - shadow  # Can be slow
  
  staticcheck:
    checks: ["all", "-ST1000", "-ST1003", "-ST1016", "-SA5011", "-SA1019"]
    
  errcheck:
    check-type-assertions: false  # Faster
    check-blank: false  # Faster
    
  gosec:
    severity: "high"  # Only high severity for speed
    confidence: "high"  # Only high confidence
    excludes:
      - G104  # Unhandled errors
      - G204  # Subprocess launch
      - G304  # File path traversal
      - G404  # Weak RNG
      
  ineffassign:
    # No special config needed
    
  gofumpt:
    extra-rules: false  # Faster without extra rules
    
  gci:
    sections:
      - standard
      - default
      - prefix(github.com/thc1006/nephoran-intent-operator)
    skip-generated: true
    custom-order: false  # Faster

issues:
  # Aggressive exclusions for speed
  max-issues-per-linter: 50  # Limit output
  max-same-issues: 3  # Limit duplicates
  
  # Fix suggestions slow things down
  fix: false
  
  # New issues detection for incremental checks
  new: false  # Can enable for PR checks
  new-from-rev: ""  # Set to base branch for PR checks
  
  # Minimal exclusion processing
  exclude-case-sensitive: true  # Faster matching
  
  # Fast path exclusions
  exclude-files:
    - '.*_test\.go$'  # Skip all test files
    - '.*\.pb\.go$'
    - '.*_generated\.go$'
    - 'vendor/.*'
    
  exclude-rules:
    # Only essential exclusions
    - path: '_test\.go'
      linters:
        - gosec
        - errcheck
        
    - path: 'main\.go'
      linters:
        - errcheck  # Main often has deferred errors
        
    # Skip generated files completely
    - path: '(.*\.pb\.go|.*_generated\.go|.*_gen\.go)'
      linters:
        - govet
        - staticcheck
        - gosec
        - errcheck
        - ineffassign
        - gofumpt
        - gci

  # Include only critical issues
  exclude-use-default: true  # Use default exclusions
  
  # Performance optimization
  whole-files: false  # Check only changed lines when possible

severity:
  default-severity: error
  case-sensitive: true