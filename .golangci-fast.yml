# golangci-lint configuration optimized for fast CI execution
# Compatible with golangci-lint v1.64.3+ and Go 1.24.6+
# Optimized for Kubernetes operators with O-RAN/Nephio telecom domain
# Balances speed with essential code quality checks
# Updated for 2025 with latest linter recommendations

run:
  timeout: 12m  # Increased for Go 1.24 performance
  issues-exit-code: 1
  tests: true  # Include test files
  go: '1.24'   # Use unquoted version format
  
  # Fast concurrency for CI
  concurrency: 6  
  
  modules-download-mode: readonly
  allow-parallel-runners: true

# Clean output format
output:
  formats:
    - format: colored-line-number
      path: stdout
    - format: sarif
      path: golangci-lint-report.sarif
  print-issued-lines: true
  print-linter-name: true
  sort-results: true

# Essential linters for fast execution
linters:
  disable-all: true
  enable:
    # Core quality (essential for CI)
    - revive           # Fast replacement for golint
    - staticcheck      # Essential static analysis
    - govet            # Standard Go vet checks
    - gosimple         # Simple optimizations
    - unused           # Dead code detection
    - typecheck        # Type-checking errors
    
    # Error handling (critical for operators)
    - errcheck         # Unchecked errors
    - errorlint        # Error wrapping patterns
    
    # Security (essential)
    - gosec            # Security vulnerabilities
    - bodyclose        # HTTP response body closing
    - rowserrcheck     # SQL rows.Err() checking
    
    # Performance (lightweight checks)
    - ineffassign      # Ineffective assignments
    - unconvert        # Unnecessary conversions
    - prealloc         # Slice preallocation (basic)
    
    # Code style (fast checks)
    - misspell         # Spelling errors
    - stylecheck       # Style checks
    - predeclared      # Predeclared identifier shadowing
    - whitespace       # Whitespace errors
    
    # Import and formatting
    - gci              # Import formatting
    - gofumpt          # Strict formatting
    
    # Context and concurrency (Kubernetes specific)
    - noctx            # HTTP requests without context
    - nolintlint       # Nolint directive usage
    
    # Modern Go features (Go 1.24+)
    - copyloopvar      # Loop variable copying (Go 1.22+)
    - intrange         # Integer range loops (Go 1.22+)
    - protogetter      # Proto getter generation (Go 1.24+)
    - sloglint         # Structured logging validation
    - testifylint      # Testify assertions
    
    # 2025 recommended additions
    - fatcontext       # Context.Value key types
    - tenv             # Testing environment isolation
    - testableexamples # Example tests validation

# Optimized linter settings for fast execution
linters-settings:
  # Core Go tools
  govet:
    enable-all: false  # Disable all then enable specific ones for speed
    enable:
      - assign
      - atomic
      - bools
      - buildtag
      - cgocall
      - composites
      - copylocks
      - deepequalerrors
      - errorsas
      - httpresponse
      - loopclosure
      - lostcancel
      - nilfunc
      - printf
      - shift
      - stdmethods
      - structtag
      - tests
      - unmarshal
      - unreachable
      - unsafeptr
      - unusedresult
        
  staticcheck:
    checks: ["all", "-ST1000", "-ST1003", "-ST1016", "-ST1020", "-ST1021", "-ST1022"]
    # Updated for staticcheck 2025.1.1 compatibility
    
  # Security configuration (fast mode)
  gosec:
    severity: medium
    confidence: medium
    excludes:
      - G104  # Unhandled errors (errcheck handles this)
      - G204  # Subprocess launching (needed for kubectl/porch operations)
      - G304  # File path provided as taint input (needed for config files)
    includes:
      - G101  # Hardcoded credentials
      - G102  # Bind to all interfaces
      - G401  # Weak crypto
      - G501  # Import blocklist: crypto/md5
      - G502  # Import blocklist: crypto/des
      - G503  # Import blocklist: crypto/rc4
      
  # Error handling (lightweight)
  errcheck:
    check-type-assertions: true
    check-blank: true
    exclude-functions:
      - '(*database/sql.DB).Close'
      - 'fmt.Print*'
      - 'fmt.Fprint*'
      - (*os.File).Close
      
  # Code style (fast checks)
  revive:
    severity: warning
    confidence: 0.8
    rules:
      - name: blank-imports
      - name: context-as-argument
      - name: context-keys-type
      - name: dot-imports
      - name: error-return
      - name: error-strings
      - name: error-naming
      - name: exported
      - name: if-return
      - name: increment-decrement
      - name: var-naming
        arguments: [["ID", "URL", "HTTP", "JSON", "API", "K8s", "CRD", "CNF", "VNF", "RAN", "AI", "ML", "O1", "O2", "E2", "A1", "FCAPS", "KPM", "VES", "ORAN"], []]
      - name: var-declaration
      - name: package-comments
      - name: range
      - name: receiver-naming
      - name: time-naming
      - name: indent-error-flow
      - name: errorf
      - name: empty-block
      - name: superfluous-else
      - name: unreachable-code
        
  stylecheck:
    checks: ["all", "-ST1000", "-ST1003", "-ST1016", "-ST1020", "-ST1021", "-ST1022"]
    # Updated for 2025 compatibility
    initialisms: ["ACL", "API", "ASCII", "CPU", "CSS", "DNS", "EOF", "GUID", "HTML", 
                  "HTTP", "HTTPS", "ID", "IP", "JSON", "JWT", "LHS", "QPS", "RAM", 
                  "RHS", "RPC", "SLA", "SMTP", "SQL", "SSH", "TCP", "TLS", "TTL", 
                  "UDP", "UI", "UID", "UUID", "URI", "URL", "UTF8", "VM", "XML", 
                  "XMPP", "XSRF", "XSS", "CNF", "VNF", "AMF", "SMF", "UPF", "RIC",
                  "O1", "O2", "E2", "A1", "ORAN", "KPM", "FCAPS", "VES", "LLM", "RAG"]
    
  # Import organization (updated for gci v0.13+)
  gci:
    sections:
      - standard
      - default  
      - prefix(github.com/thc1006/nephoran-intent-operator)
      - prefix(sigs.k8s.io)
      - prefix(k8s.io)
    skip-generated: true
    custom-order: true
    # 2025 gci improvements
    section-separators:
      - newLine
    
  # Formatting
  gofumpt:
    extra-rules: true
    module-path: github.com/thc1006/nephoran-intent-operator
    
  # Documentation
  misspell:
    locale: US
    ignore-words:
      - cancelled
      - marshalling  
      - signalling
      - telecom
      - telco
      - oran
      - nephio
      - kubernetes
      - k8s
      
  # Performance optimization (updated settings)
  prealloc:
    simple: true    # Only simple cases for speed
    range-loops: false  # Skip complex analysis
    for-loops: false    # Skip complex analysis
    
  # New 2025 linter settings
  sloglint:
    no-mixed-args: true
    kv-only: false
    attr-only: false
    context-only: false
    
  testifylint:
    disable-all: false
    enable:
      - bool-compare
      - compares
      - empty
      - error-is-as
      - len
      - suite-dont-use-pkg
      - suite-extra-assert-call
    
  fatcontext:
    ignore-tests: true  # Relax in test files
    
  tenv:
    all: false  # Only check specific patterns
    
  protogetter:
    replace-first-arg-in-append: true
    
  testableexamples:
    # No specific settings needed

# Issue handling optimized for CI speed
issues:
  max-issues-per-linter: 50  # Limit for CI speed
  max-same-issues: 10        # Prevent noise
  new-from-patch: false      # Check entire codebase
  
  # Don't auto-fix in CI for stability
  fix: false
  
  # Performance optimization
  exclude-case-sensitive: false
  exclude-use-default: true
  
  # Directories to exclude from linting  
  exclude-dirs:
    - vendor
    - testdata
    - third_party
    - .git
    - bin
    - out
    - tmp
    - temp
    - test-results
    - coverage
    - artifacts
    - node_modules
    - deployments/base
    - config/samples
    - hack/testtools
    - tests
    - test
    - scripts
    - security
    - monitoring
    - infrastructure
    - planner
  
  # File-specific exclusions
  exclude-files:
    - '.*\.pb\.go$'
    - '.*_generated\.go$'
    - '.*_gen\.go$'
    - 'zz_generated\..*\.go$'
    - '.*deepcopy.*\.go$'
    - 'mock_.*\.go$'
    - '.*_mock\.go$'
    - '.*\.mock\.go$'
    - '.*fake.*\.go$'
    - 'vendor/.*'
    - 'hack/testtools/envtest_.*\.go$'
    - 'cmd/.*test.*\.go$'
  
  exclude-rules:
    # Test files exclusions (reduce test complexity checks)
    - path: '_test\.go'
      linters:
        - gosec
        - errcheck  # Tests often ignore errors intentionally
        - revive    # Relaxed naming in tests
        - stylecheck # Relaxed style in tests
        - fatcontext # Context rules relaxed in tests
        - tenv      # Environment isolation relaxed
        - testifylint # Already handles testify patterns
        - testableexamples # Not relevant for tests
        
    # Main files exclusions  
    - path: 'cmd/.*/main\.go'
      linters:
        - revive   # CLI output patterns
        
    # Generated files (comprehensive exclusion)
    - path: '(.*\.pb\.go|.*_generated\.go|.*_gen\.go|zz_generated.*\.go)'
      linters:
        - all
        
    # API types (Kubernetes conventions)
    - path: 'api/.*/.*_types\.go'
      linters:
        - revive
        - stylecheck
        
    # Example and demo files
    - path: '(examples|demo)/.*\.go'
      linters:
        - gosec
        - errcheck
        
    # Allow kubebuilder directives with long lines
    - linters:
        - lll
      source: "^//\\s*(\\+kubebuilder:|\\+k8s:|go:generate)"
      
  # Exclude specific error patterns
  exclude:
    # Kubernetes client-go patterns
    - "should not use dot imports"
    - "should have comment or be unexported"
    - "comment on exported .* should be of the form"
    - "exported .* should have comment or be unexported"
    
    # O-RAN specific terminology
    - "misspell: `oran` is a misspelling of `orange`"
    - "misspell: `telco` is a misspelling"
    - "misspell: `nephio` is a misspelling"

# Severity configuration for CI
severity:
  default-severity: warning
  case-sensitive: true
  rules:
    - linters:
        - gosec
        - errcheck
        - staticcheck
        - govet
        - typecheck
      severity: error
    - linters:
        - revive
        - stylecheck
        - misspell
      severity: warning