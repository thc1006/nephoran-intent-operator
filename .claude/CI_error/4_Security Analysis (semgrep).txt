2025-08-19T12:24:57.5747404Z Current runner version: '2.327.1'
2025-08-19T12:24:57.5782041Z ##[group]Runner Image Provisioner
2025-08-19T12:24:57.5783286Z Hosted Compute Agent
2025-08-19T12:24:57.5784317Z Version: 20250818.377
2025-08-19T12:24:57.5785570Z Commit: 3c593e9f75fe0b87e893bca80d6e12ba089c61fc
2025-08-19T12:24:57.5786758Z Build Date: 2025-08-18T14:52:18Z
2025-08-19T12:24:57.5787793Z ##[endgroup]
2025-08-19T12:24:57.5789213Z ##[group]Operating System
2025-08-19T12:24:57.5790199Z Ubuntu
2025-08-19T12:24:57.5790908Z 24.04.2
2025-08-19T12:24:57.5791844Z LTS
2025-08-19T12:24:57.5792615Z ##[endgroup]
2025-08-19T12:24:57.5793345Z ##[group]Runner Image
2025-08-19T12:24:57.5794618Z Image: ubuntu-24.04
2025-08-19T12:24:57.5795469Z Version: 20250810.1.0
2025-08-19T12:24:57.5797133Z Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250810.1/images/ubuntu/Ubuntu2404-Readme.md
2025-08-19T12:24:57.5799861Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250810.1
2025-08-19T12:24:57.5801812Z ##[endgroup]
2025-08-19T12:24:57.5804811Z ##[group]GITHUB_TOKEN Permissions
2025-08-19T12:24:57.5808641Z Actions: read
2025-08-19T12:24:57.5809695Z Checks: write
2025-08-19T12:24:57.5810650Z Contents: read
2025-08-19T12:24:57.5811620Z Metadata: read
2025-08-19T12:24:57.5812640Z Packages: write
2025-08-19T12:24:57.5813533Z PullRequests: write
2025-08-19T12:24:57.5814715Z SecurityEvents: write
2025-08-19T12:24:57.5815717Z ##[endgroup]
2025-08-19T12:24:57.5819568Z Secret source: Actions
2025-08-19T12:24:57.5820747Z Prepare workflow directory
2025-08-19T12:24:57.6504357Z Prepare all required actions
2025-08-19T12:24:57.6561584Z Getting action download info
2025-08-19T12:24:58.1331218Z Download action repository 'step-security/harden-runner@v2' (SHA:ec9f2d5744a09debf3a187a3f4f675c53b671911)
2025-08-19T12:24:59.1021817Z Download action repository 'actions/checkout@v4' (SHA:08eba0b27e820071cde6df949e0beb9ba4906955)
2025-08-19T12:24:59.5516361Z Download action repository 'actions/setup-go@v5' (SHA:d35c59abb061a4a6fb18e82ac0862c26744d6ab5)
2025-08-19T12:25:00.0635457Z Download action repository 'github/codeql-action@v3' (SHA:96f518a34f7a870018057716cc4d7a5c014bd61c)
2025-08-19T12:25:06.3065562Z Download action repository 'semgrep/semgrep-action@v1' (SHA:713efdd345f3035192eaa63f56867b88e63e4e5d)
2025-08-19T12:25:06.7465650Z Download action repository 'dependency-check/Dependency-Check_Action@main' (SHA:2ba636726705b0f74f126ebeaacaf2ad4600b967)
2025-08-19T12:25:07.1321002Z Download action repository 'actions/upload-artifact@v4' (SHA:ea165f8d65b6e75b540449e92b4886f43607fa02)
2025-08-19T12:25:07.3743391Z Complete job name: Security Analysis (semgrep)
2025-08-19T12:25:07.4177582Z ##[group]Pull down action image 'returntocorp/semgrep-agent:v1'
2025-08-19T12:25:07.5097253Z ##[command]/usr/bin/docker pull returntocorp/semgrep-agent:v1
2025-08-19T12:25:09.0175067Z v1: Pulling from returntocorp/semgrep-agent
2025-08-19T12:25:09.1422180Z 7264a8db6415: Pulling fs layer
2025-08-19T12:25:09.1423105Z 66e1d5e70e42: Pulling fs layer
2025-08-19T12:25:09.1423577Z 64dfa579cd50: Pulling fs layer
2025-08-19T12:25:09.1424257Z afa58c10ee34: Pulling fs layer
2025-08-19T12:25:09.1424642Z cd87b3fa61f8: Pulling fs layer
2025-08-19T12:25:09.1425007Z a54df9278105: Pulling fs layer
2025-08-19T12:25:09.1425381Z 22d9c0f131ae: Pulling fs layer
2025-08-19T12:25:09.1425790Z bfa6cbe2a060: Pulling fs layer
2025-08-19T12:25:09.1426236Z e6455d0c4d0a: Pulling fs layer
2025-08-19T12:25:09.1426624Z 4e6528b8b44b: Pulling fs layer
2025-08-19T12:25:09.1427026Z 77aae498c7b4: Pulling fs layer
2025-08-19T12:25:09.1427320Z f6a963258091: Pulling fs layer
2025-08-19T12:25:09.1427618Z e68b04e3dc22: Pulling fs layer
2025-08-19T12:25:09.1427851Z e50eacad623d: Pulling fs layer
2025-08-19T12:25:09.1428116Z 464938719a27: Pulling fs layer
2025-08-19T12:25:09.1428341Z c09dc33c2ea4: Pulling fs layer
2025-08-19T12:25:09.1428659Z db70a1bf97d5: Pulling fs layer
2025-08-19T12:25:09.1428890Z 5667267dbf96: Pulling fs layer
2025-08-19T12:25:09.1429139Z 55e5ab738d77: Pulling fs layer
2025-08-19T12:25:09.1429789Z fbf9ea8fb0f3: Pulling fs layer
2025-08-19T12:25:09.1430030Z afa58c10ee34: Waiting
2025-08-19T12:25:09.1430233Z cd87b3fa61f8: Waiting
2025-08-19T12:25:09.1430410Z a54df9278105: Waiting
2025-08-19T12:25:09.1430588Z 4e6528b8b44b: Waiting
2025-08-19T12:25:09.1430753Z 22d9c0f131ae: Waiting
2025-08-19T12:25:09.1430923Z f6a963258091: Waiting
2025-08-19T12:25:09.1431093Z bfa6cbe2a060: Waiting
2025-08-19T12:25:09.1431267Z e68b04e3dc22: Waiting
2025-08-19T12:25:09.1431462Z e6455d0c4d0a: Waiting
2025-08-19T12:25:09.1431656Z e50eacad623d: Waiting
2025-08-19T12:25:09.1431821Z 464938719a27: Waiting
2025-08-19T12:25:09.1431997Z 77aae498c7b4: Waiting
2025-08-19T12:25:09.1432163Z c09dc33c2ea4: Waiting
2025-08-19T12:25:09.1432547Z 5667267dbf96: Waiting
2025-08-19T12:25:09.1432725Z db70a1bf97d5: Waiting
2025-08-19T12:25:09.4009861Z 66e1d5e70e42: Verifying Checksum
2025-08-19T12:25:09.4010758Z 66e1d5e70e42: Download complete
2025-08-19T12:25:09.4272326Z 7264a8db6415: Verifying Checksum
2025-08-19T12:25:09.4273033Z 7264a8db6415: Download complete
2025-08-19T12:25:09.4860599Z 64dfa579cd50: Verifying Checksum
2025-08-19T12:25:09.4861181Z 64dfa579cd50: Download complete
2025-08-19T12:25:09.5552487Z 7264a8db6415: Pull complete
2025-08-19T12:25:09.6004616Z afa58c10ee34: Download complete
2025-08-19T12:25:09.6861282Z a54df9278105: Verifying Checksum
2025-08-19T12:25:09.6862176Z a54df9278105: Download complete
2025-08-19T12:25:09.6988492Z cd87b3fa61f8: Verifying Checksum
2025-08-19T12:25:09.6991627Z cd87b3fa61f8: Download complete
2025-08-19T12:25:09.8831470Z 22d9c0f131ae: Verifying Checksum
2025-08-19T12:25:09.8832949Z 22d9c0f131ae: Download complete
2025-08-19T12:25:09.9530907Z e6455d0c4d0a: Verifying Checksum
2025-08-19T12:25:09.9531751Z e6455d0c4d0a: Download complete
2025-08-19T12:25:10.0497410Z bfa6cbe2a060: Download complete
2025-08-19T12:25:10.2029507Z 77aae498c7b4: Verifying Checksum
2025-08-19T12:25:10.2030400Z 77aae498c7b4: Download complete
2025-08-19T12:25:10.2831920Z 66e1d5e70e42: Pull complete
2025-08-19T12:25:10.3352152Z 4e6528b8b44b: Download complete
2025-08-19T12:25:10.4086541Z e68b04e3dc22: Download complete
2025-08-19T12:25:10.5386764Z e50eacad623d: Verifying Checksum
2025-08-19T12:25:10.5390967Z e50eacad623d: Download complete
2025-08-19T12:25:10.5980878Z 464938719a27: Verifying Checksum
2025-08-19T12:25:10.5981972Z 464938719a27: Download complete
2025-08-19T12:25:10.6528698Z f6a963258091: Verifying Checksum
2025-08-19T12:25:10.6529775Z f6a963258091: Download complete
2025-08-19T12:25:10.7403579Z c09dc33c2ea4: Verifying Checksum
2025-08-19T12:25:10.7404727Z c09dc33c2ea4: Download complete
2025-08-19T12:25:10.7871716Z 64dfa579cd50: Pull complete
2025-08-19T12:25:10.7971666Z afa58c10ee34: Pull complete
2025-08-19T12:25:10.8103678Z db70a1bf97d5: Verifying Checksum
2025-08-19T12:25:10.8105447Z db70a1bf97d5: Download complete
2025-08-19T12:25:10.8412788Z 5667267dbf96: Download complete
2025-08-19T12:25:10.9404844Z 55e5ab738d77: Verifying Checksum
2025-08-19T12:25:10.9405498Z 55e5ab738d77: Download complete
2025-08-19T12:25:11.0491959Z fbf9ea8fb0f3: Verifying Checksum
2025-08-19T12:25:11.0492514Z fbf9ea8fb0f3: Download complete
2025-08-19T12:25:11.0733131Z cd87b3fa61f8: Pull complete
2025-08-19T12:25:11.0810208Z a54df9278105: Pull complete
2025-08-19T12:25:11.1023162Z 22d9c0f131ae: Pull complete
2025-08-19T12:25:11.3346532Z bfa6cbe2a060: Pull complete
2025-08-19T12:25:12.1978173Z e6455d0c4d0a: Pull complete
2025-08-19T12:25:13.4518968Z 4e6528b8b44b: Pull complete
2025-08-19T12:25:13.4611424Z 77aae498c7b4: Pull complete
2025-08-19T12:25:14.0446931Z f6a963258091: Pull complete
2025-08-19T12:25:14.0535986Z e68b04e3dc22: Pull complete
2025-08-19T12:25:14.0611160Z e50eacad623d: Pull complete
2025-08-19T12:25:14.0713205Z 464938719a27: Pull complete
2025-08-19T12:25:14.0845660Z c09dc33c2ea4: Pull complete
2025-08-19T12:25:14.0928503Z db70a1bf97d5: Pull complete
2025-08-19T12:25:14.1017071Z 5667267dbf96: Pull complete
2025-08-19T12:25:14.1100808Z 55e5ab738d77: Pull complete
2025-08-19T12:25:14.1327332Z fbf9ea8fb0f3: Pull complete
2025-08-19T12:25:14.1361347Z Digest: sha256:2ed984f89000f77516016248700ad91681cb89bbe2adbdecd1d38dc84394adbb
2025-08-19T12:25:14.1372103Z Status: Downloaded newer image for returntocorp/semgrep-agent:v1
2025-08-19T12:25:14.1413994Z docker.io/returntocorp/semgrep-agent:v1
2025-08-19T12:25:14.1437442Z ##[endgroup]
2025-08-19T12:25:14.1475921Z ##[group]Build container for action use: '/home/runner/work/_actions/dependency-check/Dependency-Check_Action/main/Dockerfile'.
2025-08-19T12:25:14.1481885Z ##[command]/usr/bin/docker build -t 903624:6a8c2e90f5de47edbd9ab82125c24e38 -f "/home/runner/work/_actions/dependency-check/Dependency-Check_Action/main/Dockerfile" "/home/runner/work/_actions/dependency-check/Dependency-Check_Action/main"
2025-08-19T12:25:16.3864364Z #0 building with "default" instance using docker driver
2025-08-19T12:25:16.3864826Z 
2025-08-19T12:25:16.3865172Z #1 [internal] load build definition from Dockerfile
2025-08-19T12:25:16.3865711Z #1 transferring dockerfile: 631B done
2025-08-19T12:25:16.3866243Z #1 DONE 0.0s
2025-08-19T12:25:16.3866447Z 
2025-08-19T12:25:16.3866792Z #2 [auth] owasp/dependency-check-action:pull token for registry-1.docker.io
2025-08-19T12:25:16.5365854Z #2 DONE 0.0s
2025-08-19T12:25:16.5366149Z 
2025-08-19T12:25:16.5366667Z #3 [internal] load metadata for docker.io/owasp/dependency-check-action:latest
2025-08-19T12:25:16.8258580Z #3 DONE 0.6s
2025-08-19T12:25:16.9488246Z 
2025-08-19T12:25:16.9488672Z #4 [internal] load .dockerignore
2025-08-19T12:25:16.9489138Z #4 transferring context: 2B done
2025-08-19T12:25:16.9489499Z #4 DONE 0.0s
2025-08-19T12:25:16.9489706Z 
2025-08-19T12:25:16.9489863Z #5 [internal] load build context
2025-08-19T12:25:16.9490327Z #5 transferring context: 136B done
2025-08-19T12:25:16.9490746Z #5 DONE 0.0s
2025-08-19T12:25:16.9490874Z 
2025-08-19T12:25:16.9491376Z #6 [1/3] FROM docker.io/owasp/dependency-check-action:latest@sha256:327342634059eaa597815b5ebd1c73fd5bef6157e277ccbc113b4e6efd7e0943
2025-08-19T12:25:16.9492494Z #6 resolve docker.io/owasp/dependency-check-action:latest@sha256:327342634059eaa597815b5ebd1c73fd5bef6157e277ccbc113b4e6efd7e0943 done
2025-08-19T12:25:16.9493486Z #6 sha256:a48106d553a8f37683d50fc82e00037d537de6a04d0f2beedb4ae586f9171a37 9.47kB / 9.47kB done
2025-08-19T12:25:16.9494519Z #6 sha256:619be1103602d98e1963557998c954c892b3872986c27365e9f651f5bc27cab8 0B / 3.40MB 0.1s
2025-08-19T12:25:16.9495259Z #6 sha256:cceb4befa491c3767afaa6af498fc78e7a724c29c577317890987c2ad467b680 0B / 3.09MB 0.1s
2025-08-19T12:25:16.9495983Z #6 sha256:3e3762385f229926114f644db8c313a1b55517d678b5879ab9c39f2a9989abcd 0B / 1.24kB 0.1s
2025-08-19T12:25:16.9496553Z #6 sha256:327342634059eaa597815b5ebd1c73fd5bef6157e277ccbc113b4e6efd7e0943 2.63kB / 2.63kB done
2025-08-19T12:25:17.0653038Z #6 sha256:619be1103602d98e1963557998c954c892b3872986c27365e9f651f5bc27cab8 3.40MB / 3.40MB 0.2s done
2025-08-19T12:25:17.0654068Z #6 sha256:3e3762385f229926114f644db8c313a1b55517d678b5879ab9c39f2a9989abcd 1.24kB / 1.24kB 0.2s done
2025-08-19T12:25:17.0654817Z #6 extracting sha256:619be1103602d98e1963557998c954c892b3872986c27365e9f651f5bc27cab8 0.1s done
2025-08-19T12:25:17.0655441Z #6 sha256:86e65beaa5918cd0bdec672c0561e37cb894455cfda278de5c4c78e3335ad8f0 0B / 32.25MB 0.2s
2025-08-19T12:25:17.0656164Z #6 sha256:45ddd00e34dd292e9160aa703aff0bff2950fc06cb5272dea967325de2e941ae 0B / 44.09MB 0.2s
2025-08-19T12:25:17.1790073Z #6 sha256:cceb4befa491c3767afaa6af498fc78e7a724c29c577317890987c2ad467b680 3.09MB / 3.09MB 0.3s done
2025-08-19T12:25:17.1794594Z #6 extracting sha256:cceb4befa491c3767afaa6af498fc78e7a724c29c577317890987c2ad467b680 0.0s done
2025-08-19T12:25:17.1798201Z #6 sha256:7bd0a72d0e6ae9a7bcf5f3131817f93f19914ccf94d1c052ee9903a452f72b47 0B / 78.98MB 0.3s
2025-08-19T12:25:17.1799225Z #6 extracting sha256:3e3762385f229926114f644db8c313a1b55517d678b5879ab9c39f2a9989abcd
2025-08-19T12:25:17.3381669Z #6 sha256:86e65beaa5918cd0bdec672c0561e37cb894455cfda278de5c4c78e3335ad8f0 19.92MB / 32.25MB 0.4s
2025-08-19T12:25:17.3387837Z #6 sha256:45ddd00e34dd292e9160aa703aff0bff2950fc06cb5272dea967325de2e941ae 8.39MB / 44.09MB 0.4s
2025-08-19T12:25:17.3390303Z #6 sha256:7bd0a72d0e6ae9a7bcf5f3131817f93f19914ccf94d1c052ee9903a452f72b47 4.19MB / 78.98MB 0.4s
2025-08-19T12:25:17.3392279Z #6 extracting sha256:3e3762385f229926114f644db8c313a1b55517d678b5879ab9c39f2a9989abcd done
2025-08-19T12:25:17.3393888Z #6 extracting sha256:86e65beaa5918cd0bdec672c0561e37cb894455cfda278de5c4c78e3335ad8f0
2025-08-19T12:25:17.4399740Z #6 sha256:86e65beaa5918cd0bdec672c0561e37cb894455cfda278de5c4c78e3335ad8f0 32.25MB / 32.25MB 0.5s done
2025-08-19T12:25:17.4401063Z #6 sha256:45ddd00e34dd292e9160aa703aff0bff2950fc06cb5272dea967325de2e941ae 15.73MB / 44.09MB 0.5s
2025-08-19T12:25:17.4402235Z #6 sha256:7bd0a72d0e6ae9a7bcf5f3131817f93f19914ccf94d1c052ee9903a452f72b47 14.68MB / 78.98MB 0.5s
2025-08-19T12:25:17.4404564Z #6 sha256:43c57f8bbf131e1db9ee428171fdea2d8a55c342f9d1e229fc2c21c92fc50ebd 0B / 37.05MB 0.5s
2025-08-19T12:25:17.5407852Z #6 sha256:45ddd00e34dd292e9160aa703aff0bff2950fc06cb5272dea967325de2e941ae 23.07MB / 44.09MB 0.6s
2025-08-19T12:25:17.5415271Z #6 sha256:7bd0a72d0e6ae9a7bcf5f3131817f93f19914ccf94d1c052ee9903a452f72b47 25.17MB / 78.98MB 0.6s
2025-08-19T12:25:17.5416385Z #6 sha256:43c57f8bbf131e1db9ee428171fdea2d8a55c342f9d1e229fc2c21c92fc50ebd 5.24MB / 37.05MB 0.6s
2025-08-19T12:25:17.6425665Z #6 sha256:45ddd00e34dd292e9160aa703aff0bff2950fc06cb5272dea967325de2e941ae 27.26MB / 44.09MB 0.7s
2025-08-19T12:25:17.6426823Z #6 sha256:7bd0a72d0e6ae9a7bcf5f3131817f93f19914ccf94d1c052ee9903a452f72b47 38.80MB / 78.98MB 0.7s
2025-08-19T12:25:17.6427926Z #6 sha256:43c57f8bbf131e1db9ee428171fdea2d8a55c342f9d1e229fc2c21c92fc50ebd 18.87MB / 37.05MB 0.7s
2025-08-19T12:25:17.7440415Z #6 sha256:7bd0a72d0e6ae9a7bcf5f3131817f93f19914ccf94d1c052ee9903a452f72b47 49.28MB / 78.98MB 0.8s
2025-08-19T12:25:17.7441643Z #6 sha256:43c57f8bbf131e1db9ee428171fdea2d8a55c342f9d1e229fc2c21c92fc50ebd 37.05MB / 37.05MB 0.8s
2025-08-19T12:25:17.8492696Z #6 sha256:45ddd00e34dd292e9160aa703aff0bff2950fc06cb5272dea967325de2e941ae 33.55MB / 44.09MB 1.0s
2025-08-19T12:25:17.8494093Z #6 sha256:7bd0a72d0e6ae9a7bcf5f3131817f93f19914ccf94d1c052ee9903a452f72b47 67.11MB / 78.98MB 0.9s
2025-08-19T12:25:17.8494734Z #6 extracting sha256:86e65beaa5918cd0bdec672c0561e37cb894455cfda278de5c4c78e3335ad8f0 0.5s done
2025-08-19T12:25:17.8495384Z #6 sha256:43c57f8bbf131e1db9ee428171fdea2d8a55c342f9d1e229fc2c21c92fc50ebd 37.05MB / 37.05MB 0.8s done
2025-08-19T12:25:17.8496014Z #6 sha256:6a01d4b2139c6ae8b6b93432a8b0297e818c2f8516dc418e9fc0dd35f101af0a 17.83MB / 90.98MB 1.0s
2025-08-19T12:25:18.0481945Z #6 sha256:45ddd00e34dd292e9160aa703aff0bff2950fc06cb5272dea967325de2e941ae 36.70MB / 44.09MB 1.2s
2025-08-19T12:25:18.0482836Z #6 sha256:7bd0a72d0e6ae9a7bcf5f3131817f93f19914ccf94d1c052ee9903a452f72b47 78.98MB / 78.98MB 1.0s done
2025-08-19T12:25:18.0483661Z #6 sha256:6a01d4b2139c6ae8b6b93432a8b0297e818c2f8516dc418e9fc0dd35f101af0a 29.36MB / 90.98MB 1.2s
2025-08-19T12:25:18.0484667Z #6 sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1 0B / 32B 1.2s
2025-08-19T12:25:18.1484743Z #6 sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1 32B / 32B 1.2s done
2025-08-19T12:25:18.1485486Z #6 sha256:5760c89e07714b82733d6a984449296731b17907fece9a3030b50d70252ca109 0B / 95B 1.3s
2025-08-19T12:25:18.3484285Z #6 sha256:45ddd00e34dd292e9160aa703aff0bff2950fc06cb5272dea967325de2e941ae 40.89MB / 44.09MB 1.5s
2025-08-19T12:25:18.3486768Z #6 sha256:6a01d4b2139c6ae8b6b93432a8b0297e818c2f8516dc418e9fc0dd35f101af0a 35.65MB / 90.98MB 1.5s
2025-08-19T12:25:18.3488874Z #6 sha256:5760c89e07714b82733d6a984449296731b17907fece9a3030b50d70252ca109 95B / 95B 1.3s done
2025-08-19T12:25:18.3489799Z #6 sha256:37f6d4265e844579cb629fcbd090415d48327f28732fd49fa221ec03ab5b7b12 15.73MB / 115.67MB 1.5s
2025-08-19T12:25:18.5486863Z #6 sha256:45ddd00e34dd292e9160aa703aff0bff2950fc06cb5272dea967325de2e941ae 44.09MB / 44.09MB 1.7s
2025-08-19T12:25:18.5487771Z #6 sha256:6a01d4b2139c6ae8b6b93432a8b0297e818c2f8516dc418e9fc0dd35f101af0a 62.97MB / 90.98MB 1.7s
2025-08-19T12:25:18.5488988Z #6 sha256:37f6d4265e844579cb629fcbd090415d48327f28732fd49fa221ec03ab5b7b12 29.36MB / 115.67MB 1.7s
2025-08-19T12:25:18.6949984Z #6 sha256:45ddd00e34dd292e9160aa703aff0bff2950fc06cb5272dea967325de2e941ae 44.09MB / 44.09MB 1.7s done
2025-08-19T12:25:18.6955226Z #6 sha256:6a01d4b2139c6ae8b6b93432a8b0297e818c2f8516dc418e9fc0dd35f101af0a 81.79MB / 90.98MB 1.8s
2025-08-19T12:25:18.6957637Z #6 sha256:37f6d4265e844579cb629fcbd090415d48327f28732fd49fa221ec03ab5b7b12 41.94MB / 115.67MB 1.8s
2025-08-19T12:25:18.6959640Z #6 extracting sha256:45ddd00e34dd292e9160aa703aff0bff2950fc06cb5272dea967325de2e941ae 0.1s
2025-08-19T12:25:18.7965082Z #6 sha256:6a01d4b2139c6ae8b6b93432a8b0297e818c2f8516dc418e9fc0dd35f101af0a 90.98MB / 90.98MB 1.9s done
2025-08-19T12:25:18.7969747Z #6 sha256:37f6d4265e844579cb629fcbd090415d48327f28732fd49fa221ec03ab5b7b12 51.38MB / 115.67MB 1.9s
2025-08-19T12:25:18.8969941Z #6 sha256:37f6d4265e844579cb629fcbd090415d48327f28732fd49fa221ec03ab5b7b12 60.82MB / 115.67MB 2.0s
2025-08-19T12:25:19.0072314Z #6 sha256:37f6d4265e844579cb629fcbd090415d48327f28732fd49fa221ec03ab5b7b12 68.16MB / 115.67MB 2.1s
2025-08-19T12:25:19.0073473Z #6 extracting sha256:45ddd00e34dd292e9160aa703aff0bff2950fc06cb5272dea967325de2e941ae 0.3s done
2025-08-19T12:25:19.0074597Z #6 extracting sha256:7bd0a72d0e6ae9a7bcf5f3131817f93f19914ccf94d1c052ee9903a452f72b47
2025-08-19T12:25:19.2106250Z #6 sha256:37f6d4265e844579cb629fcbd090415d48327f28732fd49fa221ec03ab5b7b12 77.59MB / 115.67MB 2.3s
2025-08-19T12:25:19.3152064Z #6 sha256:37f6d4265e844579cb629fcbd090415d48327f28732fd49fa221ec03ab5b7b12 83.89MB / 115.67MB 2.4s
2025-08-19T12:25:19.5230389Z #6 sha256:37f6d4265e844579cb629fcbd090415d48327f28732fd49fa221ec03ab5b7b12 90.18MB / 115.67MB 2.6s
2025-08-19T12:25:19.6477772Z #6 sha256:37f6d4265e844579cb629fcbd090415d48327f28732fd49fa221ec03ab5b7b12 103.81MB / 115.67MB 2.8s
2025-08-19T12:25:19.7478093Z #6 sha256:37f6d4265e844579cb629fcbd090415d48327f28732fd49fa221ec03ab5b7b12 113.25MB / 115.67MB 2.9s
2025-08-19T12:25:19.9492041Z #6 sha256:37f6d4265e844579cb629fcbd090415d48327f28732fd49fa221ec03ab5b7b12 115.67MB / 115.67MB 2.9s done
2025-08-19T12:25:23.4033076Z #6 extracting sha256:7bd0a72d0e6ae9a7bcf5f3131817f93f19914ccf94d1c052ee9903a452f72b47 4.4s done
2025-08-19T12:25:24.1071671Z #6 extracting sha256:43c57f8bbf131e1db9ee428171fdea2d8a55c342f9d1e229fc2c21c92fc50ebd
2025-08-19T12:25:24.3215892Z #6 extracting sha256:43c57f8bbf131e1db9ee428171fdea2d8a55c342f9d1e229fc2c21c92fc50ebd 0.1s done
2025-08-19T12:25:24.3217038Z #6 extracting sha256:6a01d4b2139c6ae8b6b93432a8b0297e818c2f8516dc418e9fc0dd35f101af0a
2025-08-19T12:25:26.8514980Z #6 extracting sha256:6a01d4b2139c6ae8b6b93432a8b0297e818c2f8516dc418e9fc0dd35f101af0a 2.4s done
2025-08-19T12:25:26.9814706Z #6 extracting sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1
2025-08-19T12:25:27.1145859Z #6 extracting sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1 done
2025-08-19T12:25:27.1146948Z #6 extracting sha256:5760c89e07714b82733d6a984449296731b17907fece9a3030b50d70252ca109 done
2025-08-19T12:25:27.1147936Z #6 extracting sha256:37f6d4265e844579cb629fcbd090415d48327f28732fd49fa221ec03ab5b7b12 0.1s
2025-08-19T12:25:28.2761214Z #6 extracting sha256:37f6d4265e844579cb629fcbd090415d48327f28732fd49fa221ec03ab5b7b12 1.1s done
2025-08-19T12:25:28.4792296Z #6 DONE 11.6s
2025-08-19T12:25:28.6511823Z 
2025-08-19T12:25:28.6512306Z #7 [2/3] COPY entrypoint.sh /entrypoint.sh
2025-08-19T12:25:28.6512751Z #7 DONE 0.0s
2025-08-19T12:25:28.6512919Z 
2025-08-19T12:25:28.6513044Z #8 [3/3] RUN chmod +x /entrypoint.sh
2025-08-19T12:25:28.7062683Z #8 DONE 0.2s
2025-08-19T12:25:28.8579333Z 
2025-08-19T12:25:28.8579774Z #9 exporting to image
2025-08-19T12:25:28.8580186Z #9 exporting layers
2025-08-19T12:25:29.7930161Z #9 exporting layers 1.1s done
2025-08-19T12:25:29.8091242Z #9 writing image sha256:d79e161f42b2035cfe2a9a3aa16ae41b4d0938eec72f5d797ea514c447f28fe1 done
2025-08-19T12:25:29.8092236Z #9 naming to docker.io/library/903624:6a8c2e90f5de47edbd9ab82125c24e38 done
2025-08-19T12:25:29.8093190Z #9 DONE 1.1s
2025-08-19T12:25:29.8142418Z ##[endgroup]
2025-08-19T12:25:29.8345490Z ##[group]Run step-security/harden-runner@v2
2025-08-19T12:25:29.8346171Z with:
2025-08-19T12:25:29.8346367Z   egress-policy: audit
2025-08-19T12:25:29.8346904Z   allowed-endpoints: api.github.com:443 github.com:443 golang.org:443 proxy.golang.org:443 sum.golang.org:443 objects.githubusercontent.com:443

2025-08-19T12:25:29.8347636Z   token: ***
2025-08-19T12:25:29.8347833Z   disable-telemetry: false
2025-08-19T12:25:29.8348039Z   disable-sudo: false
2025-08-19T12:25:29.8348247Z   disable-sudo-and-containers: false
2025-08-19T12:25:29.8348494Z   disable-file-monitoring: false
2025-08-19T12:25:29.8348896Z env:
2025-08-19T12:25:29.8349060Z   GO_VERSION: 1.24
2025-08-19T12:25:29.8349231Z   REGISTRY: ghcr.io
2025-08-19T12:25:29.8349431Z   IMAGE_NAME: nephoran/conductor-loop
2025-08-19T12:25:29.8349667Z   SECURITY_SCAN_LEVEL: standard
2025-08-19T12:25:29.8349876Z ##[endgroup]
2025-08-19T12:25:30.0096147Z [harden-runner] pre-step
2025-08-19T12:25:30.0099785Z [!] Current Configuration: 
2025-08-19T12:25:30.0102789Z {"repo":"thc1006/nephoran-intent-operator","run_id":"17069476080","correlation_id":"6e3e7f24-3ed1-4264-abc7-214bf28d2d2f","working_directory":"/home/runner/work/nephoran-intent-operator/nephoran-intent-operator","api_url":"https://agent.api.stepsecurity.io/v1","allowed_endpoints":"api.github.com:443 github.com:443 golang.org:443 proxy.golang.org:443 sum.golang.org:443 objects.githubusercontent.com:443","egress_policy":"audit","disable_telemetry":false,"disable_sudo":false,"disable_sudo_and_containers":false,"disable_file_monitoring":false,"private":false,"is_github_hosted":true,"is_debug":false,"one_time_key":""}
2025-08-19T12:25:30.0104983Z 
2025-08-19T12:25:30.0105419Z [32mView security insights and recommended policy at:[0m
2025-08-19T12:25:30.0105941Z https://app.stepsecurity.io/github/thc1006/nephoran-intent-operator/actions/runs/17069476080
2025-08-19T12:25:30.0106399Z RUNNER_NAME: GitHub Actions 1000010459
2025-08-19T12:25:30.8269614Z Runner IP Address: 52.154.131.98
2025-08-19T12:25:30.8270365Z Step Security Job Correlation ID: 6e3e7f24-3ed1-4264-abc7-214bf28d2d2f
2025-08-19T12:25:30.8481330Z [!] Checking TLS_STATUS: thc1006
2025-08-19T12:25:31.0370277Z [!] TLS_NOT_ENABLED: thc1006
2025-08-19T12:25:31.3623103Z [command]/usr/bin/tar xz --warning=no-unknown-keyword --overwrite -C /home/runner/work/_temp/c6fefb1d-c0ea-44f5-8a26-f4d4e27d09b9 -f /home/runner/work/_temp/5a205feb-ed94-41b8-b1bc-14611f5029ce
2025-08-19T12:25:34.4200235Z Initialized
2025-08-19T12:25:34.4355402Z ##[group]Run step-security/harden-runner@v2
2025-08-19T12:25:34.4355694Z with:
2025-08-19T12:25:34.4355875Z   egress-policy: audit
2025-08-19T12:25:34.4356389Z   allowed-endpoints: api.github.com:443 github.com:443 golang.org:443 proxy.golang.org:443 sum.golang.org:443 objects.githubusercontent.com:443

2025-08-19T12:25:34.4357041Z   token: ***
2025-08-19T12:25:34.4357224Z   disable-telemetry: false
2025-08-19T12:25:34.4357445Z   disable-sudo: false
2025-08-19T12:25:34.4357655Z   disable-sudo-and-containers: false
2025-08-19T12:25:34.4358083Z   disable-file-monitoring: false
2025-08-19T12:25:34.4358380Z env:
2025-08-19T12:25:34.4358627Z   GO_VERSION: 1.24
2025-08-19T12:25:34.4358843Z   REGISTRY: ghcr.io
2025-08-19T12:25:34.4359211Z   IMAGE_NAME: nephoran/conductor-loop
2025-08-19T12:25:34.4359505Z   SECURITY_SCAN_LEVEL: standard
2025-08-19T12:25:34.4359839Z   STATE_disableSudo: false
2025-08-19T12:25:34.4360217Z   STATE_disableSudoAndContainers: false
2025-08-19T12:25:34.4360644Z   STATE_monitorStatusCode: 200
2025-08-19T12:25:34.4360957Z   STATE_addSummary: false
2025-08-19T12:25:34.4361325Z   STATE_correlation_id: 6e3e7f24-3ed1-4264-abc7-214bf28d2d2f
2025-08-19T12:25:34.4361738Z   STATE_isTLS: false
2025-08-19T12:25:34.4362008Z ##[endgroup]
2025-08-19T12:25:34.5108626Z [harden-runner] main-step
2025-08-19T12:25:34.5116405Z [32mView security insights and recommended policy at:[0m
2025-08-19T12:25:34.5117646Z https://app.stepsecurity.io/github/thc1006/nephoran-intent-operator/actions/runs/17069476080
2025-08-19T12:25:34.5270026Z ##[group]Run actions/checkout@v4
2025-08-19T12:25:34.5270281Z with:
2025-08-19T12:25:34.5270455Z   fetch-depth: 0
2025-08-19T12:25:34.5270681Z   repository: thc1006/nephoran-intent-operator
2025-08-19T12:25:34.5271064Z   token: ***
2025-08-19T12:25:34.5271239Z   ssh-strict: true
2025-08-19T12:25:34.5271421Z   ssh-user: git
2025-08-19T12:25:34.5271607Z   persist-credentials: true
2025-08-19T12:25:34.5271821Z   clean: true
2025-08-19T12:25:34.5272007Z   sparse-checkout-cone-mode: true
2025-08-19T12:25:34.5272244Z   fetch-tags: false
2025-08-19T12:25:34.5272428Z   show-progress: true
2025-08-19T12:25:34.5272605Z   lfs: false
2025-08-19T12:25:34.5272767Z   submodules: false
2025-08-19T12:25:34.5272948Z   set-safe-directory: true
2025-08-19T12:25:34.5273146Z env:
2025-08-19T12:25:34.5273295Z   GO_VERSION: 1.24
2025-08-19T12:25:34.5273470Z   REGISTRY: ghcr.io
2025-08-19T12:25:34.5273662Z   IMAGE_NAME: nephoran/conductor-loop
2025-08-19T12:25:34.5274279Z   SECURITY_SCAN_LEVEL: standard
2025-08-19T12:25:34.5274530Z ##[endgroup]
2025-08-19T12:25:34.6353064Z Syncing repository: thc1006/nephoran-intent-operator
2025-08-19T12:25:34.6355096Z ##[group]Getting Git version info
2025-08-19T12:25:34.6356093Z Working directory is '/home/runner/work/nephoran-intent-operator/nephoran-intent-operator'
2025-08-19T12:25:34.6357417Z [command]/usr/bin/git version
2025-08-19T12:25:34.6770962Z git version 2.50.1
2025-08-19T12:25:34.6801399Z ##[endgroup]
2025-08-19T12:25:34.6828016Z Temporarily overriding HOME='/home/runner/work/_temp/07c20f07-87e7-4c23-aa5d-2ce184b61f73' before making global git config changes
2025-08-19T12:25:34.6829343Z Adding repository directory to the temporary git global config as a safe directory
2025-08-19T12:25:34.6835096Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/nephoran-intent-operator/nephoran-intent-operator
2025-08-19T12:25:34.6923364Z Deleting the contents of '/home/runner/work/nephoran-intent-operator/nephoran-intent-operator'
2025-08-19T12:25:34.6927743Z ##[group]Initializing the repository
2025-08-19T12:25:34.6932905Z [command]/usr/bin/git init /home/runner/work/nephoran-intent-operator/nephoran-intent-operator
2025-08-19T12:25:34.7627778Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-08-19T12:25:34.7628913Z hint: is subject to change. To configure the initial branch name to use in all
2025-08-19T12:25:34.7629780Z hint: of your new repositories, which will suppress this warning, call:
2025-08-19T12:25:34.7630129Z hint:
2025-08-19T12:25:34.7630388Z hint: 	git config --global init.defaultBranch <name>
2025-08-19T12:25:34.7630671Z hint:
2025-08-19T12:25:34.7630940Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-08-19T12:25:34.7631387Z hint: 'development'. The just-created branch can be renamed via this command:
2025-08-19T12:25:34.7631714Z hint:
2025-08-19T12:25:34.7631907Z hint: 	git branch -m <name>
2025-08-19T12:25:34.7632145Z hint:
2025-08-19T12:25:34.7632448Z hint: Disable this message with "git config set advice.defaultBranchName false"
2025-08-19T12:25:34.7665537Z Initialized empty Git repository in /home/runner/work/nephoran-intent-operator/nephoran-intent-operator/.git/
2025-08-19T12:25:34.7680117Z [command]/usr/bin/git remote add origin https://github.com/thc1006/nephoran-intent-operator
2025-08-19T12:25:34.7760870Z ##[endgroup]
2025-08-19T12:25:34.7761494Z ##[group]Disabling automatic garbage collection
2025-08-19T12:25:34.7766817Z [command]/usr/bin/git config --local gc.auto 0
2025-08-19T12:25:34.7803535Z ##[endgroup]
2025-08-19T12:25:34.7804224Z ##[group]Setting up auth
2025-08-19T12:25:34.7811739Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-08-19T12:25:34.7847875Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-08-19T12:25:34.9229408Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-08-19T12:25:34.9269568Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-08-19T12:25:34.9574514Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-08-19T12:25:34.9626192Z ##[endgroup]
2025-08-19T12:25:34.9627255Z ##[group]Fetching the repository
2025-08-19T12:25:34.9637504Z [command]/usr/bin/git -c protocol.version=2 fetch --prune --no-recurse-submodules origin +refs/heads/*:refs/remotes/origin/* +refs/tags/*:refs/tags/*
2025-08-19T12:25:42.9691905Z From https://github.com/thc1006/nephoran-intent-operator
2025-08-19T12:25:42.9694319Z  * [new branch]        chore/claude-commands-and-hooks -> origin/chore/claude-commands-and-hooks
2025-08-19T12:25:42.9696996Z  * [new branch]        chore/conductor-governance -> origin/chore/conductor-governance
2025-08-19T12:25:42.9699205Z  * [new branch]        chore/conductor-setup  -> origin/chore/conductor-setup
2025-08-19T12:25:42.9700482Z  * [new branch]        chore/repo-hygiene     -> origin/chore/repo-hygiene
2025-08-19T12:25:42.9705731Z  * [new branch]        dependabot/github_actions/actions/configure-pages-5 -> origin/dependabot/github_actions/actions/configure-pages-5
2025-08-19T12:25:42.9711165Z  * [new branch]        dependabot/github_actions/codecov/codecov-action-5 -> origin/dependabot/github_actions/codecov/codecov-action-5
2025-08-19T12:25:42.9716351Z  * [new branch]        dependabot/github_actions/golangci/golangci-lint-action-8 -> origin/dependabot/github_actions/golangci/golangci-lint-action-8
2025-08-19T12:25:42.9722960Z  * [new branch]        dependabot/github_actions/hashicorp/setup-terraform-3 -> origin/dependabot/github_actions/hashicorp/setup-terraform-3
2025-08-19T12:25:42.9727880Z  * [new branch]        dependabot/github_actions/helm/kind-action-1.12.0 -> origin/dependabot/github_actions/helm/kind-action-1.12.0
2025-08-19T12:25:42.9734683Z  * [new branch]        dependabot/go_modules/cloud.google.com/go/compute-1.43.0 -> origin/dependabot/go_modules/cloud.google.com/go/compute-1.43.0
2025-08-19T12:25:42.9740924Z  * [new branch]        dependabot/go_modules/cloud.google.com/go/container-1.44.0 -> origin/dependabot/go_modules/cloud.google.com/go/container-1.44.0
2025-08-19T12:25:42.9746262Z  * [new branch]        dependabot/go_modules/github.com/Azure/azure-sdk-for-go/sdk/azcore-1.18.2 -> origin/dependabot/go_modules/github.com/Azure/azure-sdk-for-go/sdk/azcore-1.18.2
2025-08-19T12:25:42.9751052Z  * [new branch]        dependabot/go_modules/github.com/aws/aws-sdk-go-v2-1.38.0 -> origin/dependabot/go_modules/github.com/aws/aws-sdk-go-v2-1.38.0
2025-08-19T12:25:42.9757985Z  * [new branch]        dependabot/go_modules/github.com/aws/aws-sdk-go-v2/credentials-1.18.4 -> origin/dependabot/go_modules/github.com/aws/aws-sdk-go-v2/credentials-1.18.4
2025-08-19T12:25:42.9763591Z  * [new branch]        dependabot/go_modules/github.com/aws/aws-sdk-go-v2/service/sts-1.37.0 -> origin/dependabot/go_modules/github.com/aws/aws-sdk-go-v2/service/sts-1.37.0
2025-08-19T12:25:42.9770274Z  * [new branch]        dependabot/go_modules/go.opentelemetry.io/otel/exporters/prometheus-0.59.1 -> origin/dependabot/go_modules/go.opentelemetry.io/otel/exporters/prometheus-0.59.1
2025-08-19T12:25:42.9775957Z  * [new branch]        dependabot/go_modules/golang.org/x/net-0.43.0 -> origin/dependabot/go_modules/golang.org/x/net-0.43.0
2025-08-19T12:25:42.9782520Z  * [new branch]        dependabot/go_modules/helm.sh/helm/v3-3.18.5 -> origin/dependabot/go_modules/helm.sh/helm/v3-3.18.5
2025-08-19T12:25:42.9787172Z  * [new branch]        dependabot/go_modules/k8s.io/client-go-0.33.4 -> origin/dependabot/go_modules/k8s.io/client-go-0.33.4
2025-08-19T12:25:42.9792001Z  * [new branch]        feat/a1-policy-sim     -> origin/feat/a1-policy-sim
2025-08-19T12:25:42.9796190Z  * [new branch]        feat/admission-webhook -> origin/feat/admission-webhook
2025-08-19T12:25:42.9800037Z  * [new branch]        feat/ci-guard          -> origin/feat/ci-guard
2025-08-19T12:25:42.9803856Z  * [new branch]        feat/conductor-file-watcher -> origin/feat/conductor-file-watcher
2025-08-19T12:25:42.9807428Z  * [new branch]        feat/conductor-loop    -> origin/feat/conductor-loop
2025-08-19T12:25:42.9811519Z  * [new branch]        feat/e2-kpm-sim        -> origin/feat/e2-kpm-sim
2025-08-19T12:25:42.9815951Z  * [new branch]        feat/e2e               -> origin/feat/e2e
2025-08-19T12:25:42.9819975Z  * [new branch]        feat/examples-mvp      -> origin/feat/examples-mvp
2025-08-19T12:25:42.9824118Z  * [new branch]        feat/ingest-llm        -> origin/feat/ingest-llm
2025-08-19T12:25:42.9828825Z  * [new branch]        feat/ingest-tests-and-errors -> origin/feat/ingest-tests-and-errors
2025-08-19T12:25:42.9832697Z  * [new branch]        feat/o1-ves-sim        -> origin/feat/o1-ves-sim
2025-08-19T12:25:42.9836692Z  * [new branch]        feat/planner           -> origin/feat/planner
2025-08-19T12:25:42.9840599Z  * [new branch]        feat/porch-direct      -> origin/feat/porch-direct
2025-08-19T12:25:42.9844780Z  * [new branch]        feat/porch-publisher   -> origin/feat/porch-publisher
2025-08-19T12:25:42.9849535Z  * [new branch]        feat/porch-structured-patch -> origin/feat/porch-structured-patch
2025-08-19T12:25:42.9852987Z  * [new branch]        feat/sim-fcaps-to-intent -> origin/feat/sim-fcaps-to-intent
2025-08-19T12:25:42.9857786Z  * [new branch]        feat/test-harness      -> origin/feat/test-harness
2025-08-19T12:25:42.9863530Z  * [new branch]        integrate/mvp          -> origin/integrate/mvp
2025-08-19T12:25:42.9867460Z  * [new branch]        main                   -> origin/main
2025-08-19T12:25:42.9870416Z  * [new tag]           backup/pre-cleanup-20250813234213 -> backup/pre-cleanup-20250813234213
2025-08-19T12:25:42.9873400Z  * [new tag]           v0.1.0-mvp             -> v0.1.0-mvp
2025-08-19T12:25:42.9931382Z [command]/usr/bin/git branch --list --remote origin/feat/conductor-loop
2025-08-19T12:25:42.9966095Z   origin/feat/conductor-loop
2025-08-19T12:25:42.9976334Z [command]/usr/bin/git rev-parse refs/remotes/origin/feat/conductor-loop
2025-08-19T12:25:43.0001141Z 02369cd823a3dfeb3e1b06e186676dafb39d9fb7
2025-08-19T12:25:43.0007348Z ##[endgroup]
2025-08-19T12:25:43.0007875Z ##[group]Determining the checkout info
2025-08-19T12:25:43.0008837Z ##[endgroup]
2025-08-19T12:25:43.0013615Z [command]/usr/bin/git sparse-checkout disable
2025-08-19T12:25:43.0060771Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-08-19T12:25:43.0091629Z ##[group]Checking out the ref
2025-08-19T12:25:43.0096957Z [command]/usr/bin/git checkout --progress --force -B feat/conductor-loop refs/remotes/origin/feat/conductor-loop
2025-08-19T12:25:43.4751763Z Switched to a new branch 'feat/conductor-loop'
2025-08-19T12:25:43.4752876Z branch 'feat/conductor-loop' set up to track 'origin/feat/conductor-loop'.
2025-08-19T12:25:43.4784200Z ##[endgroup]
2025-08-19T12:25:43.4830154Z [command]/usr/bin/git log -1 --format=%H
2025-08-19T12:25:43.4857342Z 02369cd823a3dfeb3e1b06e186676dafb39d9fb7
2025-08-19T12:25:43.4998111Z ##[group]Run actions/setup-go@v5
2025-08-19T12:25:43.4998380Z with:
2025-08-19T12:25:43.4998559Z   go-version: 1.24
2025-08-19T12:25:43.4998745Z   cache: true
2025-08-19T12:25:43.4998922Z   check-latest: false
2025-08-19T12:25:43.4999250Z   token: ***
2025-08-19T12:25:43.4999419Z env:
2025-08-19T12:25:43.4999583Z   GO_VERSION: 1.24
2025-08-19T12:25:43.4999762Z   REGISTRY: ghcr.io
2025-08-19T12:25:43.4999971Z   IMAGE_NAME: nephoran/conductor-loop
2025-08-19T12:25:43.5000219Z   SECURITY_SCAN_LEVEL: standard
2025-08-19T12:25:43.5000434Z ##[endgroup]
2025-08-19T12:25:43.6640836Z Setup go version spec 1.24
2025-08-19T12:25:43.6772842Z Found in cache @ /opt/hostedtoolcache/go/1.24.6/x64
2025-08-19T12:25:43.6778198Z Added go to the path
2025-08-19T12:25:43.6781594Z Successfully set up Go version 1.24
2025-08-19T12:25:44.1445390Z [command]/opt/hostedtoolcache/go/1.24.6/x64/bin/go env GOMODCACHE
2025-08-19T12:25:44.1482825Z [command]/opt/hostedtoolcache/go/1.24.6/x64/bin/go env GOCACHE
2025-08-19T12:25:44.1507883Z /home/runner/go/pkg/mod
2025-08-19T12:25:44.1532856Z /home/runner/.cache/go-build
2025-08-19T12:25:44.3378271Z Cache is not found
2025-08-19T12:25:44.3398218Z go version go1.24.6 linux/amd64
2025-08-19T12:25:44.3398504Z 
2025-08-19T12:25:44.3398915Z ##[group]go env
2025-08-19T12:25:44.9222021Z AR='ar'
2025-08-19T12:25:44.9222353Z CC='gcc'
2025-08-19T12:25:44.9222815Z CGO_CFLAGS='-O2 -g'
2025-08-19T12:25:44.9223140Z CGO_CPPFLAGS=''
2025-08-19T12:25:44.9223425Z CGO_CXXFLAGS='-O2 -g'
2025-08-19T12:25:44.9224001Z CGO_ENABLED='1'
2025-08-19T12:25:44.9224337Z CGO_FFLAGS='-O2 -g'
2025-08-19T12:25:44.9224636Z CGO_LDFLAGS='-O2 -g'
2025-08-19T12:25:44.9224931Z CXX='g++'
2025-08-19T12:25:44.9225248Z GCCGO='gccgo'
2025-08-19T12:25:44.9225531Z GO111MODULE=''
2025-08-19T12:25:44.9225833Z GOAMD64='v1'
2025-08-19T12:25:44.9226096Z GOARCH='amd64'
2025-08-19T12:25:44.9226358Z GOAUTH='netrc'
2025-08-19T12:25:44.9226626Z GOBIN=''
2025-08-19T12:25:44.9226950Z GOCACHE='/home/runner/.cache/go-build'
2025-08-19T12:25:44.9227372Z GOCACHEPROG=''
2025-08-19T12:25:44.9227671Z GODEBUG=''
2025-08-19T12:25:44.9227986Z GOENV='/home/runner/.config/go/env'
2025-08-19T12:25:44.9228378Z GOEXE=''
2025-08-19T12:25:44.9228655Z GOEXPERIMENT=''
2025-08-19T12:25:44.9228973Z GOFIPS140='off'
2025-08-19T12:25:44.9229266Z GOFLAGS=''
2025-08-19T12:25:44.9230339Z GOGCCFLAGS='-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -ffile-prefix-map=/tmp/go-build2945170904=/tmp/go-build -gno-record-gcc-switches'
2025-08-19T12:25:44.9231404Z GOHOSTARCH='amd64'
2025-08-19T12:25:44.9231729Z GOHOSTOS='linux'
2025-08-19T12:25:44.9232034Z GOINSECURE=''
2025-08-19T12:25:44.9232642Z GOMOD='/home/runner/work/nephoran-intent-operator/nephoran-intent-operator/go.mod'
2025-08-19T12:25:44.9233368Z GOMODCACHE='/home/runner/go/pkg/mod'
2025-08-19T12:25:44.9234054Z GONOPROXY=''
2025-08-19T12:25:44.9234370Z GONOSUMDB=''
2025-08-19T12:25:44.9234717Z GOOS='linux'
2025-08-19T12:25:44.9235042Z GOPATH='/home/runner/go'
2025-08-19T12:25:44.9235417Z GOPRIVATE=''
2025-08-19T12:25:44.9235823Z GOPROXY='https://proxy.golang.org,direct'
2025-08-19T12:25:44.9236358Z GOROOT='/opt/hostedtoolcache/go/1.24.6/x64'
2025-08-19T12:25:44.9236848Z GOSUMDB='sum.golang.org'
2025-08-19T12:25:44.9237227Z GOTELEMETRY='local'
2025-08-19T12:25:44.9237642Z GOTELEMETRYDIR='/home/runner/.config/go/telemetry'
2025-08-19T12:25:44.9238149Z GOTMPDIR=''
2025-08-19T12:25:44.9238457Z GOTOOLCHAIN='auto'
2025-08-19T12:25:44.9238993Z GOTOOLDIR='/opt/hostedtoolcache/go/1.24.6/x64/pkg/tool/linux_amd64'
2025-08-19T12:25:44.9239568Z GOVCS=''
2025-08-19T12:25:44.9239946Z GOVERSION='go1.24.6'
2025-08-19T12:25:44.9240304Z GOWORK=''
2025-08-19T12:25:44.9240624Z PKG_CONFIG='pkg-config'
2025-08-19T12:25:44.9240849Z 
2025-08-19T12:25:44.9241352Z ##[endgroup]
2025-08-19T12:25:44.9335166Z ##[group]Run go mod download
2025-08-19T12:25:44.9335488Z [36;1mgo mod download[0m
2025-08-19T12:25:44.9335702Z [36;1mgo mod verify[0m
2025-08-19T12:25:44.9379950Z shell: /usr/bin/bash -e {0}
2025-08-19T12:25:44.9380189Z env:
2025-08-19T12:25:44.9380357Z   GO_VERSION: 1.24
2025-08-19T12:25:44.9380537Z   REGISTRY: ghcr.io
2025-08-19T12:25:44.9380750Z   IMAGE_NAME: nephoran/conductor-loop
2025-08-19T12:25:44.9380996Z   SECURITY_SCAN_LEVEL: standard
2025-08-19T12:25:44.9381216Z ##[endgroup]
2025-08-19T12:26:12.8183105Z all modules verified
2025-08-19T12:26:12.8255808Z ##[group]Run semgrep/semgrep-action@v1
2025-08-19T12:26:12.8256104Z with:
2025-08-19T12:26:12.8256374Z   config: p/security-audit p/secrets p/golang p/docker p/kubernetes
2025-08-19T12:26:12.8256711Z env:
2025-08-19T12:26:12.8256867Z   GO_VERSION: 1.24
2025-08-19T12:26:12.8257049Z   REGISTRY: ghcr.io
2025-08-19T12:26:12.8257250Z   IMAGE_NAME: nephoran/conductor-loop
2025-08-19T12:26:12.8257495Z   SECURITY_SCAN_LEVEL: standard
2025-08-19T12:26:12.8257939Z   SEMGREP_APP_TOKEN: 
2025-08-19T12:26:12.8258121Z ##[endgroup]
2025-08-19T12:26:12.8360083Z ##[command]/usr/bin/docker run --name returntocorpsemgrepagentv1_847c53 --label 903624 --workdir /github/workspace --rm -e "GO_VERSION" -e "REGISTRY" -e "IMAGE_NAME" -e "SECURITY_SCAN_LEVEL" -e "SEMGREP_APP_TOKEN" -e "INPUT_CONFIG" -e "INPUT_PUBLISHTOKEN" -e "HOME" -e "GITHUB_JOB" -e "GITHUB_REF" -e "GITHUB_SHA" -e "GITHUB_REPOSITORY" -e "GITHUB_REPOSITORY_OWNER" -e "GITHUB_REPOSITORY_OWNER_ID" -e "GITHUB_RUN_ID" -e "GITHUB_RUN_NUMBER" -e "GITHUB_RETENTION_DAYS" -e "GITHUB_RUN_ATTEMPT" -e "GITHUB_ACTOR_ID" -e "GITHUB_ACTOR" -e "GITHUB_WORKFLOW" -e "GITHUB_HEAD_REF" -e "GITHUB_BASE_REF" -e "GITHUB_EVENT_NAME" -e "GITHUB_SERVER_URL" -e "GITHUB_API_URL" -e "GITHUB_GRAPHQL_URL" -e "GITHUB_REF_NAME" -e "GITHUB_REF_PROTECTED" -e "GITHUB_REF_TYPE" -e "GITHUB_WORKFLOW_REF" -e "GITHUB_WORKFLOW_SHA" -e "GITHUB_REPOSITORY_ID" -e "GITHUB_TRIGGERING_ACTOR" -e "GITHUB_WORKSPACE" -e "GITHUB_ACTION" -e "GITHUB_EVENT_PATH" -e "GITHUB_ACTION_REPOSITORY" -e "GITHUB_ACTION_REF" -e "GITHUB_PATH" -e "GITHUB_ENV" -e "GITHUB_STEP_SUMMARY" -e "GITHUB_STATE" -e "GITHUB_OUTPUT" -e "RUNNER_OS" -e "RUNNER_ARCH" -e "RUNNER_NAME" -e "RUNNER_ENVIRONMENT" -e "RUNNER_TOOL_CACHE" -e "RUNNER_TEMP" -e "RUNNER_WORKSPACE" -e "ACTIONS_RUNTIME_URL" -e "ACTIONS_RUNTIME_TOKEN" -e "ACTIONS_CACHE_URL" -e "ACTIONS_RESULTS_URL" -e GITHUB_ACTIONS=true -e CI=true -v "/var/run/docker.sock":"/var/run/docker.sock" -v "/home/runner/work/_temp/_github_home":"/github/home" -v "/home/runner/work/_temp/_github_workflow":"/github/workflow" -v "/home/runner/work/_temp/_runner_file_commands":"/github/file_commands" -v "/home/runner/work/nephoran-intent-operator/nephoran-intent-operator":"/github/workspace" returntocorp/semgrep-agent:v1
2025-08-19T12:26:16.4552704Z === Running: SEMGREP_RULES="p/security-audit p/secrets p/golang p/docker p/kubernetes" semgrep ci
2025-08-19T12:26:17.2742360Z                   
2025-08-19T12:26:17.2742694Z                   
2025-08-19T12:26:17.2743451Z ┌────────────────┐
2025-08-19T12:26:17.2743983Z │ Debugging Info │
2025-08-19T12:26:17.2744336Z └────────────────┘
2025-08-19T12:26:17.2746472Z                   
2025-08-19T12:26:17.2746853Z   SCAN ENVIRONMENT
2025-08-19T12:26:17.2768745Z   versions    - semgrep 1.36.0 on python 3.11.4                                
2025-08-19T12:26:17.2769708Z   environment - running in environment github-actions, triggering event is push
2025-08-19T12:26:18.9138902Z                
2025-08-19T12:26:18.9139314Z                
2025-08-19T12:26:18.9139812Z ┌─────────────┐
2025-08-19T12:26:18.9140086Z │ Scan Status │
2025-08-19T12:26:18.9140340Z └─────────────┘
2025-08-19T12:26:20.2737889Z   Scanning 2497 files tracked by git with 313 Code rules:
2025-08-19T12:26:20.2932623Z                                                                                 
2025-08-19T12:26:20.2933252Z   Language      Rules   Files          Origin      Rules                        
2025-08-19T12:26:20.2934258Z  ─────────────────────────────        ───────────────────                       
2025-08-19T12:26:20.2934721Z   <multilang>      38    4066          Community     313                        
2025-08-19T12:26:20.2935173Z   go               52     721                                                   
2025-08-19T12:26:20.2935571Z   yaml             13     525                                                   
2025-08-19T12:26:20.2935977Z   json              1     109                                                   
2025-08-19T12:26:20.2937018Z   python           77      20                                                   
2025-08-19T12:26:20.2937498Z   terraform         6      10                                                   
2025-08-19T12:26:20.2937960Z   dockerfile        7       3                                                   
2025-08-19T12:26:20.2938374Z   js               23       1                                                   
2025-08-19T12:26:20.2939535Z                                                                                 
2025-08-19T12:26:49.1679270Z                               
2025-08-19T12:26:49.1681426Z                               
2025-08-19T12:26:49.1682350Z ┌────────────────────────────┐
2025-08-19T12:26:49.1682829Z │ 318 Blocking Code Findings │
2025-08-19T12:26:49.1683375Z └────────────────────────────┘
2025-08-19T12:26:49.1684426Z                                          
2025-08-19T12:26:49.1685028Z     .claude/hooks/post_write_validate.py 
2025-08-19T12:26:49.1686111Z        python.lang.security.audit.subprocess-shell-true.subprocess-shell-true   
2025-08-19T12:26:49.1687307Z           Found 'subprocess' function 'check_output' with 'shell=True'. This is 
2025-08-19T12:26:49.1688285Z   dangerous because this                                                        
2025-08-19T12:26:49.1690761Z           call will spawn the command using a shell process. Doing so propagates
2025-08-19T12:26:49.1691511Z   current shell                                                                 
2025-08-19T12:26:49.1692514Z           settings and variables, which makes it much easier for a malicious    
2025-08-19T12:26:49.1693239Z   actor to execute                                                              
2025-08-19T12:26:49.1694376Z           commands. Use 'shell=False' instead.                                  
2025-08-19T12:26:49.1695394Z           Details: https://sg.run/J92w                                          
2025-08-19T12:26:49.1697304Z                                                                                 
2025-08-19T12:26:49.1698287Z            ▶▶┆ Autofix ▶ False
2025-08-19T12:26:49.1699317Z            22┆ out = subprocess.check_output(cmd, stderr=subprocess.STDOUT,     
2025-08-19T12:26:49.1700102Z   text=True, shell=True)                                                        
2025-08-19T12:26:49.1700693Z                    
2025-08-19T12:26:49.1701038Z     .gitleaks.toml 
2025-08-19T12:26:49.1701920Z        generic.secrets.security.detected-pgp-private-key-block.detected-pgp-priv
2025-08-19T12:26:49.1702815Z   ate-key-block                                                                 
2025-08-19T12:26:49.1703997Z           Something that looks like a PGP private key block is detected. This is
2025-08-19T12:26:49.1704835Z   a potential hardcoded                                                         
2025-08-19T12:26:49.1705903Z           secret that could be leaked if this code is committed. Instead, remove
2025-08-19T12:26:49.1706683Z   this code block from                                                          
2025-08-19T12:26:49.1707660Z           the commit.                                                           
2025-08-19T12:26:49.1708619Z           Details: https://sg.run/ydKd                                          
2025-08-19T12:26:49.1710580Z                                                                                 
2025-08-19T12:26:49.1711731Z            15┆ keywords = ["-----BEGIN PRIVATE KEY-----", "-----BEGIN RSA       
2025-08-19T12:26:49.1712575Z   PRIVATE KEY-----", "-----BEGIN EC PRIVATE KEY-----", "-----BEGIN PGP PRIVATE  
2025-08-19T12:26:49.1713323Z   KEY BLOCK-----"]                                                              
2025-08-19T12:26:49.1714201Z                                  
2025-08-19T12:26:49.1714656Z     archive/test-deployment.yaml 
2025-08-19T12:26:49.1715558Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.1716748Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.1717908Z   they  are properly                                                            
2025-08-19T12:26:49.1718944Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.1719759Z   vulnerability is when a                                                       
2025-08-19T12:26:49.1720821Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.1721886Z   could allow an attacker to                                                    
2025-08-19T12:26:49.1722927Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.1723814Z   recommended to  add a                                                         
2025-08-19T12:26:49.1724895Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.1725680Z   set to `true`. This                                                           
2025-08-19T12:26:49.1726692Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.1727483Z   damage that could be                                                          
2025-08-19T12:26:49.1728506Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.1729285Z   container in your                                                             
2025-08-19T12:26:49.1730293Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.1731127Z   applications are more secure                                                  
2025-08-19T12:26:49.1732303Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.1733350Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.1735395Z                                                                                 
2025-08-19T12:26:49.1736112Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.1736568Z     securityContext:          
2025-08-19T12:26:49.1737015Z       runAsNonRoot: true #    
2025-08-19T12:26:49.1737507Z            17┆ spec:
2025-08-19T12:26:49.1738394Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1739018Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.1739286Z     securityContext:          
2025-08-19T12:26:49.1739598Z       runAsNonRoot: true #    
2025-08-19T12:26:49.1739964Z            76┆ spec:
2025-08-19T12:26:49.1740454Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1741146Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.1741897Z   m-container                                                                   
2025-08-19T12:26:49.1742588Z           Container llm-processor is running with a writable root filesystem.   
2025-08-19T12:26:49.1743199Z   This may allow malicious                                                      
2025-08-19T12:26:49.1744041Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.1744487Z   container files. If an                                                        
2025-08-19T12:26:49.1745231Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.1745782Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.1746479Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.1747080Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.1748190Z                                                                                 
2025-08-19T12:26:49.1748601Z            19┆ - name: llm-processor
2025-08-19T12:26:49.1749059Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1749704Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.1750835Z   m-container                                                                   
2025-08-19T12:26:49.1751859Z           Container nephio-bridge is running with a writable root filesystem.   
2025-08-19T12:26:49.1752684Z   This may allow malicious                                                      
2025-08-19T12:26:49.1753887Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.1754713Z   container files. If an                                                        
2025-08-19T12:26:49.1756038Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.1756904Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.1758046Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.1759101Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.1761147Z                                                                                 
2025-08-19T12:26:49.1761931Z            79┆ - name: nephio-bridge
2025-08-19T12:26:49.1762474Z                        
2025-08-19T12:26:49.1762867Z     cmd/a1-sim/main.go 
2025-08-19T12:26:49.1763666Z        go.lang.security.audit.net.use-tls.use-tls                               
2025-08-19T12:26:49.1765016Z           Found an HTTP server without TLS. Use 'http.ListenAndServeTLS'        
2025-08-19T12:26:49.1765826Z   instead. See                                                                  
2025-08-19T12:26:49.1766909Z           https://golang.org/pkg/net/http/#ListenAndServeTLS for more           
2025-08-19T12:26:49.1767728Z   information.                                                                  
2025-08-19T12:26:49.1768745Z           Details: https://sg.run/dKbY                                          
2025-08-19T12:26:49.1770785Z                                                                                 
2025-08-19T12:26:49.1771928Z            ▶▶┆ Autofix ▶ http.ListenAndServeTLS(addr, certFile, keyFile, mux)
2025-08-19T12:26:49.1772898Z            16┆ log.Fatal(http.ListenAndServe(addr, mux))
2025-08-19T12:26:49.1773573Z                               
2025-08-19T12:26:49.1774148Z     cmd/fcaps-reducer/main.go 
2025-08-19T12:26:49.1774946Z        go.lang.security.audit.net.use-tls.use-tls                               
2025-08-19T12:26:49.1776076Z           Found an HTTP server without TLS. Use 'http.ListenAndServeTLS'        
2025-08-19T12:26:49.1776858Z   instead. See                                                                  
2025-08-19T12:26:49.1777886Z           https://golang.org/pkg/net/http/#ListenAndServeTLS for more           
2025-08-19T12:26:49.1778673Z   information.                                                                  
2025-08-19T12:26:49.1779794Z           Details: https://sg.run/dKbY                                          
2025-08-19T12:26:49.1781751Z                                                                                 
2025-08-19T12:26:49.1782873Z            ▶▶┆ Autofix ▶ http.ListenAndServeTLS(config.ListenAddr, certFile,    
2025-08-19T12:26:49.1783629Z   keyFile, nil)                                                                 
2025-08-19T12:26:49.1784966Z            62┆ if err := http.ListenAndServe(config.ListenAddr, nil); err != nil
2025-08-19T12:26:49.1785678Z   {                                                                             
2025-08-19T12:26:49.1786361Z                               
2025-08-19T12:26:49.1786807Z     cmd/intent-ingest/main.go 
2025-08-19T12:26:49.1787651Z        go.lang.security.audit.net.use-tls.use-tls                               
2025-08-19T12:26:49.1788822Z           Found an HTTP server without TLS. Use 'http.ListenAndServeTLS'        
2025-08-19T12:26:49.1789598Z   instead. See                                                                  
2025-08-19T12:26:49.1790911Z           https://golang.org/pkg/net/http/#ListenAndServeTLS for more           
2025-08-19T12:26:49.1791743Z   information.                                                                  
2025-08-19T12:26:49.1792738Z           Details: https://sg.run/dKbY                                          
2025-08-19T12:26:49.1795205Z                                                                                 
2025-08-19T12:26:49.1796374Z            ▶▶┆ Autofix ▶ http.ListenAndServeTLS(*addr, certFile, keyFile, mux)
2025-08-19T12:26:49.1797769Z            83┆ log.Fatal(http.ListenAndServe(*addr, mux))
2025-08-19T12:26:49.1798769Z                                                  
2025-08-19T12:26:49.1799351Z     config/default/webhook-deployment-patch.yaml 
2025-08-19T12:26:49.1800328Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.1801467Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.1802228Z   they  are properly                                                            
2025-08-19T12:26:49.1803237Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.1804215Z   vulnerability is when a                                                       
2025-08-19T12:26:49.1805275Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.1806077Z   could allow an attacker to                                                    
2025-08-19T12:26:49.1807140Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.1807936Z   recommended to  add a                                                         
2025-08-19T12:26:49.1809035Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.1809804Z   set to `true`. This                                                           
2025-08-19T12:26:49.1810780Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.1811544Z   damage that could be                                                          
2025-08-19T12:26:49.1812552Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.1813325Z   container in your                                                             
2025-08-19T12:26:49.1814534Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.1815416Z   applications are more secure                                                  
2025-08-19T12:26:49.1816543Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.1817625Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.1819527Z                                                                                 
2025-08-19T12:26:49.1820212Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.1820658Z     securityContext:          
2025-08-19T12:26:49.1821114Z       runAsNonRoot: true #    
2025-08-19T12:26:49.1821641Z             9┆ spec:
2025-08-19T12:26:49.1822461Z                                                
2025-08-19T12:26:49.1823026Z     deployments/auth-resources/deployment.yaml 
2025-08-19T12:26:49.1824359Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.1825579Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.1826372Z   they  are properly                                                            
2025-08-19T12:26:49.1827422Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.1828235Z   vulnerability is when a                                                       
2025-08-19T12:26:49.1829264Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.1830068Z   could allow an attacker to                                                    
2025-08-19T12:26:49.1831403Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.1832240Z   recommended to  add a                                                         
2025-08-19T12:26:49.1833308Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.1834278Z   set to `true`. This                                                           
2025-08-19T12:26:49.1835310Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.1836328Z   damage that could be                                                          
2025-08-19T12:26:49.1837357Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.1838126Z   container in your                                                             
2025-08-19T12:26:49.1839125Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.1839953Z   applications are more secure                                                  
2025-08-19T12:26:49.1841006Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.1842050Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.1844261Z                                                                                 
2025-08-19T12:26:49.1844952Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.1845417Z     securityContext:          
2025-08-19T12:26:49.1845897Z       runAsNonRoot: true #    
2025-08-19T12:26:49.1846402Z            15┆ spec:
2025-08-19T12:26:49.1847134Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1848134Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.1849025Z   m-container                                                                   
2025-08-19T12:26:49.1850069Z           Container auth-service is running with a writable root filesystem.    
2025-08-19T12:26:49.1850951Z   This may allow malicious                                                      
2025-08-19T12:26:49.1852060Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.1852875Z   container files. If an                                                        
2025-08-19T12:26:49.1854121Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.1854946Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.1856042Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.1857104Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.1859025Z                                                                                 
2025-08-19T12:26:49.1859734Z            18┆ - name: auth-service
2025-08-19T12:26:49.1861251Z                                                                        
2025-08-19T12:26:49.1862056Z     deployments/cert-automation/certificate-automation-deployment.yaml 
2025-08-19T12:26:49.1863239Z        yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file   
2025-08-19T12:26:49.1864650Z           Secrets (LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t) should not be stored in
2025-08-19T12:26:49.1865532Z   infrastructure as                                                             
2025-08-19T12:26:49.1866559Z           code files. Use an alternative such as Bitnami Sealed Secrets or KSOPS
2025-08-19T12:26:49.1867374Z   to encrypt Kubernetes                                                         
2025-08-19T12:26:49.1868313Z           Secrets.                                                              
2025-08-19T12:26:49.1869258Z           Details: https://sg.run/KyL6                                          
2025-08-19T12:26:49.1871141Z                                                                                 
2025-08-19T12:26:49.1872469Z           212┆ tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t  # Base64 encoded  
2025-08-19T12:26:49.1873292Z   certificate                                                                   
2025-08-19T12:26:49.1874397Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1875423Z        yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file   
2025-08-19T12:26:49.1876663Z           Secrets (LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t) should not be stored in
2025-08-19T12:26:49.1877986Z   infrastructure as                                                             
2025-08-19T12:26:49.1879069Z           code files. Use an alternative such as Bitnami Sealed Secrets or KSOPS
2025-08-19T12:26:49.1879842Z   to encrypt Kubernetes                                                         
2025-08-19T12:26:49.1880757Z           Secrets.                                                              
2025-08-19T12:26:49.1881713Z           Details: https://sg.run/KyL6                                          
2025-08-19T12:26:49.1883614Z                                                                                 
2025-08-19T12:26:49.1884912Z           213┆ tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t    # Base64 encoded
2025-08-19T12:26:49.1885686Z   private key                                                                   
2025-08-19T12:26:49.1887120Z                                                                   
2025-08-19T12:26:49.1887877Z     deployments/disaster-recovery/backup-recovery-automation.yaml 
2025-08-19T12:26:49.1888948Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.1890095Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.1890867Z   they  are properly                                                            
2025-08-19T12:26:49.1891880Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.1892688Z   vulnerability is when a                                                       
2025-08-19T12:26:49.1893956Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.1894769Z   could allow an attacker to                                                    
2025-08-19T12:26:49.1895795Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.1896571Z   recommended to  add a                                                         
2025-08-19T12:26:49.1897614Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.1898387Z   set to `true`. This                                                           
2025-08-19T12:26:49.1899370Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.1900151Z   damage that could be                                                          
2025-08-19T12:26:49.1901211Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.1901997Z   container in your                                                             
2025-08-19T12:26:49.1903033Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.1904060Z   applications are more secure                                                  
2025-08-19T12:26:49.1905140Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.1906192Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.1908113Z                                                                                 
2025-08-19T12:26:49.1908783Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.1909266Z     securityContext:          
2025-08-19T12:26:49.1909718Z       runAsNonRoot: true #    
2025-08-19T12:26:49.1910197Z           124┆ spec:
2025-08-19T12:26:49.1910898Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1911805Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.1912281Z     securityContext:          
2025-08-19T12:26:49.1912742Z       runAsNonRoot: true #    
2025-08-19T12:26:49.1913261Z           356┆ spec:
2025-08-19T12:26:49.1914149Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1914789Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.1915212Z     securityContext:          
2025-08-19T12:26:49.1915652Z       runAsNonRoot: true #    
2025-08-19T12:26:49.1916398Z           579┆ spec:
2025-08-19T12:26:49.1917129Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1917777Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.1918217Z     securityContext:          
2025-08-19T12:26:49.1918671Z       runAsNonRoot: true #    
2025-08-19T12:26:49.1919165Z           824┆ spec:
2025-08-19T12:26:49.1919850Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1920809Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.1921723Z   m-container                                                                   
2025-08-19T12:26:49.1922752Z           Container weaviate-backup is running with a writable root filesystem. 
2025-08-19T12:26:49.1923537Z   This may allow                                                                
2025-08-19T12:26:49.1924806Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.1925660Z   modify container files.                                                       
2025-08-19T12:26:49.1926713Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.1927487Z   consider using a                                                              
2025-08-19T12:26:49.1928528Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.1929271Z   this.                                                                         
2025-08-19T12:26:49.1930227Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.1932142Z                                                                                 
2025-08-19T12:26:49.1932883Z           128┆ - name: weaviate-backup
2025-08-19T12:26:49.1933680Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1934853Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.1935759Z   m-container                                                                   
2025-08-19T12:26:49.1936782Z           Container config-backup is running with a writable root filesystem.   
2025-08-19T12:26:49.1937600Z   This may allow malicious                                                      
2025-08-19T12:26:49.1938663Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.1939451Z   container files. If an                                                        
2025-08-19T12:26:49.1940514Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.1941337Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.1942403Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.1943463Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.1945544Z                                                                                 
2025-08-19T12:26:49.1946279Z           360┆ - name: config-backup
2025-08-19T12:26:49.1947096Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1948077Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.1948953Z   m-container                                                                   
2025-08-19T12:26:49.1949983Z           Container pitr-controller is running with a writable root filesystem. 
2025-08-19T12:26:49.1950981Z   This may allow                                                                
2025-08-19T12:26:49.1952083Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.1952914Z   modify container files.                                                       
2025-08-19T12:26:49.1954135Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.1954894Z   consider using a                                                              
2025-08-19T12:26:49.1956121Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.1956837Z   this.                                                                         
2025-08-19T12:26:49.1957706Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.1959558Z                                                                                 
2025-08-19T12:26:49.1960290Z           582┆ - name: pitr-controller
2025-08-19T12:26:49.1960834Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1961379Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.1961871Z   m-container                                                                   
2025-08-19T12:26:49.1962425Z           Container backup-validator is running with a writable root filesystem.
2025-08-19T12:26:49.1962846Z   This may allow                                                                
2025-08-19T12:26:49.1963413Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.1964154Z   modify container files.                                                       
2025-08-19T12:26:49.1964850Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.1965368Z   consider using a                                                              
2025-08-19T12:26:49.1966352Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.1967067Z   this.                                                                         
2025-08-19T12:26:49.1968006Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.1969899Z                                                                                 
2025-08-19T12:26:49.1970633Z           828┆ - name: backup-validator
2025-08-19T12:26:49.1971992Z                                                                  
2025-08-19T12:26:49.1972531Z     deployments/disaster-recovery/multi-region-architecture.yaml 
2025-08-19T12:26:49.1973129Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.1973989Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.1974511Z   they  are properly                                                            
2025-08-19T12:26:49.1975080Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.1975520Z   vulnerability is when a                                                       
2025-08-19T12:26:49.1976076Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.1976512Z   could allow an attacker to                                                    
2025-08-19T12:26:49.1977066Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.1977493Z   recommended to  add a                                                         
2025-08-19T12:26:49.1978055Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.1978470Z   set to `true`. This                                                           
2025-08-19T12:26:49.1979012Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.1979649Z   damage that could be                                                          
2025-08-19T12:26:49.1980217Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.1980637Z   container in your                                                             
2025-08-19T12:26:49.1981179Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.1981622Z   applications are more secure                                                  
2025-08-19T12:26:49.1982346Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.1982917Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.1984368Z                                                                                 
2025-08-19T12:26:49.1984903Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.1985157Z     securityContext:          
2025-08-19T12:26:49.1985405Z       runAsNonRoot: true #    
2025-08-19T12:26:49.1985680Z           283┆ spec:
2025-08-19T12:26:49.1986061Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1986408Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.1986641Z     securityContext:          
2025-08-19T12:26:49.1986898Z       runAsNonRoot: true #    
2025-08-19T12:26:49.1987151Z           350┆ spec:
2025-08-19T12:26:49.1987518Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1987852Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.1988093Z     securityContext:          
2025-08-19T12:26:49.1988341Z       runAsNonRoot: true #    
2025-08-19T12:26:49.1988594Z           499┆ spec:
2025-08-19T12:26:49.1988957Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1989468Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.1989948Z   m-container                                                                   
2025-08-19T12:26:49.1990502Z           Container external-dns is running with a writable root filesystem.    
2025-08-19T12:26:49.1990951Z   This may allow malicious                                                      
2025-08-19T12:26:49.1991528Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.1991959Z   container files. If an                                                        
2025-08-19T12:26:49.1992525Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.1992975Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.1993559Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.1994315Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.1995315Z                                                                                 
2025-08-19T12:26:49.1995680Z           286┆ - name: external-dns
2025-08-19T12:26:49.1996097Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1996625Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.1997092Z   m-container                                                                   
2025-08-19T12:26:49.1997653Z           Container replication-controller is running with a writable root      
2025-08-19T12:26:49.1998111Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.1998702Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.1999149Z   modify container files.                                                       
2025-08-19T12:26:49.1999718Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2000144Z   consider using a                                                              
2025-08-19T12:26:49.2000703Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2001254Z   this.                                                                         
2025-08-19T12:26:49.2001766Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2002759Z                                                                                 
2025-08-19T12:26:49.2003165Z           353┆ - name: replication-controller
2025-08-19T12:26:49.2003594Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2004474Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2004951Z   m-container                                                                   
2025-08-19T12:26:49.2005501Z           Container failover-controller is running with a writable root         
2025-08-19T12:26:49.2005959Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.2006554Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2007001Z   modify container files.                                                       
2025-08-19T12:26:49.2007566Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2007980Z   consider using a                                                              
2025-08-19T12:26:49.2008538Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2008976Z   this.                                                                         
2025-08-19T12:26:49.2009473Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2010478Z                                                                                 
2025-08-19T12:26:49.2010889Z           502┆ - name: failover-controller
2025-08-19T12:26:49.2011330Z                                           
2025-08-19T12:26:49.2011610Z     deployments/edge/edge-cloud-sync.yaml 
2025-08-19T12:26:49.2012140Z        yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escal
2025-08-19T12:26:49.2012592Z   ation                                                                         
2025-08-19T12:26:49.2013118Z           In Kubernetes, each pod runs in its own isolated environment with its 
2025-08-19T12:26:49.2013534Z   own set of security                                                           
2025-08-19T12:26:49.2014319Z           policies. However, certain container images may contain `setuid` or   
2025-08-19T12:26:49.2014771Z   `setgid` binaries that                                                        
2025-08-19T12:26:49.2015338Z           could allow an attacker to perform privilege escalation and gain      
2025-08-19T12:26:49.2015764Z   access to sensitive                                                           
2025-08-19T12:26:49.2016314Z           resources. To mitigate this risk, it's recommended to add a           
2025-08-19T12:26:49.2016755Z   `securityContext` to the                                                      
2025-08-19T12:26:49.2017323Z           container in the pod, with the parameter `allowPrivilegeEscalation`   
2025-08-19T12:26:49.2017737Z   set to `false`. This                                                          
2025-08-19T12:26:49.2018281Z           will prevent the container from running any privileged processes and  
2025-08-19T12:26:49.2018705Z   limit the impact of any                                                       
2025-08-19T12:26:49.2019279Z           potential attacks. By adding the `allowPrivilegeEscalation` parameter 
2025-08-19T12:26:49.2019685Z   to your the                                                                   
2025-08-19T12:26:49.2020216Z           `securityContext`, you can help to ensure that your containerized     
2025-08-19T12:26:49.2020656Z   applications are more                                                         
2025-08-19T12:26:49.2021379Z           secure and less vulnerable to privilege escalation attacks.           
2025-08-19T12:26:49.2021959Z           Details: https://sg.run/ljp6                                          
2025-08-19T12:26:49.2022954Z                                                                                 
2025-08-19T12:26:49.2023364Z            ▶▶┆ Autofix ▶ securityContext:
2025-08-19T12:26:49.2023662Z     allowPrivilegeEscalation: false #    
2025-08-19T12:26:49.2024211Z           271┆ securityContext:
2025-08-19T12:26:49.2024801Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2025313Z        yaml.kubernetes.security.hostnetwork-pod.hostnetwork-pod                 
2025-08-19T12:26:49.2025951Z           Pod may use the node network namespace. This gives the pod access to  
2025-08-19T12:26:49.2026373Z   the loopback device,                                                          
2025-08-19T12:26:49.2026943Z           services listening on localhost, and could be used to snoop on network
2025-08-19T12:26:49.2027376Z   activity of other                                                             
2025-08-19T12:26:49.2027919Z           pods on the same node. Remove the 'hostNetwork' key to disable this   
2025-08-19T12:26:49.2028334Z   functionality.                                                                
2025-08-19T12:26:49.2028855Z           Details: https://sg.run/E51A                                          
2025-08-19T12:26:49.2029846Z                                                                                 
2025-08-19T12:26:49.2030204Z           227┆ hostNetwork: true
2025-08-19T12:26:49.2030612Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2031107Z        yaml.kubernetes.security.hostpid-pod.hostpid-pod                         
2025-08-19T12:26:49.2031716Z           Pod is sharing the host process ID namespace. When paired with ptrace 
2025-08-19T12:26:49.2032124Z   this can be used to                                                           
2025-08-19T12:26:49.2032686Z           escalate privileges outside of the container. Remove the 'hostPID' key
2025-08-19T12:26:49.2033127Z   to disable this                                                               
2025-08-19T12:26:49.2033626Z           functionality.                                                        
2025-08-19T12:26:49.2034436Z           Details: https://sg.run/708R                                          
2025-08-19T12:26:49.2035434Z                                                                                 
2025-08-19T12:26:49.2035812Z           228┆ hostPID: true
2025-08-19T12:26:49.2036209Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2036727Z        yaml.kubernetes.security.privileged-container.privileged-container       
2025-08-19T12:26:49.2037370Z           Container or pod is running in privileged mode. This grants the       
2025-08-19T12:26:49.2037813Z   container the equivalent of                                                   
2025-08-19T12:26:49.2038394Z           root capabilities on the host machine. This can lead to container     
2025-08-19T12:26:49.2038826Z   escapes, privilege                                                            
2025-08-19T12:26:49.2039382Z           escalation, and other security concerns. Remove the 'privileged' key  
2025-08-19T12:26:49.2039807Z   to disable this                                                               
2025-08-19T12:26:49.2040291Z           capability.                                                           
2025-08-19T12:26:49.2040810Z           Details: https://sg.run/Ygr5                                          
2025-08-19T12:26:49.2041802Z                                                                                 
2025-08-19T12:26:49.2042176Z           230┆ - name: metrics-collector
2025-08-19T12:26:49.2042659Z           231┆   image: nephoran/edge-metrics-collector:latest
2025-08-19T12:26:49.2043014Z           232┆   ports:
2025-08-19T12:26:49.2043335Z           233┆   - containerPort: 8080
2025-08-19T12:26:49.2044063Z           234┆     name: metrics
2025-08-19T12:26:49.2044473Z           235┆   env:
2025-08-19T12:26:49.2044780Z           236┆   - name: NODE_NAME
2025-08-19T12:26:49.2045085Z           237┆     valueFrom:
2025-08-19T12:26:49.2045389Z           238┆       fieldRef:
2025-08-19T12:26:49.2045754Z           239┆         fieldPath: spec.nodeName
2025-08-19T12:26:49.2046289Z              [hid 33 additional lines, adjust with --max-lines-per-finding] 
2025-08-19T12:26:49.2047070Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2047702Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2048129Z   they  are properly                                                            
2025-08-19T12:26:49.2048688Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2049128Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2049702Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2050141Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2050697Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2051119Z   recommended to  add a                                                         
2025-08-19T12:26:49.2051682Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2052103Z   set to `true`. This                                                           
2025-08-19T12:26:49.2052642Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2053059Z   damage that could be                                                          
2025-08-19T12:26:49.2053614Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2054318Z   container in your                                                             
2025-08-19T12:26:49.2054867Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2055319Z   applications are more secure                                                  
2025-08-19T12:26:49.2055893Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2056456Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2057457Z                                                                                 
2025-08-19T12:26:49.2057821Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2058065Z     securityContext:          
2025-08-19T12:26:49.2058320Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2058581Z           223┆ spec:
2025-08-19T12:26:49.2058955Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2059301Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2059543Z     securityContext:          
2025-08-19T12:26:49.2059793Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2060048Z           315┆ spec:
2025-08-19T12:26:49.2060411Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2060931Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2061412Z   m-container                                                                   
2025-08-19T12:26:49.2061967Z           Container metrics-collector is running with a writable root           
2025-08-19T12:26:49.2062423Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.2063015Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2063462Z   modify container files.                                                       
2025-08-19T12:26:49.2064132Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2064711Z   consider using a                                                              
2025-08-19T12:26:49.2065283Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2065682Z   this.                                                                         
2025-08-19T12:26:49.2066174Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2067170Z                                                                                 
2025-08-19T12:26:49.2067687Z           230┆ - name: metrics-collector
2025-08-19T12:26:49.2068109Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2068627Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2069093Z   m-container                                                                   
2025-08-19T12:26:49.2069647Z           Container intent-processor is running with a writable root filesystem.
2025-08-19T12:26:49.2070074Z   This may allow                                                                
2025-08-19T12:26:49.2070630Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2071084Z   modify container files.                                                       
2025-08-19T12:26:49.2071645Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2072061Z   consider using a                                                              
2025-08-19T12:26:49.2072617Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2073017Z   this.                                                                         
2025-08-19T12:26:49.2073508Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2074807Z                                                                                 
2025-08-19T12:26:49.2075228Z           318┆ - name: intent-processor
2025-08-19T12:26:49.2075734Z                                                 
2025-08-19T12:26:49.2076057Z     deployments/edge/edge-computing-config.yaml 
2025-08-19T12:26:49.2076578Z        yaml.kubernetes.security.hostnetwork-pod.hostnetwork-pod                 
2025-08-19T12:26:49.2077201Z           Pod may use the node network namespace. This gives the pod access to  
2025-08-19T12:26:49.2077626Z   the loopback device,                                                          
2025-08-19T12:26:49.2078196Z           services listening on localhost, and could be used to snoop on network
2025-08-19T12:26:49.2078622Z   activity of other                                                             
2025-08-19T12:26:49.2079166Z           pods on the same node. Remove the 'hostNetwork' key to disable this   
2025-08-19T12:26:49.2079584Z   functionality.                                                                
2025-08-19T12:26:49.2080110Z           Details: https://sg.run/E51A                                          
2025-08-19T12:26:49.2081110Z                                                                                 
2025-08-19T12:26:49.2081590Z           488┆ hostNetwork: true  # For O-RAN interface access
2025-08-19T12:26:49.2082051Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2082552Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2083169Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2083603Z   they  are properly                                                            
2025-08-19T12:26:49.2084752Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2085237Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2085804Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2086430Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2087009Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2087427Z   recommended to  add a                                                         
2025-08-19T12:26:49.2087992Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2088415Z   set to `true`. This                                                           
2025-08-19T12:26:49.2089098Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2089534Z   damage that could be                                                          
2025-08-19T12:26:49.2090089Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2090513Z   container in your                                                             
2025-08-19T12:26:49.2091062Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2091520Z   applications are more secure                                                  
2025-08-19T12:26:49.2092093Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2092655Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2093669Z                                                                                 
2025-08-19T12:26:49.2094201Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2094451Z     securityContext:          
2025-08-19T12:26:49.2094705Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2094963Z           252┆ spec:
2025-08-19T12:26:49.2095347Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2095696Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2095936Z     securityContext:          
2025-08-19T12:26:49.2096179Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2096439Z           324┆ spec:
2025-08-19T12:26:49.2096812Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2097148Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2097379Z     securityContext:          
2025-08-19T12:26:49.2097629Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2097885Z           411┆ spec:
2025-08-19T12:26:49.2098241Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2098581Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2098815Z     securityContext:          
2025-08-19T12:26:49.2099078Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2099332Z           486┆ spec:
2025-08-19T12:26:49.2099697Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2100489Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2100980Z   m-container                                                                   
2025-08-19T12:26:49.2101537Z           Container discovery is running with a writable root filesystem. This  
2025-08-19T12:26:49.2101980Z   may allow malicious                                                           
2025-08-19T12:26:49.2102553Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2102983Z   container files. If an                                                        
2025-08-19T12:26:49.2103555Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2104243Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2104867Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2105453Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2106467Z                                                                                 
2025-08-19T12:26:49.2106869Z           255┆ - name: discovery
2025-08-19T12:26:49.2107268Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2107964Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2108448Z   m-container                                                                   
2025-08-19T12:26:49.2109042Z           Container tensorflow-serving is running with a writable root          
2025-08-19T12:26:49.2109503Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.2110089Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2110677Z   modify container files.                                                       
2025-08-19T12:26:49.2111251Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2111673Z   consider using a                                                              
2025-08-19T12:26:49.2112236Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2112638Z   this.                                                                         
2025-08-19T12:26:49.2113142Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2114266Z                                                                                 
2025-08-19T12:26:49.2114665Z           330┆ - name: tensorflow-serving
2025-08-19T12:26:49.2115100Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2115624Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2116103Z   m-container                                                                   
2025-08-19T12:26:49.2116662Z           Container pytorch-serve is running with a writable root filesystem.   
2025-08-19T12:26:49.2117113Z   This may allow malicious                                                      
2025-08-19T12:26:49.2117690Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2118135Z   container files. If an                                                        
2025-08-19T12:26:49.2118709Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2119155Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2119745Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2120320Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2121336Z                                                                                 
2025-08-19T12:26:49.2121707Z           357┆ - name: pytorch-serve
2025-08-19T12:26:49.2122120Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2122642Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2123106Z   m-container                                                                   
2025-08-19T12:26:49.2123659Z           Container redis-cache is running with a writable root filesystem. This
2025-08-19T12:26:49.2124347Z   may allow malicious                                                           
2025-08-19T12:26:49.2124927Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2125361Z   container files. If an                                                        
2025-08-19T12:26:49.2125926Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2126387Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2126970Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2127555Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2128564Z                                                                                 
2025-08-19T12:26:49.2128923Z           414┆ - name: redis-cache
2025-08-19T12:26:49.2129483Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2130009Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2130483Z   m-container                                                                   
2025-08-19T12:26:49.2131029Z           Container cache-manager is running with a writable root filesystem.   
2025-08-19T12:26:49.2131477Z   This may allow malicious                                                      
2025-08-19T12:26:49.2132195Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2132624Z   container files. If an                                                        
2025-08-19T12:26:49.2133190Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2133635Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2134360Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2134937Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2135942Z                                                                                 
2025-08-19T12:26:49.2136313Z           434┆ - name: cache-manager
2025-08-19T12:26:49.2136719Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2137233Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2137707Z   m-container                                                                   
2025-08-19T12:26:49.2138252Z           Container near-rt-ric is running with a writable root filesystem. This
2025-08-19T12:26:49.2138684Z   may allow malicious                                                           
2025-08-19T12:26:49.2139250Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2139689Z   container files. If an                                                        
2025-08-19T12:26:49.2140255Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2140707Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2141287Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2141868Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2142884Z                                                                                 
2025-08-19T12:26:49.2143238Z           493┆ - name: near-rt-ric
2025-08-19T12:26:49.2143887Z                                               
2025-08-19T12:26:49.2144208Z     deployments/edge/edge-node-lifecycle.yaml 
2025-08-19T12:26:49.2144739Z        yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escal
2025-08-19T12:26:49.2145198Z   ation                                                                         
2025-08-19T12:26:49.2145723Z           In Kubernetes, each pod runs in its own isolated environment with its 
2025-08-19T12:26:49.2146144Z   own set of security                                                           
2025-08-19T12:26:49.2146697Z           policies. However, certain container images may contain `setuid` or   
2025-08-19T12:26:49.2147138Z   `setgid` binaries that                                                        
2025-08-19T12:26:49.2147705Z           could allow an attacker to perform privilege escalation and gain      
2025-08-19T12:26:49.2148132Z   access to sensitive                                                           
2025-08-19T12:26:49.2148688Z           resources. To mitigate this risk, it's recommended to add a           
2025-08-19T12:26:49.2149120Z   `securityContext` to the                                                      
2025-08-19T12:26:49.2149690Z           container in the pod, with the parameter `allowPrivilegeEscalation`   
2025-08-19T12:26:49.2150247Z   set to `false`. This                                                          
2025-08-19T12:26:49.2150805Z           will prevent the container from running any privileged processes and  
2025-08-19T12:26:49.2151232Z   limit the impact of any                                                       
2025-08-19T12:26:49.2151806Z           potential attacks. By adding the `allowPrivilegeEscalation` parameter 
2025-08-19T12:26:49.2152218Z   to your the                                                                   
2025-08-19T12:26:49.2152879Z           `securityContext`, you can help to ensure that your containerized     
2025-08-19T12:26:49.2153322Z   applications are more                                                         
2025-08-19T12:26:49.2154178Z           secure and less vulnerable to privilege escalation attacks.           
2025-08-19T12:26:49.2154757Z           Details: https://sg.run/ljp6                                          
2025-08-19T12:26:49.2155771Z                                                                                 
2025-08-19T12:26:49.2156188Z            ▶▶┆ Autofix ▶ securityContext:
2025-08-19T12:26:49.2156493Z     allowPrivilegeEscalation: false #    
2025-08-19T12:26:49.2156830Z           478┆ securityContext:
2025-08-19T12:26:49.2157239Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2157747Z        yaml.kubernetes.security.hostnetwork-pod.hostnetwork-pod                 
2025-08-19T12:26:49.2158382Z           Pod may use the node network namespace. This gives the pod access to  
2025-08-19T12:26:49.2158811Z   the loopback device,                                                          
2025-08-19T12:26:49.2159378Z           services listening on localhost, and could be used to snoop on network
2025-08-19T12:26:49.2159807Z   activity of other                                                             
2025-08-19T12:26:49.2160352Z           pods on the same node. Remove the 'hostNetwork' key to disable this   
2025-08-19T12:26:49.2160772Z   functionality.                                                                
2025-08-19T12:26:49.2161297Z           Details: https://sg.run/E51A                                          
2025-08-19T12:26:49.2162301Z                                                                                 
2025-08-19T12:26:49.2162651Z           442┆ hostNetwork: true
2025-08-19T12:26:49.2163049Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2163554Z        yaml.kubernetes.security.hostpid-pod.hostpid-pod                         
2025-08-19T12:26:49.2164467Z           Pod is sharing the host process ID namespace. When paired with ptrace 
2025-08-19T12:26:49.2164883Z   this can be used to                                                           
2025-08-19T12:26:49.2165439Z           escalate privileges outside of the container. Remove the 'hostPID' key
2025-08-19T12:26:49.2165858Z   to disable this                                                               
2025-08-19T12:26:49.2166366Z           functionality.                                                        
2025-08-19T12:26:49.2166889Z           Details: https://sg.run/708R                                          
2025-08-19T12:26:49.2167892Z                                                                                 
2025-08-19T12:26:49.2168231Z           443┆ hostPID: true
2025-08-19T12:26:49.2168627Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2169147Z        yaml.kubernetes.security.privileged-container.privileged-container       
2025-08-19T12:26:49.2169786Z           Container or pod is running in privileged mode. This grants the       
2025-08-19T12:26:49.2170237Z   container the equivalent of                                                   
2025-08-19T12:26:49.2170817Z           root capabilities on the host machine. This can lead to container     
2025-08-19T12:26:49.2171251Z   escapes, privilege                                                            
2025-08-19T12:26:49.2171987Z           escalation, and other security concerns. Remove the 'privileged' key  
2025-08-19T12:26:49.2172441Z   to disable this                                                               
2025-08-19T12:26:49.2172944Z           capability.                                                           
2025-08-19T12:26:49.2173456Z           Details: https://sg.run/Ygr5                                          
2025-08-19T12:26:49.2174609Z                                                                                 
2025-08-19T12:26:49.2175203Z           445┆ - name: health-monitor
2025-08-19T12:26:49.2175657Z           446┆   image: nephoran/edge-health-monitor:latest
2025-08-19T12:26:49.2176001Z           447┆   ports:
2025-08-19T12:26:49.2176317Z           448┆   - containerPort: 8080
2025-08-19T12:26:49.2176645Z           449┆     name: metrics
2025-08-19T12:26:49.2176906Z           450┆   env:
2025-08-19T12:26:49.2177195Z           451┆   - name: NODE_NAME
2025-08-19T12:26:49.2177508Z           452┆     valueFrom:
2025-08-19T12:26:49.2177824Z           453┆       fieldRef:
2025-08-19T12:26:49.2178183Z           454┆         fieldPath: spec.nodeName
2025-08-19T12:26:49.2178715Z              [hid 25 additional lines, adjust with --max-lines-per-finding] 
2025-08-19T12:26:49.2179295Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2179926Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2180378Z   they  are properly                                                            
2025-08-19T12:26:49.2180942Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2181386Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2181957Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2182404Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2182971Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2183392Z   recommended to  add a                                                         
2025-08-19T12:26:49.2184081Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2184504Z   set to `true`. This                                                           
2025-08-19T12:26:49.2185062Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2209432Z   damage that could be                                                          
2025-08-19T12:26:49.2210543Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2211259Z   container in your                                                             
2025-08-19T12:26:49.2212361Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2212873Z   applications are more secure                                                  
2025-08-19T12:26:49.2213458Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2214248Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2215239Z                                                                                 
2025-08-19T12:26:49.2215660Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2215919Z     securityContext:          
2025-08-19T12:26:49.2216175Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2216437Z            64┆ spec:
2025-08-19T12:26:49.2216833Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2217178Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2217413Z     securityContext:          
2025-08-19T12:26:49.2217653Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2217908Z           438┆ spec:
2025-08-19T12:26:49.2218503Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2219044Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2219530Z   m-container                                                                   
2025-08-19T12:26:49.2220073Z           Container node-manager is running with a writable root filesystem.    
2025-08-19T12:26:49.2220517Z   This may allow malicious                                                      
2025-08-19T12:26:49.2221235Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2221677Z   container files. If an                                                        
2025-08-19T12:26:49.2222236Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2222675Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2223264Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2224061Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2225075Z                                                                                 
2025-08-19T12:26:49.2225481Z            67┆ - name: node-manager
2025-08-19T12:26:49.2225898Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2226422Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2226913Z   m-container                                                                   
2025-08-19T12:26:49.2227474Z           Container health-monitor is running with a writable root filesystem.  
2025-08-19T12:26:49.2227891Z   This may allow                                                                
2025-08-19T12:26:49.2228456Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2228902Z   modify container files.                                                       
2025-08-19T12:26:49.2229483Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2229906Z   consider using a                                                              
2025-08-19T12:26:49.2230464Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2230858Z   this.                                                                         
2025-08-19T12:26:49.2231357Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2232358Z                                                                                 
2025-08-19T12:26:49.2232724Z           445┆ - name: health-monitor
2025-08-19T12:26:49.2233274Z                                                       
2025-08-19T12:26:49.2233611Z     deployments/examples/llm-processor-corrected.yaml 
2025-08-19T12:26:49.2234373Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2235004Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2235419Z   they  are properly                                                            
2025-08-19T12:26:49.2235967Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2236392Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2236945Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2237384Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2237933Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2238347Z   recommended to  add a                                                         
2025-08-19T12:26:49.2238901Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2239462Z   set to `true`. This                                                           
2025-08-19T12:26:49.2240298Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2240719Z   damage that could be                                                          
2025-08-19T12:26:49.2241270Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2241696Z   container in your                                                             
2025-08-19T12:26:49.2242409Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2242860Z   applications are more secure                                                  
2025-08-19T12:26:49.2243427Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2244211Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2245221Z                                                                                 
2025-08-19T12:26:49.2245600Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2245847Z     securityContext:          
2025-08-19T12:26:49.2246094Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2246359Z            18┆ spec:
2025-08-19T12:26:49.2246730Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2247248Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2247955Z   m-container                                                                   
2025-08-19T12:26:49.2248517Z           Container llm-processor is running with a writable root filesystem.   
2025-08-19T12:26:49.2248955Z   This may allow malicious                                                      
2025-08-19T12:26:49.2249532Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2249956Z   container files. If an                                                        
2025-08-19T12:26:49.2250647Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2251209Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2251802Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2252386Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2253384Z                                                                                 
2025-08-19T12:26:49.2253954Z            20┆ - name: llm-processor
2025-08-19T12:26:49.2254594Z                                                            
2025-08-19T12:26:49.2254966Z     deployments/kubernetes/disaster-recovery-cronjobs.yaml 
2025-08-19T12:26:49.2255519Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2256139Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2256577Z   they  are properly                                                            
2025-08-19T12:26:49.2257134Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2257571Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2258132Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2258560Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2259128Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2259547Z   recommended to  add a                                                         
2025-08-19T12:26:49.2260100Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2260521Z   set to `true`. This                                                           
2025-08-19T12:26:49.2261233Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2261669Z   damage that could be                                                          
2025-08-19T12:26:49.2262212Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2262639Z   container in your                                                             
2025-08-19T12:26:49.2263188Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2263955Z   applications are more secure                                                  
2025-08-19T12:26:49.2264545Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2265104Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2266114Z                                                                                 
2025-08-19T12:26:49.2266477Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2266720Z     securityContext:          
2025-08-19T12:26:49.2266985Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2267243Z           200┆ spec:
2025-08-19T12:26:49.2267625Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2267967Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2268202Z     securityContext:          
2025-08-19T12:26:49.2268448Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2268707Z           308┆ spec:
2025-08-19T12:26:49.2269069Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2269417Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2269649Z     securityContext:          
2025-08-19T12:26:49.2269887Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2270143Z           386┆ spec:
2025-08-19T12:26:49.2270499Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2270832Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2271059Z     securityContext:          
2025-08-19T12:26:49.2271306Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2271568Z           464┆ spec:
2025-08-19T12:26:49.2271928Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2272258Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2272485Z     securityContext:          
2025-08-19T12:26:49.2272733Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2272986Z           542┆ spec:
2025-08-19T12:26:49.2273342Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2274093Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2274602Z   m-container                                                                   
2025-08-19T12:26:49.2275154Z           Container dr-backup is running with a writable root filesystem. This  
2025-08-19T12:26:49.2275597Z   may allow malicious                                                           
2025-08-19T12:26:49.2276167Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2276617Z   container files. If an                                                        
2025-08-19T12:26:49.2277178Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2277629Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2278214Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2278796Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2279810Z                                                                                 
2025-08-19T12:26:49.2280169Z           204┆ - name: dr-backup
2025-08-19T12:26:49.2280576Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2281092Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2281561Z   m-container                                                                   
2025-08-19T12:26:49.2282323Z           Container dr-incremental-backup is running with a writable root       
2025-08-19T12:26:49.2282798Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.2283390Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2284058Z   modify container files.                                                       
2025-08-19T12:26:49.2284636Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2285206Z   consider using a                                                              
2025-08-19T12:26:49.2285766Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2286161Z   this.                                                                         
2025-08-19T12:26:49.2286654Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2287668Z                                                                                 
2025-08-19T12:26:49.2288077Z           312┆ - name: dr-incremental-backup
2025-08-19T12:26:49.2288510Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2289024Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2289494Z   m-container                                                                   
2025-08-19T12:26:49.2290034Z           Container dr-test is running with a writable root filesystem. This may
2025-08-19T12:26:49.2290459Z   allow malicious                                                               
2025-08-19T12:26:49.2291020Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2291444Z   container files. If an                                                        
2025-08-19T12:26:49.2292010Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2292459Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2293046Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2293625Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2294824Z                                                                                 
2025-08-19T12:26:49.2295171Z           390┆ - name: dr-test
2025-08-19T12:26:49.2295570Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2296091Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2296556Z   m-container                                                                   
2025-08-19T12:26:49.2297105Z           Container backup-verification is running with a writable root         
2025-08-19T12:26:49.2297560Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.2298152Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2298604Z   modify container files.                                                       
2025-08-19T12:26:49.2299165Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2299583Z   consider using a                                                              
2025-08-19T12:26:49.2300139Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2300538Z   this.                                                                         
2025-08-19T12:26:49.2301043Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2302041Z                                                                                 
2025-08-19T12:26:49.2302432Z           468┆ - name: backup-verification
2025-08-19T12:26:49.2302863Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2303518Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2304245Z   m-container                                                                   
2025-08-19T12:26:49.2304799Z           Container backup-cleanup is running with a writable root filesystem.  
2025-08-19T12:26:49.2305221Z   This may allow                                                                
2025-08-19T12:26:49.2305773Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2306376Z   modify container files.                                                       
2025-08-19T12:26:49.2306948Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2307366Z   consider using a                                                              
2025-08-19T12:26:49.2307936Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2308347Z   this.                                                                         
2025-08-19T12:26:49.2308850Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2309896Z                                                                                 
2025-08-19T12:26:49.2310276Z           546┆ - name: backup-cleanup
2025-08-19T12:26:49.2310797Z                                                   
2025-08-19T12:26:49.2311120Z     deployments/kubernetes/docker-loader-pod.yaml 
2025-08-19T12:26:49.2311674Z        yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escal
2025-08-19T12:26:49.2312121Z   ation                                                                         
2025-08-19T12:26:49.2312647Z           In Kubernetes, each pod runs in its own isolated environment with its 
2025-08-19T12:26:49.2313067Z   own set of security                                                           
2025-08-19T12:26:49.2313617Z           policies. However, certain container images may contain `setuid` or   
2025-08-19T12:26:49.2314290Z   `setgid` binaries that                                                        
2025-08-19T12:26:49.2314852Z           could allow an attacker to perform privilege escalation and gain      
2025-08-19T12:26:49.2315278Z   access to sensitive                                                           
2025-08-19T12:26:49.2315826Z           resources. To mitigate this risk, it's recommended to add a           
2025-08-19T12:26:49.2316278Z   `securityContext` to the                                                      
2025-08-19T12:26:49.2316847Z           container in the pod, with the parameter `allowPrivilegeEscalation`   
2025-08-19T12:26:49.2317263Z   set to `false`. This                                                          
2025-08-19T12:26:49.2317809Z           will prevent the container from running any privileged processes and  
2025-08-19T12:26:49.2318238Z   limit the impact of any                                                       
2025-08-19T12:26:49.2318810Z           potential attacks. By adding the `allowPrivilegeEscalation` parameter 
2025-08-19T12:26:49.2319224Z   to your the                                                                   
2025-08-19T12:26:49.2319760Z           `securityContext`, you can help to ensure that your containerized     
2025-08-19T12:26:49.2320202Z   applications are more                                                         
2025-08-19T12:26:49.2320761Z           secure and less vulnerable to privilege escalation attacks.           
2025-08-19T12:26:49.2321328Z           Details: https://sg.run/ljp6                                          
2025-08-19T12:26:49.2322328Z                                                                                 
2025-08-19T12:26:49.2322740Z            ▶▶┆ Autofix ▶ securityContext:
2025-08-19T12:26:49.2323048Z     allowPrivilegeEscalation: false #    
2025-08-19T12:26:49.2323394Z            10┆ securityContext:
2025-08-19T12:26:49.2324013Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2324712Z        yaml.kubernetes.security.exposing-docker-socket-hostpath.exposing-docker-
2025-08-19T12:26:49.2325218Z   socket-hostpath                                                               
2025-08-19T12:26:49.2325796Z           Exposing host's Docker socket to containers via a volume. The owner of
2025-08-19T12:26:49.2326221Z   this socket is root.                                                          
2025-08-19T12:26:49.2326916Z           Giving someone access to it is equivalent to giving unrestricted root 
2025-08-19T12:26:49.2327340Z   access to your host.                                                          
2025-08-19T12:26:49.2327893Z           Remove 'docker.sock' from hostpath to prevent this.                   
2025-08-19T12:26:49.2328453Z           Details: https://sg.run/v0pR                                          
2025-08-19T12:26:49.2329462Z                                                                                 
2025-08-19T12:26:49.2329813Z            19┆ hostPath:
2025-08-19T12:26:49.2330162Z            20┆   path: /var/run/docker.sock
2025-08-19T12:26:49.2330590Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2331191Z        yaml.kubernetes.security.privileged-container.privileged-container       
2025-08-19T12:26:49.2331838Z           Container or pod is running in privileged mode. This grants the       
2025-08-19T12:26:49.2332279Z   container the equivalent of                                                   
2025-08-19T12:26:49.2332876Z           root capabilities on the host machine. This can lead to container     
2025-08-19T12:26:49.2333316Z   escapes, privilege                                                            
2025-08-19T12:26:49.2334079Z           escalation, and other security concerns. Remove the 'privileged' key  
2025-08-19T12:26:49.2334515Z   to disable this                                                               
2025-08-19T12:26:49.2335015Z           capability.                                                           
2025-08-19T12:26:49.2335536Z           Details: https://sg.run/Ygr5                                          
2025-08-19T12:26:49.2336544Z                                                                                 
2025-08-19T12:26:49.2336926Z             7┆ - name: docker-loader
2025-08-19T12:26:49.2337287Z             8┆   image: docker:latest
2025-08-19T12:26:49.2337727Z             9┆   command: ["/bin/sh", "-c", "sleep 3600"]
2025-08-19T12:26:49.2338113Z            10┆   securityContext:
2025-08-19T12:26:49.2338446Z            11┆     privileged: true
2025-08-19T12:26:49.2338770Z            12┆   volumeMounts:
2025-08-19T12:26:49.2339099Z            13┆   - name: docker-sock
2025-08-19T12:26:49.2339504Z            14┆     mountPath: /var/run/docker.sock
2025-08-19T12:26:49.2339864Z            15┆   - name: host-tmp
2025-08-19T12:26:49.2340210Z            16┆     mountPath: /host-tmp
2025-08-19T12:26:49.2340633Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2341145Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2341773Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2342199Z   they  are properly                                                            
2025-08-19T12:26:49.2342762Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2343213Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2343941Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2344389Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2344947Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2345367Z   recommended to  add a                                                         
2025-08-19T12:26:49.2346085Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2346524Z   set to `true`. This                                                           
2025-08-19T12:26:49.2347066Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2347484Z   damage that could be                                                          
2025-08-19T12:26:49.2348035Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2348780Z   container in your                                                             
2025-08-19T12:26:49.2349346Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2349800Z   applications are more secure                                                  
2025-08-19T12:26:49.2350369Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2350940Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2351939Z                                                                                 
2025-08-19T12:26:49.2352311Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2352554Z     securityContext:          
2025-08-19T12:26:49.2352811Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2353080Z             5┆ spec:
2025-08-19T12:26:49.2353451Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2354224Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2354704Z   m-container                                                                   
2025-08-19T12:26:49.2355261Z           Container docker-loader is running with a writable root filesystem.   
2025-08-19T12:26:49.2355703Z   This may allow malicious                                                      
2025-08-19T12:26:49.2356287Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2356732Z   container files. If an                                                        
2025-08-19T12:26:49.2357296Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2357752Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2358335Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2358916Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2359917Z                                                                                 
2025-08-19T12:26:49.2360307Z             7┆ - name: docker-loader
2025-08-19T12:26:49.2360809Z                                                  
2025-08-19T12:26:49.2361126Z     deployments/kubernetes/image-loader-pod.yaml 
2025-08-19T12:26:49.2361650Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2362445Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2362886Z   they  are properly                                                            
2025-08-19T12:26:49.2363447Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2363638Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2364358Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2364770Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2365110Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2365287Z   recommended to  add a                                                         
2025-08-19T12:26:49.2365635Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2365812Z   set to `true`. This                                                           
2025-08-19T12:26:49.2366156Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2366335Z   damage that could be                                                          
2025-08-19T12:26:49.2366679Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2366855Z   container in your                                                             
2025-08-19T12:26:49.2367198Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2367409Z   applications are more secure                                                  
2025-08-19T12:26:49.2367739Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2368054Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2368825Z                                                                                 
2025-08-19T12:26:49.2369029Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2369140Z     securityContext:          
2025-08-19T12:26:49.2369259Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2369399Z             5┆ spec:
2025-08-19T12:26:49.2369665Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2370015Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2370186Z   m-container                                                                   
2025-08-19T12:26:49.2370545Z           Container image-loader is running with a writable root filesystem.    
2025-08-19T12:26:49.2370737Z   This may allow malicious                                                      
2025-08-19T12:26:49.2371092Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2371272Z   container files. If an                                                        
2025-08-19T12:26:49.2371627Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2371827Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2372181Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2372495Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2373260Z                                                                                 
2025-08-19T12:26:49.2373468Z             7┆ - name: image-loader
2025-08-19T12:26:49.2374029Z                                                          
2025-08-19T12:26:49.2374228Z     deployments/kubernetes/nephio-bridge-deployment.yaml 
2025-08-19T12:26:49.2374563Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2374907Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2375227Z   they  are properly                                                            
2025-08-19T12:26:49.2375582Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2375773Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2376114Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2376312Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2376770Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2376948Z   recommended to  add a                                                         
2025-08-19T12:26:49.2377295Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2377466Z   set to `true`. This                                                           
2025-08-19T12:26:49.2377809Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2377986Z   damage that could be                                                          
2025-08-19T12:26:49.2378330Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2378507Z   container in your                                                             
2025-08-19T12:26:49.2378846Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2379061Z   applications are more secure                                                  
2025-08-19T12:26:49.2379393Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2379709Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2380478Z                                                                                 
2025-08-19T12:26:49.2380663Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2380775Z     securityContext:          
2025-08-19T12:26:49.2380910Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2381042Z            15┆ spec:
2025-08-19T12:26:49.2381303Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2381651Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2381823Z   m-container                                                                   
2025-08-19T12:26:49.2382170Z           Container nephio-bridge is running with a writable root filesystem.   
2025-08-19T12:26:49.2382372Z   This may allow malicious                                                      
2025-08-19T12:26:49.2382731Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2382914Z   container files. If an                                                        
2025-08-19T12:26:49.2383262Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2383469Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2383933Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2384251Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2385023Z                                                                                 
2025-08-19T12:26:49.2385227Z            18┆ - name: nephio-bridge
2025-08-19T12:26:49.2385648Z                                                        
2025-08-19T12:26:49.2385838Z     deployments/kustomize/base/keda/scaledobjects.yaml 
2025-08-19T12:26:49.2386176Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2386521Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2386698Z   they  are properly                                                            
2025-08-19T12:26:49.2387189Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2387390Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2387742Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2387941Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2388276Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2388578Z   recommended to  add a                                                         
2025-08-19T12:26:49.2388931Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2389097Z   set to `true`. This                                                           
2025-08-19T12:26:49.2389433Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2389615Z   damage that could be                                                          
2025-08-19T12:26:49.2389962Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2390136Z   container in your                                                             
2025-08-19T12:26:49.2390482Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2390688Z   applications are more secure                                                  
2025-08-19T12:26:49.2391018Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2391342Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2392113Z                                                                                 
2025-08-19T12:26:49.2392293Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2392401Z     securityContext:          
2025-08-19T12:26:49.2392526Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2392655Z           167┆ spec:
2025-08-19T12:26:49.2392924Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2393278Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2393446Z   m-container                                                                   
2025-08-19T12:26:49.2394110Z           Container indexer is running with a writable root filesystem. This may
2025-08-19T12:26:49.2394328Z   allow malicious                                                               
2025-08-19T12:26:49.2394698Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2394880Z   container files. If an                                                        
2025-08-19T12:26:49.2395229Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2395431Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2395793Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2396111Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2396881Z                                                                                 
2025-08-19T12:26:49.2397067Z           169┆ - name: indexer
2025-08-19T12:26:49.2397558Z                                                              
2025-08-19T12:26:49.2397776Z     deployments/kustomize/base/nephio-bridge/deployment.yaml 
2025-08-19T12:26:49.2398118Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2398463Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2398646Z   they  are properly                                                            
2025-08-19T12:26:49.2398986Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2399174Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2399684Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2399886Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2400218Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2400396Z   recommended to  add a                                                         
2025-08-19T12:26:49.2400943Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2401111Z   set to `true`. This                                                           
2025-08-19T12:26:49.2401446Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2401629Z   damage that could be                                                          
2025-08-19T12:26:49.2401969Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2402146Z   container in your                                                             
2025-08-19T12:26:49.2402489Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2402693Z   applications are more secure                                                  
2025-08-19T12:26:49.2403024Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2403345Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2404247Z                                                                                 
2025-08-19T12:26:49.2404434Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2404543Z     securityContext:          
2025-08-19T12:26:49.2404669Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2404801Z            16┆ spec:
2025-08-19T12:26:49.2405065Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2405428Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2405594Z   m-container                                                                   
2025-08-19T12:26:49.2405940Z           Container nephio-bridge is running with a writable root filesystem.   
2025-08-19T12:26:49.2406140Z   This may allow malicious                                                      
2025-08-19T12:26:49.2406490Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2406679Z   container files. If an                                                        
2025-08-19T12:26:49.2407032Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2407226Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2407579Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2407896Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2408668Z                                                                                 
2025-08-19T12:26:49.2408867Z            19┆ - name: nephio-bridge
2025-08-19T12:26:49.2409546Z                                                                         
2025-08-19T12:26:49.2409812Z     deployments/kustomize/base/optimized-hpa/enhanced-keda-scaling.yaml 
2025-08-19T12:26:49.2410145Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2410491Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2410674Z   they  are properly                                                            
2025-08-19T12:26:49.2411015Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2411203Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2411689Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2411906Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2412256Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2412445Z   recommended to  add a                                                         
2025-08-19T12:26:49.2412791Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2413077Z   set to `true`. This                                                           
2025-08-19T12:26:49.2413414Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2413598Z   damage that could be                                                          
2025-08-19T12:26:49.2414047Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2414222Z   container in your                                                             
2025-08-19T12:26:49.2414573Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2414778Z   applications are more secure                                                  
2025-08-19T12:26:49.2415111Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2415434Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2416198Z                                                                                 
2025-08-19T12:26:49.2416389Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2416502Z     securityContext:          
2025-08-19T12:26:49.2416621Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2416752Z           253┆ spec:
2025-08-19T12:26:49.2417013Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2417371Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2417556Z   m-container                                                                   
2025-08-19T12:26:49.2417912Z           Container optimizer is running with a writable root filesystem. This  
2025-08-19T12:26:49.2418103Z   may allow malicious                                                           
2025-08-19T12:26:49.2418458Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2418640Z   container files. If an                                                        
2025-08-19T12:26:49.2419008Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2419205Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2419563Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2419881Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2420667Z                                                                                 
2025-08-19T12:26:49.2420861Z           255┆ - name: optimizer
2025-08-19T12:26:49.2421279Z                                                        
2025-08-19T12:26:49.2421459Z     deployments/kustomize/base/rag-api/deployment.yaml 
2025-08-19T12:26:49.2421801Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2422143Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2422328Z   they  are properly                                                            
2025-08-19T12:26:49.2422675Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2422864Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2423208Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2423404Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2424030Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2424231Z   recommended to  add a                                                         
2025-08-19T12:26:49.2424586Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2424754Z   set to `true`. This                                                           
2025-08-19T12:26:49.2425092Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2425397Z   damage that could be                                                          
2025-08-19T12:26:49.2425736Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2425911Z   container in your                                                             
2025-08-19T12:26:49.2426250Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2426473Z   applications are more secure                                                  
2025-08-19T12:26:49.2426805Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2427123Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2427897Z                                                                                 
2025-08-19T12:26:49.2428087Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2428204Z     securityContext:          
2025-08-19T12:26:49.2428335Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2428467Z            16┆ spec:
2025-08-19T12:26:49.2428735Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2429093Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2429259Z   m-container                                                                   
2025-08-19T12:26:49.2429599Z           Container rag-api is running with a writable root filesystem. This may
2025-08-19T12:26:49.2429783Z   allow malicious                                                               
2025-08-19T12:26:49.2430142Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2430323Z   container files. If an                                                        
2025-08-19T12:26:49.2430672Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2430882Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2431239Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2431554Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2432325Z                                                                                 
2025-08-19T12:26:49.2432498Z            18┆ - name: rag-api
2025-08-19T12:26:49.2432995Z                                                              
2025-08-19T12:26:49.2433213Z     deployments/kustomize/llm-processor/base/deployment.yaml 
2025-08-19T12:26:49.2433544Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2434136Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2434335Z   they  are properly                                                            
2025-08-19T12:26:49.2434695Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2434883Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2435225Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2435420Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2435752Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2436081Z   recommended to  add a                                                         
2025-08-19T12:26:49.2436444Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2436611Z   set to `true`. This                                                           
2025-08-19T12:26:49.2436951Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2437133Z   damage that could be                                                          
2025-08-19T12:26:49.2437592Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2437767Z   container in your                                                             
2025-08-19T12:26:49.2438110Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2438316Z   applications are more secure                                                  
2025-08-19T12:26:49.2438656Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2438979Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2439747Z                                                                                 
2025-08-19T12:26:49.2439946Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2440056Z     securityContext:          
2025-08-19T12:26:49.2440182Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2440325Z            14┆ spec:
2025-08-19T12:26:49.2440593Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2440951Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2441243Z   m-container                                                                   
2025-08-19T12:26:49.2441817Z           Container llm-processor is running with a writable root filesystem.   
2025-08-19T12:26:49.2442133Z   This may allow malicious                                                      
2025-08-19T12:26:49.2442771Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2443225Z   container files. If an                                                        
2025-08-19T12:26:49.2444027Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2444494Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2445082Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2445674Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2446997Z                                                                                 
2025-08-19T12:26:49.2447557Z            16┆ - name: llm-processor
2025-08-19T12:26:49.2448392Z                                                                          
2025-08-19T12:26:49.2448841Z     deployments/kustomize/overlays/production/pod-security-policies.yaml 
2025-08-19T12:26:49.2449480Z        yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file   
2025-08-19T12:26:49.2450150Z           Secrets (LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t) should not be stored in
2025-08-19T12:26:49.2450596Z   infrastructure as                                                             
2025-08-19T12:26:49.2451150Z           code files. Use an alternative such as Bitnami Sealed Secrets or KSOPS
2025-08-19T12:26:49.2451587Z   to encrypt Kubernetes                                                         
2025-08-19T12:26:49.2452109Z           Secrets.                                                              
2025-08-19T12:26:49.2452638Z           Details: https://sg.run/KyL6                                          
2025-08-19T12:26:49.2453632Z                                                                                 
2025-08-19T12:26:49.2454250Z            59┆ tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t
2025-08-19T12:26:49.2454909Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2455443Z        yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file   
2025-08-19T12:26:49.2456109Z           Secrets (LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t) should not be stored in
2025-08-19T12:26:49.2456557Z   infrastructure as                                                             
2025-08-19T12:26:49.2457108Z           code files. Use an alternative such as Bitnami Sealed Secrets or KSOPS
2025-08-19T12:26:49.2457670Z   to encrypt Kubernetes                                                         
2025-08-19T12:26:49.2458165Z           Secrets.                                                              
2025-08-19T12:26:49.2458674Z           Details: https://sg.run/KyL6                                          
2025-08-19T12:26:49.2459667Z                                                                                 
2025-08-19T12:26:49.2460155Z            60┆ tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t
2025-08-19T12:26:49.2460774Z                                                        
2025-08-19T12:26:49.2461118Z     deployments/kustomize/rag-api/base/deployment.yaml 
2025-08-19T12:26:49.2461651Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2462273Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2462705Z   they  are properly                                                            
2025-08-19T12:26:49.2463269Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2463867Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2464442Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2464879Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2465441Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2466310Z   recommended to  add a                                                         
2025-08-19T12:26:49.2466876Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2467296Z   set to `true`. This                                                           
2025-08-19T12:26:49.2467835Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2468267Z   damage that could be                                                          
2025-08-19T12:26:49.2468818Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2469240Z   container in your                                                             
2025-08-19T12:26:49.2469785Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2470239Z   applications are more secure                                                  
2025-08-19T12:26:49.2470818Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2471379Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2472380Z                                                                                 
2025-08-19T12:26:49.2472738Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2472989Z     securityContext:          
2025-08-19T12:26:49.2473244Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2473530Z            14┆ spec:
2025-08-19T12:26:49.2474047Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2474569Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2475046Z   m-container                                                                   
2025-08-19T12:26:49.2475588Z           Container rag-api is running with a writable root filesystem. This may
2025-08-19T12:26:49.2476166Z   allow malicious                                                               
2025-08-19T12:26:49.2476736Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2477171Z   container files. If an                                                        
2025-08-19T12:26:49.2477740Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2478189Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2478925Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2479507Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2480508Z                                                                                 
2025-08-19T12:26:49.2480858Z            16┆ - name: rag-api
2025-08-19T12:26:49.2481448Z                                                           
2025-08-19T12:26:49.2481827Z     deployments/monitoring/centralized-logging-stack.yaml 
2025-08-19T12:26:49.2482380Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2483008Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2483433Z   they  are properly                                                            
2025-08-19T12:26:49.2484355Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2484855Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2485424Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2485865Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2486418Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2486839Z   recommended to  add a                                                         
2025-08-19T12:26:49.2487402Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2487824Z   set to `true`. This                                                           
2025-08-19T12:26:49.2488358Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2488775Z   damage that could be                                                          
2025-08-19T12:26:49.2489329Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2489750Z   container in your                                                             
2025-08-19T12:26:49.2490300Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2490752Z   applications are more secure                                                  
2025-08-19T12:26:49.2491319Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2491885Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2492879Z                                                                                 
2025-08-19T12:26:49.2493289Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2493535Z     securityContext:          
2025-08-19T12:26:49.2493942Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2494216Z            67┆ spec:
2025-08-19T12:26:49.2494589Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2494942Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2495176Z     securityContext:          
2025-08-19T12:26:49.2495429Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2495684Z           198┆ spec:
2025-08-19T12:26:49.2496046Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2496376Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2496610Z     securityContext:          
2025-08-19T12:26:49.2496855Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2497118Z           322┆ spec:
2025-08-19T12:26:49.2497641Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2497987Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2498223Z     securityContext:          
2025-08-19T12:26:49.2498466Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2498725Z           852┆ spec:
2025-08-19T12:26:49.2499077Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2499590Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2500201Z   m-container                                                                   
2025-08-19T12:26:49.2500761Z           Container elasticsearch is running with a writable root filesystem.   
2025-08-19T12:26:49.2501209Z   This may allow malicious                                                      
2025-08-19T12:26:49.2501783Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2502225Z   container files. If an                                                        
2025-08-19T12:26:49.2502789Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2503243Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2503975Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2504553Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2505560Z                                                                                 
2025-08-19T12:26:49.2505931Z            81┆ - name: elasticsearch
2025-08-19T12:26:49.2506348Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2506856Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2507326Z   m-container                                                                   
2025-08-19T12:26:49.2507874Z           Container kibana is running with a writable root filesystem. This may 
2025-08-19T12:26:49.2508289Z   allow malicious                                                               
2025-08-19T12:26:49.2508853Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2509319Z   container files. If an                                                        
2025-08-19T12:26:49.2509883Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2510345Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2510925Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2511501Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2512495Z                                                                                 
2025-08-19T12:26:49.2512836Z           200┆ - name: kibana
2025-08-19T12:26:49.2513229Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2513872Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2514347Z   m-container                                                                   
2025-08-19T12:26:49.2514885Z           Container fluentd is running with a writable root filesystem. This may
2025-08-19T12:26:49.2515312Z   allow malicious                                                               
2025-08-19T12:26:49.2515877Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2516308Z   container files. If an                                                        
2025-08-19T12:26:49.2516867Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2517335Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2517921Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2518704Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2519718Z                                                                                 
2025-08-19T12:26:49.2520068Z           330┆ - name: fluentd
2025-08-19T12:26:49.2520457Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2520965Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2521579Z   m-container                                                                   
2025-08-19T12:26:49.2522139Z           Container kibana-setup is running with a writable root filesystem.    
2025-08-19T12:26:49.2522589Z   This may allow malicious                                                      
2025-08-19T12:26:49.2523174Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2523603Z   container files. If an                                                        
2025-08-19T12:26:49.2524328Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2524781Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2525360Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2525933Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2526929Z                                                                                 
2025-08-19T12:26:49.2527304Z           855┆ - name: kibana-setup
2025-08-19T12:26:49.2527907Z                                                           
2025-08-19T12:26:49.2528273Z     deployments/monitoring/complete-monitoring-stack.yaml 
2025-08-19T12:26:49.2528826Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2529448Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2529883Z   they  are properly                                                            
2025-08-19T12:26:49.2530434Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2530876Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2531439Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2531871Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2532438Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2532857Z   recommended to  add a                                                         
2025-08-19T12:26:49.2533423Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2534215Z   set to `true`. This                                                           
2025-08-19T12:26:49.2534791Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2535215Z   damage that could be                                                          
2025-08-19T12:26:49.2535762Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2536187Z   container in your                                                             
2025-08-19T12:26:49.2536732Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2537195Z   applications are more secure                                                  
2025-08-19T12:26:49.2537768Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2538323Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2539321Z                                                                                 
2025-08-19T12:26:49.2539681Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2540088Z     securityContext:          
2025-08-19T12:26:49.2540351Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2540622Z            74┆ spec:
2025-08-19T12:26:49.2540991Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2541334Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2541573Z     securityContext:          
2025-08-19T12:26:49.2541819Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2542083Z           159┆ spec:
2025-08-19T12:26:49.2542625Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2542961Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2543194Z     securityContext:          
2025-08-19T12:26:49.2543444Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2543840Z           295┆ spec:
2025-08-19T12:26:49.2544210Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2544544Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2544775Z     securityContext:          
2025-08-19T12:26:49.2545037Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2545295Z           392┆ spec:
2025-08-19T12:26:49.2545653Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2546162Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2546644Z   m-container                                                                   
2025-08-19T12:26:49.2547198Z           Container prometheus is running with a writable root filesystem. This 
2025-08-19T12:26:49.2547648Z   may allow malicious                                                           
2025-08-19T12:26:49.2548221Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2548649Z   container files. If an                                                        
2025-08-19T12:26:49.2549215Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2549673Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2550262Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2550840Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2551832Z                                                                                 
2025-08-19T12:26:49.2552194Z            77┆ - name: prometheus
2025-08-19T12:26:49.2552593Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2553115Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2553580Z   m-container                                                                   
2025-08-19T12:26:49.2554279Z           Container grafana is running with a writable root filesystem. This may
2025-08-19T12:26:49.2554708Z   allow malicious                                                               
2025-08-19T12:26:49.2555272Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2555710Z   container files. If an                                                        
2025-08-19T12:26:49.2556269Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2556718Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2557300Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2557878Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2558872Z                                                                                 
2025-08-19T12:26:49.2559211Z           161┆ - name: grafana
2025-08-19T12:26:49.2559600Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2560108Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2560724Z   m-container                                                                   
2025-08-19T12:26:49.2561277Z           Container jaeger is running with a writable root filesystem. This may 
2025-08-19T12:26:49.2561698Z   allow malicious                                                               
2025-08-19T12:26:49.2562259Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2562687Z   container files. If an                                                        
2025-08-19T12:26:49.2563385Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2563941Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2564527Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2565103Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2566093Z                                                                                 
2025-08-19T12:26:49.2566442Z           297┆ - name: jaeger
2025-08-19T12:26:49.2566829Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2567341Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2567810Z   m-container                                                                   
2025-08-19T12:26:49.2568358Z           Container alertmanager is running with a writable root filesystem.    
2025-08-19T12:26:49.2568814Z   This may allow malicious                                                      
2025-08-19T12:26:49.2569388Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2569821Z   container files. If an                                                        
2025-08-19T12:26:49.2570380Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2570832Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2571423Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2571995Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2572992Z                                                                                 
2025-08-19T12:26:49.2573348Z           394┆ - name: alertmanager
2025-08-19T12:26:49.2574032Z                                                       
2025-08-19T12:26:49.2574377Z     deployments/monitoring/custom-metrics-config.yaml 
2025-08-19T12:26:49.2574910Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2575529Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2575953Z   they  are properly                                                            
2025-08-19T12:26:49.2576507Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2576953Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2577519Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2577954Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2578509Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2578929Z   recommended to  add a                                                         
2025-08-19T12:26:49.2579495Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2579916Z   set to `true`. This                                                           
2025-08-19T12:26:49.2580450Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2580873Z   damage that could be                                                          
2025-08-19T12:26:49.2581567Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2581994Z   container in your                                                             
2025-08-19T12:26:49.2582541Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2582989Z   applications are more secure                                                  
2025-08-19T12:26:49.2583559Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2584387Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2585380Z                                                                                 
2025-08-19T12:26:49.2585735Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2585971Z     securityContext:          
2025-08-19T12:26:49.2586222Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2586478Z           267┆ spec:
2025-08-19T12:26:49.2586846Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2587365Z        yaml.kubernetes.security.skip-tls-verify-service.skip-tls-verify-service 
2025-08-19T12:26:49.2588016Z           Service is disabling TLS certificate verification when communicating  
2025-08-19T12:26:49.2588448Z   with the server. This                                                         
2025-08-19T12:26:49.2588999Z           makes your HTTPS connections insecure. Remove the                     
2025-08-19T12:26:49.2589463Z   'insecureSkipTLSVerify: true' key to                                          
2025-08-19T12:26:49.2590039Z           secure communication.                                                 
2025-08-19T12:26:49.2590579Z           Details: https://sg.run/zk10                                          
2025-08-19T12:26:49.2591572Z                                                                                 
2025-08-19T12:26:49.2591867Z           329┆ spec:
2025-08-19T12:26:49.2592128Z           330┆   service:
2025-08-19T12:26:49.2592499Z           331┆     name: custom-metrics-apiserver
2025-08-19T12:26:49.2592904Z           332┆     namespace: nephoran-system
2025-08-19T12:26:49.2593291Z           333┆   group: custom.metrics.k8s.io
2025-08-19T12:26:49.2593635Z           334┆   version: v1beta1
2025-08-19T12:26:49.2594126Z           335┆   insecureSkipTLSVerify: true
2025-08-19T12:26:49.2594517Z           336┆   groupPriorityMinimum: 100
2025-08-19T12:26:49.2594880Z           337┆   versionPriority: 100
2025-08-19T12:26:49.2595303Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2595823Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2596292Z   m-container                                                                   
2025-08-19T12:26:49.2596856Z           Container custom-metrics-apiserver is running with a writable root    
2025-08-19T12:26:49.2597295Z   filesystem. This may                                                          
2025-08-19T12:26:49.2597887Z           allow malicious applications to download and run additional payloads, 
2025-08-19T12:26:49.2598326Z   or modify container                                                           
2025-08-19T12:26:49.2598874Z           files. If an application inside a container has to save something     
2025-08-19T12:26:49.2599323Z   temporarily consider using                                                    
2025-08-19T12:26:49.2599903Z           a tmpfs. Add 'readOnlyRootFilesystem: true' to this container to      
2025-08-19T12:26:49.2600344Z   prevent this.                                                                 
2025-08-19T12:26:49.2600896Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2601920Z                                                                                 
2025-08-19T12:26:49.2602350Z           270┆ - name: custom-metrics-apiserver
2025-08-19T12:26:49.2602969Z                                                          
2025-08-19T12:26:49.2603491Z     deployments/monitoring/elasticsearch-deployment.yaml 
2025-08-19T12:26:49.2604207Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2604847Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2605285Z   they  are properly                                                            
2025-08-19T12:26:49.2605840Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2606429Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2606998Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2607438Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2608005Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2608440Z   recommended to  add a                                                         
2025-08-19T12:26:49.2609005Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2609465Z   set to `true`. This                                                           
2025-08-19T12:26:49.2610008Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2610425Z   damage that could be                                                          
2025-08-19T12:26:49.2610987Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2611412Z   container in your                                                             
2025-08-19T12:26:49.2611960Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2612415Z   applications are more secure                                                  
2025-08-19T12:26:49.2612982Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2613551Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2614710Z                                                                                 
2025-08-19T12:26:49.2615074Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2615331Z     securityContext:          
2025-08-19T12:26:49.2615585Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2615849Z           471┆ spec:
2025-08-19T12:26:49.2616237Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2616761Z        yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file   
2025-08-19T12:26:49.2617419Z           Secrets (bmVwaG9yYW4tZWxhc3RpYy0yMDI0) should not be stored in        
2025-08-19T12:26:49.2627707Z   infrastructure as code files.                                                 
2025-08-19T12:26:49.2628420Z           Use an alternative such as Bitnami Sealed Secrets or KSOPS to encrypt 
2025-08-19T12:26:49.2628890Z   Kubernetes Secrets.                                                           
2025-08-19T12:26:49.2629442Z           Details: https://sg.run/KyL6                                          
2025-08-19T12:26:49.2630440Z                                                                                 
2025-08-19T12:26:49.2630962Z           204┆ password: bmVwaG9yYW4tZWxhc3RpYy0yMDI0
2025-08-19T12:26:49.2631437Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2631987Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2632482Z   m-container                                                                   
2025-08-19T12:26:49.2633041Z           Container elasticsearch is running with a writable root filesystem.   
2025-08-19T12:26:49.2633494Z   This may allow malicious                                                      
2025-08-19T12:26:49.2634234Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2634908Z   container files. If an                                                        
2025-08-19T12:26:49.2635497Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2635949Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2636543Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2637127Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2638263Z                                                                                 
2025-08-19T12:26:49.2638660Z            79┆ - name: elasticsearch
2025-08-19T12:26:49.2639087Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2639612Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2640085Z   m-container                                                                   
2025-08-19T12:26:49.2640652Z           Container elasticsearch-exporter is running with a writable root      
2025-08-19T12:26:49.2641109Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.2641706Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2642161Z   modify container files.                                                       
2025-08-19T12:26:49.2642736Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2643165Z   consider using a                                                              
2025-08-19T12:26:49.2643852Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2644255Z   this.                                                                         
2025-08-19T12:26:49.2644750Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2645749Z                                                                                 
2025-08-19T12:26:49.2646160Z           473┆ - name: elasticsearch-exporter
2025-08-19T12:26:49.2646696Z                                                    
2025-08-19T12:26:49.2647037Z     deployments/monitoring/grafana-deployment.yaml 
2025-08-19T12:26:49.2647581Z        yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file   
2025-08-19T12:26:49.2648232Z           Secrets (bmVwaG9yYW4tZ3JhZmFuYQ==) should not be stored in            
2025-08-19T12:26:49.2648702Z   infrastructure as code files. Use                                             
2025-08-19T12:26:49.2649283Z           an alternative such as Bitnami Sealed Secrets or KSOPS to encrypt     
2025-08-19T12:26:49.2649716Z   Kubernetes Secrets.                                                           
2025-08-19T12:26:49.2650260Z           Details: https://sg.run/KyL6                                          
2025-08-19T12:26:49.2651254Z                                                                                 
2025-08-19T12:26:49.2651836Z           151┆ admin-password: bmVwaG9yYW4tZ3JhZmFuYQ== # base64 encoded        
2025-08-19T12:26:49.2652283Z   "nephoran-grafana"                                                            
2025-08-19T12:26:49.2652770Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2653283Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2653914Z   m-container                                                                   
2025-08-19T12:26:49.2654454Z           Container grafana is running with a writable root filesystem. This may
2025-08-19T12:26:49.2654882Z   allow malicious                                                               
2025-08-19T12:26:49.2655444Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2655879Z   container files. If an                                                        
2025-08-19T12:26:49.2656601Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2657066Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2657654Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2658227Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2659218Z                                                                                 
2025-08-19T12:26:49.2659715Z            21┆ - name: grafana
2025-08-19T12:26:49.2660378Z                                                                 
2025-08-19T12:26:49.2660783Z     deployments/monitoring/health-checks-service-discovery.yaml 
2025-08-19T12:26:49.2661351Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2661975Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2662409Z   they  are properly                                                            
2025-08-19T12:26:49.2662967Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2663408Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2664135Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2664578Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2665142Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2665560Z   recommended to  add a                                                         
2025-08-19T12:26:49.2666121Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2666550Z   set to `true`. This                                                           
2025-08-19T12:26:49.2667094Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2667515Z   damage that could be                                                          
2025-08-19T12:26:49.2668067Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2668490Z   container in your                                                             
2025-08-19T12:26:49.2669039Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2669497Z   applications are more secure                                                  
2025-08-19T12:26:49.2670064Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2670903Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2672357Z                                                                                 
2025-08-19T12:26:49.2672883Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2673269Z     securityContext:          
2025-08-19T12:26:49.2673529Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2673947Z           218┆ spec:
2025-08-19T12:26:49.2674469Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2674998Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2675517Z   m-container                                                                   
2025-08-19T12:26:49.2676072Z           Container health-monitor is running with a writable root filesystem.  
2025-08-19T12:26:49.2676512Z   This may allow                                                                
2025-08-19T12:26:49.2677109Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2677794Z   modify container files.                                                       
2025-08-19T12:26:49.2678359Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2678970Z   consider using a                                                              
2025-08-19T12:26:49.2679536Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2679936Z   this.                                                                         
2025-08-19T12:26:49.2680434Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2681415Z                                                                                 
2025-08-19T12:26:49.2681943Z           221┆ - name: health-monitor
2025-08-19T12:26:49.2682422Z                                                
2025-08-19T12:26:49.2682735Z     deployments/monitoring/jaeger-tracing.yaml 
2025-08-19T12:26:49.2683239Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2684009Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2684460Z   they  are properly                                                            
2025-08-19T12:26:49.2685013Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2685453Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2686016Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2686455Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2687013Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2687443Z   recommended to  add a                                                         
2025-08-19T12:26:49.2688003Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2688416Z   set to `true`. This                                                           
2025-08-19T12:26:49.2688954Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2689376Z   damage that could be                                                          
2025-08-19T12:26:49.2689926Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2690349Z   container in your                                                             
2025-08-19T12:26:49.2690895Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2691351Z   applications are more secure                                                  
2025-08-19T12:26:49.2691916Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2692474Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2693448Z                                                                                 
2025-08-19T12:26:49.2693899Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2694152Z     securityContext:          
2025-08-19T12:26:49.2694410Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2694683Z            23┆ spec:
2025-08-19T12:26:49.2695054Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2695399Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2695630Z     securityContext:          
2025-08-19T12:26:49.2695881Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2696138Z           473┆ spec:
2025-08-19T12:26:49.2696497Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2697022Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2697495Z   m-container                                                                   
2025-08-19T12:26:49.2698041Z           Container jaeger is running with a writable root filesystem. This may 
2025-08-19T12:26:49.2698459Z   allow malicious                                                               
2025-08-19T12:26:49.2699165Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2699607Z   container files. If an                                                        
2025-08-19T12:26:49.2700171Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2700632Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2701216Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2701915Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2702898Z                                                                                 
2025-08-19T12:26:49.2703240Z            25┆ - name: jaeger
2025-08-19T12:26:49.2703630Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2704289Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2704764Z   m-container                                                                   
2025-08-19T12:26:49.2705322Z           Container otel-collector is running with a writable root filesystem.  
2025-08-19T12:26:49.2705737Z   This may allow                                                                
2025-08-19T12:26:49.2706294Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2706737Z   modify container files.                                                       
2025-08-19T12:26:49.2707308Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2707725Z   consider using a                                                              
2025-08-19T12:26:49.2708273Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2708668Z   this.                                                                         
2025-08-19T12:26:49.2709193Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2710178Z                                                                                 
2025-08-19T12:26:49.2710553Z           475┆ - name: otel-collector
2025-08-19T12:26:49.2711062Z                                                   
2025-08-19T12:26:49.2711387Z     deployments/monitoring/kibana-deployment.yaml 
2025-08-19T12:26:49.2711919Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2712386Z   m-container                                                                   
2025-08-19T12:26:49.2712933Z           Container kibana is running with a writable root filesystem. This may 
2025-08-19T12:26:49.2713112Z   allow malicious                                                               
2025-08-19T12:26:49.2713462Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2713643Z   container files. If an                                                        
2025-08-19T12:26:49.2714127Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2714323Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2714674Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2714985Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2715732Z                                                                                 
2025-08-19T12:26:49.2715907Z           298┆ - name: kibana
2025-08-19T12:26:49.2716165Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2716519Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2716682Z   m-container                                                                   
2025-08-19T12:26:49.2717017Z           Container setup is running with a writable root filesystem. This may  
2025-08-19T12:26:49.2717410Z   allow malicious                                                               
2025-08-19T12:26:49.2717784Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2717969Z   container files. If an                                                        
2025-08-19T12:26:49.2718323Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2718517Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2719011Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2719332Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2720078Z                                                                                 
2025-08-19T12:26:49.2720249Z           448┆ - name: setup
2025-08-19T12:26:49.2720623Z                                                     
2025-08-19T12:26:49.2720810Z     deployments/monitoring/logstash-deployment.yaml 
2025-08-19T12:26:49.2721153Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2721317Z   m-container                                                                   
2025-08-19T12:26:49.2721659Z           Container logstash is running with a writable root filesystem. This   
2025-08-19T12:26:49.2721840Z   may allow malicious                                                           
2025-08-19T12:26:49.2722194Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2722380Z   container files. If an                                                        
2025-08-19T12:26:49.2722724Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2722916Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2723269Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2723586Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2724463Z                                                                                 
2025-08-19T12:26:49.2724646Z           566┆ - name: logstash
2025-08-19T12:26:49.2725117Z                                                             
2025-08-19T12:26:49.2725333Z     deployments/monitoring/opentelemetry-configuration.yaml 
2025-08-19T12:26:49.2725671Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2726012Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2726190Z   they  are properly                                                            
2025-08-19T12:26:49.2726527Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2726722Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2727064Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2727256Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2727587Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2727765Z   recommended to  add a                                                         
2025-08-19T12:26:49.2728109Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2728285Z   set to `true`. This                                                           
2025-08-19T12:26:49.2728614Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2728791Z   damage that could be                                                          
2025-08-19T12:26:49.2729129Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2729439Z   container in your                                                             
2025-08-19T12:26:49.2729784Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2729997Z   applications are more secure                                                  
2025-08-19T12:26:49.2730324Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2730634Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2731504Z                                                                                 
2025-08-19T12:26:49.2731694Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2731805Z     securityContext:          
2025-08-19T12:26:49.2731924Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2732061Z           185┆ spec:
2025-08-19T12:26:49.2732324Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2732673Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2732851Z   m-container                                                                   
2025-08-19T12:26:49.2733199Z           Container otel-collector is running with a writable root filesystem.  
2025-08-19T12:26:49.2733362Z   This may allow                                                                
2025-08-19T12:26:49.2733830Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2734039Z   modify container files.                                                       
2025-08-19T12:26:49.2734379Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2734553Z   consider using a                                                              
2025-08-19T12:26:49.2734908Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2735053Z   this.                                                                         
2025-08-19T12:26:49.2735368Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2736120Z                                                                                 
2025-08-19T12:26:49.2736323Z           188┆ - name: otel-collector
2025-08-19T12:26:49.2736843Z                                                                 
2025-08-19T12:26:49.2737083Z     deployments/monitoring/operational-runbooks-automation.yaml 
2025-08-19T12:26:49.2737420Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2737755Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2737937Z   they  are properly                                                            
2025-08-19T12:26:49.2738273Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2738462Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2738802Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2738998Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2739325Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2739504Z   recommended to  add a                                                         
2025-08-19T12:26:49.2739852Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2740022Z   set to `true`. This                                                           
2025-08-19T12:26:49.2740354Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2740534Z   damage that could be                                                          
2025-08-19T12:26:49.2740868Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2741184Z   container in your                                                             
2025-08-19T12:26:49.2741531Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2741736Z   applications are more secure                                                  
2025-08-19T12:26:49.2742062Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2742380Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2743254Z                                                                                 
2025-08-19T12:26:49.2743433Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2743541Z     securityContext:          
2025-08-19T12:26:49.2743666Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2743959Z           757┆ spec:
2025-08-19T12:26:49.2744223Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2744402Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2744513Z     securityContext:          
2025-08-19T12:26:49.2744649Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2744782Z           884┆ spec:
2025-08-19T12:26:49.2745046Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2745216Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2745324Z     securityContext:          
2025-08-19T12:26:49.2745445Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2745573Z           920┆ spec:
2025-08-19T12:26:49.2745824Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2746186Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2746351Z   m-container                                                                   
2025-08-19T12:26:49.2746698Z           Container incident-responder is running with a writable root          
2025-08-19T12:26:49.2746899Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.2747260Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2747452Z   modify container files.                                                       
2025-08-19T12:26:49.2747786Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2747965Z   consider using a                                                              
2025-08-19T12:26:49.2748313Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2748464Z   this.                                                                         
2025-08-19T12:26:49.2748783Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2749532Z                                                                                 
2025-08-19T12:26:49.2749747Z           760┆ - name: incident-responder
2025-08-19T12:26:49.2750008Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2750361Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2750528Z   m-container                                                                   
2025-08-19T12:26:49.2750877Z           Container health-check is running with a writable root filesystem.    
2025-08-19T12:26:49.2751069Z   This may allow malicious                                                      
2025-08-19T12:26:49.2751418Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2751605Z   container files. If an                                                        
2025-08-19T12:26:49.2751955Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2752149Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2752502Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2752963Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2753866Z                                                                                 
2025-08-19T12:26:49.2754076Z           887┆ - name: health-check
2025-08-19T12:26:49.2754337Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2754684Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2754849Z   m-container                                                                   
2025-08-19T12:26:49.2755339Z           Container weekly-maintenance is running with a writable root          
2025-08-19T12:26:49.2755534Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.2755888Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2756087Z   modify container files.                                                       
2025-08-19T12:26:49.2756429Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2756600Z   consider using a                                                              
2025-08-19T12:26:49.2756946Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2757093Z   this.                                                                         
2025-08-19T12:26:49.2757402Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2758154Z                                                                                 
2025-08-19T12:26:49.2758371Z           923┆ - name: weekly-maintenance
2025-08-19T12:26:49.2758904Z                                                                  
2025-08-19T12:26:49.2759141Z     deployments/monitoring/performance-benchmarking-grafana.yaml 
2025-08-19T12:26:49.2759492Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2759665Z   m-container                                                                   
2025-08-19T12:26:49.2760002Z           Container grafana is running with a writable root filesystem. This may
2025-08-19T12:26:49.2760181Z   allow malicious                                                               
2025-08-19T12:26:49.2760532Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2760718Z   container files. If an                                                        
2025-08-19T12:26:49.2761076Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2761272Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2761624Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2761936Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2762689Z                                                                                 
2025-08-19T12:26:49.2762863Z           790┆ - name: grafana
2025-08-19T12:26:49.2763438Z                                                                     
2025-08-19T12:26:49.2763869Z     deployments/monitoring/performance-benchmarking-prometheus.yaml 
2025-08-19T12:26:49.2764234Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2764573Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2764762Z   they  are properly                                                            
2025-08-19T12:26:49.2765098Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2765286Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2765629Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2765818Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2766301Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2766496Z   recommended to  add a                                                         
2025-08-19T12:26:49.2766840Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2767007Z   set to `true`. This                                                           
2025-08-19T12:26:49.2767462Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2767648Z   damage that could be                                                          
2025-08-19T12:26:49.2767982Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2768155Z   container in your                                                             
2025-08-19T12:26:49.2768493Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2768704Z   applications are more secure                                                  
2025-08-19T12:26:49.2769029Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2769348Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2770098Z                                                                                 
2025-08-19T12:26:49.2770285Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2770405Z     securityContext:          
2025-08-19T12:26:49.2770526Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2770657Z           475┆ spec:
2025-08-19T12:26:49.2770921Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2771273Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2771438Z   m-container                                                                   
2025-08-19T12:26:49.2771795Z           Container prometheus is running with a writable root filesystem. This 
2025-08-19T12:26:49.2771984Z   may allow malicious                                                           
2025-08-19T12:26:49.2772333Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2772516Z   container files. If an                                                        
2025-08-19T12:26:49.2772864Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2773064Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2773415Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2773937Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2774910Z                                                                                 
2025-08-19T12:26:49.2775113Z           478┆ - name: prometheus
2025-08-19T12:26:49.2775525Z                                                       
2025-08-19T12:26:49.2775740Z     deployments/monitoring/prometheus-deployment.yaml 
2025-08-19T12:26:49.2776090Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2776256Z   m-container                                                                   
2025-08-19T12:26:49.2776607Z           Container prometheus is running with a writable root filesystem. This 
2025-08-19T12:26:49.2776796Z   may allow malicious                                                           
2025-08-19T12:26:49.2777146Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2777334Z   container files. If an                                                        
2025-08-19T12:26:49.2777679Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2777874Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2778383Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2778703Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2779453Z                                                                                 
2025-08-19T12:26:49.2779650Z            26┆ - name: prometheus
2025-08-19T12:26:49.2780092Z                                                           
2025-08-19T12:26:49.2780423Z     deployments/monitoring/sla-monitoring-deployment.yaml 
2025-08-19T12:26:49.2780754Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2781101Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2781280Z   they  are properly                                                            
2025-08-19T12:26:49.2781618Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2781821Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2782158Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2782349Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2782681Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2782860Z   recommended to  add a                                                         
2025-08-19T12:26:49.2783207Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2783377Z   set to `true`. This                                                           
2025-08-19T12:26:49.2783882Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2784067Z   damage that could be                                                          
2025-08-19T12:26:49.2784413Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2784590Z   container in your                                                             
2025-08-19T12:26:49.2784929Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2785147Z   applications are more secure                                                  
2025-08-19T12:26:49.2785481Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2785801Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2786562Z                                                                                 
2025-08-19T12:26:49.2786760Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2786872Z     securityContext:          
2025-08-19T12:26:49.2786992Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2787127Z           128┆ spec:
2025-08-19T12:26:49.2787397Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2787575Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2787685Z     securityContext:          
2025-08-19T12:26:49.2787810Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2787941Z           227┆ spec:
2025-08-19T12:26:49.2788197Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2788371Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2788480Z     securityContext:          
2025-08-19T12:26:49.2788600Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2788743Z           300┆ spec:
2025-08-19T12:26:49.2788997Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2789168Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2789275Z     securityContext:          
2025-08-19T12:26:49.2789405Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2789536Z           378┆ spec:
2025-08-19T12:26:49.2789790Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2789966Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2790223Z     securityContext:          
2025-08-19T12:26:49.2790349Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2790496Z           456┆ spec:
2025-08-19T12:26:49.2790768Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2791121Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2791290Z   m-container                                                                   
2025-08-19T12:26:49.2791647Z           Container sla-controller is running with a writable root filesystem.  
2025-08-19T12:26:49.2791945Z   This may allow                                                                
2025-08-19T12:26:49.2792306Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2792505Z   modify container files.                                                       
2025-08-19T12:26:49.2792843Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2793024Z   consider using a                                                              
2025-08-19T12:26:49.2793379Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2793524Z   this.                                                                         
2025-08-19T12:26:49.2794006Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2794773Z                                                                                 
2025-08-19T12:26:49.2794991Z           131┆ - name: sla-controller
2025-08-19T12:26:49.2795247Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2795595Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2795768Z   m-container                                                                   
2025-08-19T12:26:49.2796114Z           Container metrics-collector is running with a writable root           
2025-08-19T12:26:49.2796317Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.2796675Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2796867Z   modify container files.                                                       
2025-08-19T12:26:49.2797204Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2797383Z   consider using a                                                              
2025-08-19T12:26:49.2797736Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2797879Z   this.                                                                         
2025-08-19T12:26:49.2798199Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2798958Z                                                                                 
2025-08-19T12:26:49.2799171Z           230┆ - name: metrics-collector
2025-08-19T12:26:49.2799439Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2799798Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2799966Z   m-container                                                                   
2025-08-19T12:26:49.2800314Z           Container predictive-analyzer is running with a writable root         
2025-08-19T12:26:49.2800516Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.2800880Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2801073Z   modify container files.                                                       
2025-08-19T12:26:49.2801414Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2801586Z   consider using a                                                              
2025-08-19T12:26:49.2802078Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2802236Z   this.                                                                         
2025-08-19T12:26:49.2802548Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2803308Z                                                                                 
2025-08-19T12:26:49.2803536Z           303┆ - name: predictive-analyzer
2025-08-19T12:26:49.2804041Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2804395Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2804560Z   m-container                                                                   
2025-08-19T12:26:49.2804914Z           Container synthetic-monitor is running with a writable root           
2025-08-19T12:26:49.2805111Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.2805475Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2805679Z   modify container files.                                                       
2025-08-19T12:26:49.2806016Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2806188Z   consider using a                                                              
2025-08-19T12:26:49.2806541Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2806696Z   this.                                                                         
2025-08-19T12:26:49.2807008Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2807769Z                                                                                 
2025-08-19T12:26:49.2807984Z           381┆ - name: synthetic-monitor
2025-08-19T12:26:49.2808239Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2808599Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2808762Z   m-container                                                                   
2025-08-19T12:26:49.2809144Z           Container storage-manager is running with a writable root filesystem. 
2025-08-19T12:26:49.2809310Z   This may allow                                                                
2025-08-19T12:26:49.2809671Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2809873Z   modify container files.                                                       
2025-08-19T12:26:49.2810212Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2810387Z   consider using a                                                              
2025-08-19T12:26:49.2810739Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2810886Z   this.                                                                         
2025-08-19T12:26:49.2811208Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2811965Z                                                                                 
2025-08-19T12:26:49.2812168Z           459┆ - name: storage-manager
2025-08-19T12:26:49.2812613Z                                                           
2025-08-19T12:26:49.2812821Z     deployments/monitoring/structured-logging-config.yaml 
2025-08-19T12:26:49.2813158Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2813500Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2813685Z   they  are properly                                                            
2025-08-19T12:26:49.2814125Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2814505Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2814864Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2815058Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2815388Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2815573Z   recommended to  add a                                                         
2025-08-19T12:26:49.2816040Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2816210Z   set to `true`. This                                                           
2025-08-19T12:26:49.2816548Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2816732Z   damage that could be                                                          
2025-08-19T12:26:49.2817067Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2817249Z   container in your                                                             
2025-08-19T12:26:49.2817593Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2817801Z   applications are more secure                                                  
2025-08-19T12:26:49.2818130Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2818454Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2819225Z                                                                                 
2025-08-19T12:26:49.2819427Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2819543Z     securityContext:          
2025-08-19T12:26:49.2819661Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2819792Z           381┆ spec:
2025-08-19T12:26:49.2820055Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2820417Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2820585Z   m-container                                                                   
2025-08-19T12:26:49.2820924Z           Container fluentd is running with a writable root filesystem. This may
2025-08-19T12:26:49.2821105Z   allow malicious                                                               
2025-08-19T12:26:49.2821454Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2821644Z   container files. If an                                                        
2025-08-19T12:26:49.2821996Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2822192Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2822547Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2822869Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2823625Z                                                                                 
2025-08-19T12:26:49.2824098Z           384┆ - name: fluentd
2025-08-19T12:26:49.2824689Z                                                                 
2025-08-19T12:26:49.2824930Z     deployments/monitoring/validation-dashboard-deployment.yaml 
2025-08-19T12:26:49.2825262Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2825618Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2825805Z   they  are properly                                                            
2025-08-19T12:26:49.2826145Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2826334Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2826914Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2827138Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2827471Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2827656Z   recommended to  add a                                                         
2025-08-19T12:26:49.2828005Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2828294Z   set to `true`. This                                                           
2025-08-19T12:26:49.2828635Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2828812Z   damage that could be                                                          
2025-08-19T12:26:49.2829148Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2829329Z   container in your                                                             
2025-08-19T12:26:49.2829673Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2829879Z   applications are more secure                                                  
2025-08-19T12:26:49.2830211Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2830532Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2831287Z                                                                                 
2025-08-19T12:26:49.2831491Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2831604Z     securityContext:          
2025-08-19T12:26:49.2831723Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2831855Z            19┆ spec:
2025-08-19T12:26:49.2832122Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2832470Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2832645Z   m-container                                                                   
2025-08-19T12:26:49.2833007Z           Container dashboard-provisioner is running with a writable root       
2025-08-19T12:26:49.2833205Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.2833559Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2833902Z   modify container files.                                                       
2025-08-19T12:26:49.2834255Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2834428Z   consider using a                                                              
2025-08-19T12:26:49.2834780Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2834928Z   this.                                                                         
2025-08-19T12:26:49.2835245Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2836008Z                                                                                 
2025-08-19T12:26:49.2836257Z            22┆ - name: dashboard-provisioner
2025-08-19T12:26:49.2836730Z                                                             
2025-08-19T12:26:49.2836946Z     deployments/monitoring/validation-dashboard-export.yaml 
2025-08-19T12:26:49.2837280Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2837624Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2837801Z   they  are properly                                                            
2025-08-19T12:26:49.2838139Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2838333Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2838668Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2839013Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2839357Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2839538Z   recommended to  add a                                                         
2025-08-19T12:26:49.2839884Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2840288Z   set to `true`. This                                                           
2025-08-19T12:26:49.2840628Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2840807Z   damage that could be                                                          
2025-08-19T12:26:49.2841148Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2841322Z   container in your                                                             
2025-08-19T12:26:49.2841667Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2841878Z   applications are more secure                                                  
2025-08-19T12:26:49.2842207Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2842521Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2843285Z                                                                                 
2025-08-19T12:26:49.2843476Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2843586Z     securityContext:          
2025-08-19T12:26:49.2843841Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2843984Z           195┆ spec:
2025-08-19T12:26:49.2844249Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2844596Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2844776Z   m-container                                                                   
2025-08-19T12:26:49.2845125Z           Container dashboard-exporter is running with a writable root          
2025-08-19T12:26:49.2845323Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.2845684Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2845876Z   modify container files.                                                       
2025-08-19T12:26:49.2846222Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2846393Z   consider using a                                                              
2025-08-19T12:26:49.2846745Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2846890Z   this.                                                                         
2025-08-19T12:26:49.2847204Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2847969Z                                                                                 
2025-08-19T12:26:49.2848207Z           198┆ - name: dashboard-exporter
2025-08-19T12:26:49.2848583Z                                                     
2025-08-19T12:26:49.2848756Z     deployments/multi-region/global-state-sync.yaml 
2025-08-19T12:26:49.2849090Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2849437Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2849616Z   they  are properly                                                            
2025-08-19T12:26:49.2849963Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2850151Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2850489Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2850827Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2851175Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2851356Z   recommended to  add a                                                         
2025-08-19T12:26:49.2851704Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2851876Z   set to `true`. This                                                           
2025-08-19T12:26:49.2852338Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2852518Z   damage that could be                                                          
2025-08-19T12:26:49.2852857Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2853028Z   container in your                                                             
2025-08-19T12:26:49.2853369Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2853582Z   applications are more secure                                                  
2025-08-19T12:26:49.2854021Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2854334Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2855103Z                                                                                 
2025-08-19T12:26:49.2855328Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2855435Z     securityContext:          
2025-08-19T12:26:49.2855555Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2855692Z            64┆ spec:
2025-08-19T12:26:49.2855954Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2856300Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2856471Z   m-container                                                                   
2025-08-19T12:26:49.2856825Z           Container synchronizer is running with a writable root filesystem.    
2025-08-19T12:26:49.2857019Z   This may allow malicious                                                      
2025-08-19T12:26:49.2857372Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2857552Z   container files. If an                                                        
2025-08-19T12:26:49.2857906Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2858105Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2858457Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2858774Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2859707Z                                                                                 
2025-08-19T12:26:49.2860065Z            67┆ - name: synchronizer
2025-08-19T12:26:49.2861075Z                                                                 
2025-08-19T12:26:49.2861514Z     deployments/multi-region/kubernetes/base/llm-processor.yaml 
2025-08-19T12:26:49.2862154Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2862468Z   m-container                                                                   
2025-08-19T12:26:49.2863131Z           Container cloud-sql-proxy is running with a writable root filesystem. 
2025-08-19T12:26:49.2863434Z   This may allow                                                                
2025-08-19T12:26:49.2864251Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2864622Z   modify container files.                                                       
2025-08-19T12:26:49.2865269Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2865806Z   consider using a                                                              
2025-08-19T12:26:49.2866265Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2866418Z   this.                                                                         
2025-08-19T12:26:49.2866743Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2867504Z                                                                                 
2025-08-19T12:26:49.2867932Z           397┆ - name: cloud-sql-proxy
2025-08-19T12:26:49.2868697Z                                                                                 
2025-08-19T12:26:49.2868994Z     deployments/multi-region/kubernetes/base/monitoring/multi-region-monitoring.
2025-08-19T12:26:49.2869136Z   yaml                                                                          
2025-08-19T12:26:49.2869471Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2869823Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2870002Z   they  are properly                                                            
2025-08-19T12:26:49.2870346Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2870536Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2870884Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2871081Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2871411Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2871594Z   recommended to  add a                                                         
2025-08-19T12:26:49.2871951Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2872122Z   set to `true`. This                                                           
2025-08-19T12:26:49.2872457Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2872635Z   damage that could be                                                          
2025-08-19T12:26:49.2872980Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2873155Z   container in your                                                             
2025-08-19T12:26:49.2873497Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2873907Z   applications are more secure                                                  
2025-08-19T12:26:49.2874260Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2874581Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2875346Z                                                                                 
2025-08-19T12:26:49.2875538Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2875646Z     securityContext:          
2025-08-19T12:26:49.2875769Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2875901Z           408┆ spec:
2025-08-19T12:26:49.2876170Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2876522Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2876702Z   m-container                                                                   
2025-08-19T12:26:49.2877047Z           Container thanos-query is running with a writable root filesystem.    
2025-08-19T12:26:49.2877240Z   This may allow malicious                                                      
2025-08-19T12:26:49.2877600Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2877783Z   container files. If an                                                        
2025-08-19T12:26:49.2878312Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2878595Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2878954Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2879269Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2880033Z                                                                                 
2025-08-19T12:26:49.2880378Z           411┆ - name: thanos-query
2025-08-19T12:26:49.2881019Z                                                                         
2025-08-19T12:26:49.2881279Z     deployments/multi-region/kubernetes/base/multi-region-services.yaml 
2025-08-19T12:26:49.2881616Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2881964Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2882143Z   they  are properly                                                            
2025-08-19T12:26:49.2882488Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2882679Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2883018Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2883224Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2883552Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2883856Z   recommended to  add a                                                         
2025-08-19T12:26:49.2884215Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2884383Z   set to `true`. This                                                           
2025-08-19T12:26:49.2884725Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2884911Z   damage that could be                                                          
2025-08-19T12:26:49.2885248Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2885422Z   container in your                                                             
2025-08-19T12:26:49.2885767Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2885975Z   applications are more secure                                                  
2025-08-19T12:26:49.2886303Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2886618Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2887380Z                                                                                 
2025-08-19T12:26:49.2887562Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2887680Z     securityContext:          
2025-08-19T12:26:49.2887807Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2887938Z           270┆ spec:
2025-08-19T12:26:49.2888201Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2888554Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2888720Z   m-container                                                                   
2025-08-19T12:26:49.2889069Z           Container health-checker is running with a writable root filesystem.  
2025-08-19T12:26:49.2889234Z   This may allow                                                                
2025-08-19T12:26:49.2889595Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2889786Z   modify container files.                                                       
2025-08-19T12:26:49.2890124Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2890443Z   consider using a                                                              
2025-08-19T12:26:49.2890802Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2890946Z   this.                                                                         
2025-08-19T12:26:49.2891262Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2892142Z                                                                                 
2025-08-19T12:26:49.2892343Z           273┆ - name: health-checker
2025-08-19T12:26:49.2893103Z                                                                                 
2025-08-19T12:26:49.2893395Z     deployments/multi-region/kubernetes/base/weaviate/weaviate-multi-region.yaml
2025-08-19T12:26:49.2893876Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2894060Z   m-container                                                                   
2025-08-19T12:26:49.2894401Z           Container weaviate is running with a writable root filesystem. This   
2025-08-19T12:26:49.2894583Z   may allow malicious                                                           
2025-08-19T12:26:49.2894936Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2895116Z   container files. If an                                                        
2025-08-19T12:26:49.2895467Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2895812Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2896407Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2896876Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2897690Z                                                                                 
2025-08-19T12:26:49.2898028Z           148┆ - name: weaviate
2025-08-19T12:26:49.2898305Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2898770Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2898980Z   m-container                                                                   
2025-08-19T12:26:49.2899326Z           Container backup-agent is running with a writable root filesystem.    
2025-08-19T12:26:49.2899526Z   This may allow malicious                                                      
2025-08-19T12:26:49.2899889Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2900077Z   container files. If an                                                        
2025-08-19T12:26:49.2900424Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2900617Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2900982Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2901294Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2902051Z                                                                                 
2025-08-19T12:26:49.2902261Z           329┆ - name: backup-agent
2025-08-19T12:26:49.2902736Z                                                             
2025-08-19T12:26:49.2902952Z     deployments/multi-region/multi-region-architecture.yaml 
2025-08-19T12:26:49.2903290Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2903630Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2904073Z   they  are properly                                                            
2025-08-19T12:26:49.2904431Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2904814Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2905168Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2905364Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2905693Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2905872Z   recommended to  add a                                                         
2025-08-19T12:26:49.2906382Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2906556Z   set to `true`. This                                                           
2025-08-19T12:26:49.2906894Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2907074Z   damage that could be                                                          
2025-08-19T12:26:49.2907418Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2907594Z   container in your                                                             
2025-08-19T12:26:49.2907930Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2908145Z   applications are more secure                                                  
2025-08-19T12:26:49.2908473Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2908794Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2909597Z                                                                                 
2025-08-19T12:26:49.2909800Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2909910Z     securityContext:          
2025-08-19T12:26:49.2910036Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2910167Z           240┆ spec:
2025-08-19T12:26:49.2910441Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2910796Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2910969Z   m-container                                                                   
2025-08-19T12:26:49.2911318Z           Container cockroachdb is running with a writable root filesystem. This
2025-08-19T12:26:49.2911499Z   may allow malicious                                                           
2025-08-19T12:26:49.2911859Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2912043Z   container files. If an                                                        
2025-08-19T12:26:49.2912391Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2912594Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2912948Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2913263Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2914189Z                                                                                 
2025-08-19T12:26:49.2914383Z           249┆ - name: cockroachdb
2025-08-19T12:26:49.2914867Z                                                              
2025-08-19T12:26:49.2915083Z     deployments/multi-region/region-deployment-template.yaml 
2025-08-19T12:26:49.2915426Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2915765Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2915941Z   they  are properly                                                            
2025-08-19T12:26:49.2916284Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2916472Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2916956Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2917161Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2917493Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2917673Z   recommended to  add a                                                         
2025-08-19T12:26:49.2918025Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2918318Z   set to `true`. This                                                           
2025-08-19T12:26:49.2918656Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2918842Z   damage that could be                                                          
2025-08-19T12:26:49.2919175Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2919352Z   container in your                                                             
2025-08-19T12:26:49.2919688Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2919899Z   applications are more secure                                                  
2025-08-19T12:26:49.2920228Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2920539Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2921302Z                                                                                 
2025-08-19T12:26:49.2921481Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2921588Z     securityContext:          
2025-08-19T12:26:49.2921712Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2921843Z            75┆ spec:
2025-08-19T12:26:49.2922105Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2922275Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2922394Z     securityContext:          
2025-08-19T12:26:49.2922514Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2922642Z           164┆ spec:
2025-08-19T12:26:49.2922902Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2923251Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2923416Z   m-container                                                                   
2025-08-19T12:26:49.2923892Z           Container llm-processor is running with a writable root filesystem.   
2025-08-19T12:26:49.2924098Z   This may allow malicious                                                      
2025-08-19T12:26:49.2924449Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2924634Z   container files. If an                                                        
2025-08-19T12:26:49.2924981Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2925181Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2925534Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2925850Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2926608Z                                                                                 
2025-08-19T12:26:49.2926851Z            94┆ - name: llm-processor
2025-08-19T12:26:49.2927122Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2927469Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2927635Z   m-container                                                                   
2025-08-19T12:26:49.2927978Z           Container weaviate is running with a writable root filesystem. This   
2025-08-19T12:26:49.2928164Z   may allow malicious                                                           
2025-08-19T12:26:49.2928647Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2928840Z   container files. If an                                                        
2025-08-19T12:26:49.2929188Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2929382Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2929741Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2930184Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2930941Z                                                                                 
2025-08-19T12:26:49.2931118Z           173┆ - name: weaviate
2025-08-19T12:26:49.2931560Z                                                          
2025-08-19T12:26:49.2931761Z     deployments/production/oran-complete-deployment.yaml 
2025-08-19T12:26:49.2932114Z        yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file   
2025-08-19T12:26:49.2932475Z           Secrets (LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t) should not be stored in
2025-08-19T12:26:49.2932655Z   infrastructure as                                                             
2025-08-19T12:26:49.2932985Z           code files. Use an alternative such as Bitnami Sealed Secrets or KSOPS
2025-08-19T12:26:49.2933176Z   to encrypt Kubernetes                                                         
2025-08-19T12:26:49.2933454Z           Secrets.                                                              
2025-08-19T12:26:49.2933867Z           Details: https://sg.run/KyL6                                          
2025-08-19T12:26:49.2934628Z                                                                                 
2025-08-19T12:26:49.2935042Z           330┆ tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t  # Replace with    
2025-08-19T12:26:49.2935235Z   actual certificate                                                            
2025-08-19T12:26:49.2935495Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2935852Z        yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file   
2025-08-19T12:26:49.2936208Z           Secrets (LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t) should not be stored in
2025-08-19T12:26:49.2936391Z   infrastructure as                                                             
2025-08-19T12:26:49.2936722Z           code files. Use an alternative such as Bitnami Sealed Secrets or KSOPS
2025-08-19T12:26:49.2936916Z   to encrypt Kubernetes                                                         
2025-08-19T12:26:49.2937189Z           Secrets.                                                              
2025-08-19T12:26:49.2937505Z           Details: https://sg.run/KyL6                                          
2025-08-19T12:26:49.2938262Z                                                                                 
2025-08-19T12:26:49.2938669Z           331┆ tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t  # Replace with    
2025-08-19T12:26:49.2938856Z   actual private key                                                            
2025-08-19T12:26:49.2939111Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2939456Z        yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file   
2025-08-19T12:26:49.2939814Z           Secrets (LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t) should not be stored in
2025-08-19T12:26:49.2940000Z   infrastructure as                                                             
2025-08-19T12:26:49.2940332Z           code files. Use an alternative such as Bitnami Sealed Secrets or KSOPS
2025-08-19T12:26:49.2940522Z   to encrypt Kubernetes                                                         
2025-08-19T12:26:49.2940794Z           Secrets.                                                              
2025-08-19T12:26:49.2941110Z           Details: https://sg.run/KyL6                                          
2025-08-19T12:26:49.2942017Z                                                                                 
2025-08-19T12:26:49.2942438Z           332┆ ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t   # Replace with    
2025-08-19T12:26:49.2942628Z   actual CA certificate                                                         
2025-08-19T12:26:49.2942965Z                                                 
2025-08-19T12:26:49.2943126Z     deployments/security/mtls-certificates.yaml 
2025-08-19T12:26:49.2943585Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2944299Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2944496Z   they  are properly                                                            
2025-08-19T12:26:49.2944844Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2945047Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2945393Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2945584Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2945916Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2946101Z   recommended to  add a                                                         
2025-08-19T12:26:49.2946453Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2946622Z   set to `true`. This                                                           
2025-08-19T12:26:49.2946960Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2947143Z   damage that could be                                                          
2025-08-19T12:26:49.2947483Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2947660Z   container in your                                                             
2025-08-19T12:26:49.2948003Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2948209Z   applications are more secure                                                  
2025-08-19T12:26:49.2948538Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2948860Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2949634Z                                                                                 
2025-08-19T12:26:49.2949845Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2949960Z     securityContext:          
2025-08-19T12:26:49.2950080Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2950212Z           406┆ spec:
2025-08-19T12:26:49.2950483Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2950851Z        yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file   
2025-08-19T12:26:49.2951125Z           Secrets                                                               
2025-08-19T12:26:49.2951422Z   (LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t)
2025-08-19T12:26:49.2951767Z           should not be stored in infrastructure as code files. Use an          
2025-08-19T12:26:49.2951965Z   alternative such as Bitnami                                                   
2025-08-19T12:26:49.2952299Z           Sealed Secrets or KSOPS to encrypt Kubernetes Secrets.                
2025-08-19T12:26:49.2952623Z           Details: https://sg.run/KyL6                                          
2025-08-19T12:26:49.2953388Z                                                                                 
2025-08-19T12:26:49.2953910Z            28┆ tls.crt:                                                         
2025-08-19T12:26:49.2954396Z   LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t  
2025-08-19T12:26:49.2954684Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2955039Z        yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file   
2025-08-19T12:26:49.2955315Z           Secrets                                                               
2025-08-19T12:26:49.2955619Z   (LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCi4uLgotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0t)
2025-08-19T12:26:49.2955956Z           should not be stored in infrastructure as code files. Use an          
2025-08-19T12:26:49.2956345Z   alternative such as Bitnami                                                   
2025-08-19T12:26:49.2956679Z           Sealed Secrets or KSOPS to encrypt Kubernetes Secrets.                
2025-08-19T12:26:49.2956993Z           Details: https://sg.run/KyL6                                          
2025-08-19T12:26:49.2957759Z                                                                                 
2025-08-19T12:26:49.2958134Z            29┆ tls.key:                                                         
2025-08-19T12:26:49.2958438Z   LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCi4uLgotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0t  
2025-08-19T12:26:49.2958698Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2959050Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2959216Z   m-container                                                                   
2025-08-19T12:26:49.2959572Z           Container cert-checker is running with a writable root filesystem.    
2025-08-19T12:26:49.2959776Z   This may allow malicious                                                      
2025-08-19T12:26:49.2960159Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2960487Z   container files. If an                                                        
2025-08-19T12:26:49.2961066Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2961281Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2961639Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2961957Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2962728Z                                                                                 
2025-08-19T12:26:49.2962953Z           409┆ - name: cert-checker
2025-08-19T12:26:49.2963230Z                                           
2025-08-19T12:26:49.2963378Z     deployments/velero/velero-config.yaml 
2025-08-19T12:26:49.2963848Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2964022Z   m-container                                                                   
2025-08-19T12:26:49.2964371Z           Container velero is running with a writable root filesystem. This may 
2025-08-19T12:26:49.2964552Z   allow malicious                                                               
2025-08-19T12:26:49.2964906Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2965097Z   container files. If an                                                        
2025-08-19T12:26:49.2965445Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2965639Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2966000Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2966318Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2967083Z                                                                                 
2025-08-19T12:26:49.2967259Z           101┆ - name: velero
2025-08-19T12:26:49.2967527Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2968074Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2968251Z   m-container                                                                   
2025-08-19T12:26:49.2968605Z           Container aws-plugin is running with a writable root filesystem. This 
2025-08-19T12:26:49.2968792Z   may allow malicious                                                           
2025-08-19T12:26:49.2969145Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2969460Z   container files. If an                                                        
2025-08-19T12:26:49.2969813Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2970007Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2970366Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2970685Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2971450Z                                                                                 
2025-08-19T12:26:49.2971640Z           157┆ - name: aws-plugin
2025-08-19T12:26:49.2971902Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2972251Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2972418Z   m-container                                                                   
2025-08-19T12:26:49.2972775Z           Container csi-plugin is running with a writable root filesystem. This 
2025-08-19T12:26:49.2972957Z   may allow malicious                                                           
2025-08-19T12:26:49.2973306Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2973492Z   container files. If an                                                        
2025-08-19T12:26:49.2973978Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2974193Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2974555Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2974868Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2975633Z                                                                                 
2025-08-19T12:26:49.2975829Z           170┆ - name: csi-plugin
2025-08-19T12:26:49.2976134Z                                              
2025-08-19T12:26:49.2976281Z     deployments/weaviate/backup-cronjob.yaml 
2025-08-19T12:26:49.2976634Z        yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file   
2025-08-19T12:26:49.2976991Z           Secrets (QUtJQUlPU0ZPRE5ON0VYQU1QTEU=) should not be stored in        
2025-08-19T12:26:49.2977196Z   infrastructure as code files.                                                 
2025-08-19T12:26:49.2977534Z           Use an alternative such as Bitnami Sealed Secrets or KSOPS to encrypt 
2025-08-19T12:26:49.2977724Z   Kubernetes Secrets.                                                           
2025-08-19T12:26:49.2978038Z           Details: https://sg.run/KyL6                                          
2025-08-19T12:26:49.2978803Z                                                                                 
2025-08-19T12:26:49.2979205Z           249┆ aws-access-key-id: QUtJQUlPU0ZPRE5ON0VYQU1QTEU=  #               
2025-08-19T12:26:49.2979409Z   AKIAIOSFODNN7EXAMPLE                                                          
2025-08-19T12:26:49.2979667Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2980022Z        yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file   
2025-08-19T12:26:49.2980388Z           Secrets (d0phbHJYVXRuRkVNSS9LN01ERU5HL2JQeFJmaUNZRVhBTVBMRUtFWQ==)    
2025-08-19T12:26:49.2980709Z   should not be stored in                                                       
2025-08-19T12:26:49.2981056Z           infrastructure as code files. Use an alternative such as Bitnami      
2025-08-19T12:26:49.2981254Z   Sealed Secrets or KSOPS to                                                    
2025-08-19T12:26:49.2981573Z           encrypt Kubernetes Secrets.                                           
2025-08-19T12:26:49.2981884Z           Details: https://sg.run/KyL6                                          
2025-08-19T12:26:49.2982782Z                                                                                 
2025-08-19T12:26:49.2983162Z           250┆ aws-secret-access-key:                                           
2025-08-19T12:26:49.2983432Z   d0phbHJYVXRuRkVNSS9LN01ERU5HL2JQeFJmaUNZRVhBTVBMRUtFWQ==  #                   
2025-08-19T12:26:49.2983682Z   wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY                                      
2025-08-19T12:26:49.2984042Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2984396Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2984566Z   m-container                                                                   
2025-08-19T12:26:49.2984910Z           Container backup-test is running with a writable root filesystem. This
2025-08-19T12:26:49.2985094Z   may allow malicious                                                           
2025-08-19T12:26:49.2985451Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2985637Z   container files. If an                                                        
2025-08-19T12:26:49.2985986Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2986180Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2986540Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2986855Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2987619Z                                                                                 
2025-08-19T12:26:49.2987811Z           278┆ - name: backup-test
2025-08-19T12:26:49.2988110Z                                             
2025-08-19T12:26:49.2988255Z     deployments/weaviate/backup-system.yaml 
2025-08-19T12:26:49.2988587Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2988933Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2989111Z   they  are properly                                                            
2025-08-19T12:26:49.2989457Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2989645Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2989995Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2990190Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2990522Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2990700Z   recommended to  add a                                                         
2025-08-19T12:26:49.2991045Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2991224Z   set to `true`. This                                                           
2025-08-19T12:26:49.2991561Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2991738Z   damage that could be                                                          
2025-08-19T12:26:49.2992084Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2992258Z   container in your                                                             
2025-08-19T12:26:49.2992735Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2992953Z   applications are more secure                                                  
2025-08-19T12:26:49.2993287Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2993604Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2994695Z                                                                                 
2025-08-19T12:26:49.2995067Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2995180Z     securityContext:          
2025-08-19T12:26:49.2995302Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2995444Z           496┆ spec:
2025-08-19T12:26:49.2995709Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2995883Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2995996Z     securityContext:          
2025-08-19T12:26:49.2996114Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2996251Z           572┆ spec:
2025-08-19T12:26:49.2996513Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2996685Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2996790Z     securityContext:          
2025-08-19T12:26:49.2996907Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2997040Z           660┆ spec:
2025-08-19T12:26:49.2997294Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2997475Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2997588Z     securityContext:          
2025-08-19T12:26:49.2997705Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2997832Z           753┆ spec:
2025-08-19T12:26:49.2998086Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2998448Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2998615Z   m-container                                                                   
2025-08-19T12:26:49.2998966Z           Container backup is running with a writable root filesystem. This may 
2025-08-19T12:26:49.2999145Z   allow malicious                                                               
2025-08-19T12:26:49.2999495Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2999674Z   container files. If an                                                        
2025-08-19T12:26:49.3000027Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3000227Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3000580Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3000902Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3001668Z                                                                                 
2025-08-19T12:26:49.3001836Z           500┆ - name: backup
2025-08-19T12:26:49.3002102Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3002265Z           576┆ - name: backup
2025-08-19T12:26:49.3002518Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3002679Z           664┆ - name: backup
2025-08-19T12:26:49.3002937Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3003285Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3003458Z   m-container                                                                   
2025-08-19T12:26:49.3003924Z           Container validate is running with a writable root filesystem. This   
2025-08-19T12:26:49.3004108Z   may allow malicious                                                           
2025-08-19T12:26:49.3004457Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3004641Z   container files. If an                                                        
2025-08-19T12:26:49.3005125Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3005334Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3005699Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3006015Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3006781Z                                                                                 
2025-08-19T12:26:49.3007142Z           757┆ - name: validate
2025-08-19T12:26:49.3007496Z                                                  
2025-08-19T12:26:49.3007658Z     deployments/weaviate/integration-config.yaml 
2025-08-19T12:26:49.3007991Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3008337Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3008522Z   they  are properly                                                            
2025-08-19T12:26:49.3008863Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3009057Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3009431Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3009625Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3009965Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3010143Z   recommended to  add a                                                         
2025-08-19T12:26:49.3010490Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3010655Z   set to `true`. This                                                           
2025-08-19T12:26:49.3011001Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3011178Z   damage that could be                                                          
2025-08-19T12:26:49.3011514Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3011691Z   container in your                                                             
2025-08-19T12:26:49.3012027Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3012236Z   applications are more secure                                                  
2025-08-19T12:26:49.3012572Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3012886Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3013651Z                                                                                 
2025-08-19T12:26:49.3014021Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3014133Z     securityContext:          
2025-08-19T12:26:49.3014259Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3014392Z           277┆ spec:
2025-08-19T12:26:49.3014659Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3015008Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3015173Z   m-container                                                                   
2025-08-19T12:26:49.3015521Z           Container validator is running with a writable root filesystem. This  
2025-08-19T12:26:49.3015710Z   may allow malicious                                                           
2025-08-19T12:26:49.3016060Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3016245Z   container files. If an                                                        
2025-08-19T12:26:49.3016593Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3016932Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3017300Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3017614Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3018380Z                                                                                 
2025-08-19T12:26:49.3018577Z           281┆ - name: validator
2025-08-19T12:26:49.3019059Z                                                   
2025-08-19T12:26:49.3019228Z     deployments/weaviate/monitoring-enhanced.yaml 
2025-08-19T12:26:49.3019555Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3019900Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3020078Z   they  are properly                                                            
2025-08-19T12:26:49.3020424Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3020615Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3020958Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3021149Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3021484Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3021666Z   recommended to  add a                                                         
2025-08-19T12:26:49.3022011Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3022182Z   set to `true`. This                                                           
2025-08-19T12:26:49.3022518Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3022695Z   damage that could be                                                          
2025-08-19T12:26:49.3023038Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3023213Z   container in your                                                             
2025-08-19T12:26:49.3023549Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3023863Z   applications are more secure                                                  
2025-08-19T12:26:49.3024200Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3024518Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3025284Z                                                                                 
2025-08-19T12:26:49.3025473Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3025581Z     securityContext:          
2025-08-19T12:26:49.3025701Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3025836Z           703┆ spec:
2025-08-19T12:26:49.3026103Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3026451Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3026616Z   m-container                                                                   
2025-08-19T12:26:49.3026965Z           Container health-check is running with a writable root filesystem.    
2025-08-19T12:26:49.3027159Z   This may allow malicious                                                      
2025-08-19T12:26:49.3027516Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3027701Z   container files. If an                                                        
2025-08-19T12:26:49.3028048Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3028243Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3028736Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3029058Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3029938Z                                                                                 
2025-08-19T12:26:49.3030264Z           706┆ - name: health-check
2025-08-19T12:26:49.3030841Z                                                   
2025-08-19T12:26:49.3031015Z     deployments/weaviate/weaviate-deployment.yaml 
2025-08-19T12:26:49.3031648Z        yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file   
2025-08-19T12:26:49.3032019Z           Secrets (bmVwaG9yYW4tcmFnLWtleS1wcm9kdWN0aW9u) should not be stored in
2025-08-19T12:26:49.3032202Z   infrastructure as                                                             
2025-08-19T12:26:49.3032531Z           code files. Use an alternative such as Bitnami Sealed Secrets or KSOPS
2025-08-19T12:26:49.3032723Z   to encrypt Kubernetes                                                         
2025-08-19T12:26:49.3033002Z           Secrets.                                                              
2025-08-19T12:26:49.3033317Z           Details: https://sg.run/KyL6                                          
2025-08-19T12:26:49.3034234Z                                                                                 
2025-08-19T12:26:49.3034675Z           339┆ api-key: bmVwaG9yYW4tcmFnLWtleS1wcm9kdWN0aW9u  # Base64 encoded  
2025-08-19T12:26:49.3034897Z   "nephoran-rag-key-production"                                                 
2025-08-19T12:26:49.3035181Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3035531Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3035698Z   m-container                                                                   
2025-08-19T12:26:49.3036046Z           Container weaviate is running with a writable root filesystem. This   
2025-08-19T12:26:49.3036237Z   may allow malicious                                                           
2025-08-19T12:26:49.3036588Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3036772Z   container files. If an                                                        
2025-08-19T12:26:49.3037120Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3037313Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3037673Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3037994Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3038762Z                                                                                 
2025-08-19T12:26:49.3038950Z            45┆ - name: weaviate
2025-08-19T12:26:49.3039158Z                                  
2025-08-19T12:26:49.3039279Z     docs/dashboard-user-guide.md 
2025-08-19T12:26:49.3039621Z        generic.secrets.security.detected-slack-webhook.detected-slack-webhook
2025-08-19T12:26:49.3039930Z           Slack Webhook detected                                             
2025-08-19T12:26:49.3040234Z           Details: https://sg.run/weWX                                       
2025-08-19T12:26:49.3040947Z                                                                              
2025-08-19T12:26:49.3041294Z          1367┆ webhook_url:                                                     
2025-08-19T12:26:49.3041556Z   "https://hooks.slack.com/services/T00000000/B00000000/YYYYYYYYYYYYYYYYYYYYYYYY
2025-08-19T12:26:49.3041686Z   "                                                                             
2025-08-19T12:26:49.3042978Z                                                                                 
2025-08-19T12:26:49.3043545Z     examples/a1-policy-examples/consumer-examples/xapp-consumers/traffic-steerin
2025-08-19T12:26:49.3044267Z   g-xapp-consumer.yaml                                                          
2025-08-19T12:26:49.3044890Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3045543Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3045877Z   they  are properly                                                            
2025-08-19T12:26:49.3046500Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3046964Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3047307Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3047496Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3047830Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3048007Z   recommended to  add a                                                         
2025-08-19T12:26:49.3048363Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3048537Z   set to `true`. This                                                           
2025-08-19T12:26:49.3048872Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3049048Z   damage that could be                                                          
2025-08-19T12:26:49.3049392Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3049566Z   container in your                                                             
2025-08-19T12:26:49.3049903Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3050104Z   applications are more secure                                                  
2025-08-19T12:26:49.3050436Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3050760Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3051518Z                                                                                 
2025-08-19T12:26:49.3051754Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3051863Z     securityContext:          
2025-08-19T12:26:49.3051981Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3052119Z            33┆ spec:
2025-08-19T12:26:49.3052403Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3052585Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3052692Z     securityContext:          
2025-08-19T12:26:49.3052817Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3052945Z           667┆ spec:
2025-08-19T12:26:49.3053203Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3053567Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3053949Z   m-container                                                                   
2025-08-19T12:26:49.3054310Z           Container traffic-steering-xapp is running with a writable root       
2025-08-19T12:26:49.3054513Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.3054868Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.3055058Z   modify container files.                                                       
2025-08-19T12:26:49.3055405Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.3055576Z   consider using a                                                              
2025-08-19T12:26:49.3055923Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.3056064Z   this.                                                                         
2025-08-19T12:26:49.3056387Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3057290Z                                                                                 
2025-08-19T12:26:49.3057549Z            36┆ - name: traffic-steering-xapp
2025-08-19T12:26:49.3057814Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3058164Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3058332Z   m-container                                                                   
2025-08-19T12:26:49.3058805Z           Container register is running with a writable root filesystem. This   
2025-08-19T12:26:49.3058986Z   may allow malicious                                                           
2025-08-19T12:26:49.3059336Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3059522Z   container files. If an                                                        
2025-08-19T12:26:49.3059868Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3060069Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3060428Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3060741Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3061496Z                                                                                 
2025-08-19T12:26:49.3061671Z           671┆ - name: register
2025-08-19T12:26:49.3061992Z                                               
2025-08-19T12:26:49.3062141Z     examples/auth/ldap_integration_example.go 
2025-08-19T12:26:49.3062484Z        go.lang.security.audit.net.cookie-missing-secure.cookie-missing-secure   
2025-08-19T12:26:49.3062825Z           A session cookie was detected without setting the 'Secure' flag. The  
2025-08-19T12:26:49.3062992Z   'secure' flag for                                                             
2025-08-19T12:26:49.3063345Z           cookies prevents the client from transmitting the cookie over insecure
2025-08-19T12:26:49.3063519Z   channels such as                                                              
2025-08-19T12:26:49.3063963Z           HTTP. Set the 'Secure' flag by setting 'Secure' to 'true' in the      
2025-08-19T12:26:49.3064138Z   Options struct.                                                               
2025-08-19T12:26:49.3064455Z           Details: https://sg.run/N4G7                                          
2025-08-19T12:26:49.3065217Z                                                                                 
2025-08-19T12:26:49.3065510Z            ▶▶┆ Autofix ▶ s/(Secure\s*:\s+)false/\1true/g
2025-08-19T12:26:49.3065736Z           366┆ http.SetCookie(w, &http.Cookie{
2025-08-19T12:26:49.3065945Z           367┆    Name:                     
2025-08-19T12:26:49.3066056Z   "nephoran_session",                       
2025-08-19T12:26:49.3066213Z           368┆    Value:    
2025-08-19T12:26:49.3066312Z   "",                       
2025-08-19T12:26:49.3066473Z           369┆    Path:      
2025-08-19T12:26:49.3066557Z   "/",                       
2025-08-19T12:26:49.3066714Z           370┆    MaxAge:   
2025-08-19T12:26:49.3066799Z   -1,                       
2025-08-19T12:26:49.3066959Z           371┆    HttpOnly:   
2025-08-19T12:26:49.3067045Z   true,                       
2025-08-19T12:26:49.3067241Z           372┆    Secure:   r.TLS !=  
2025-08-19T12:26:49.3067335Z   nil,                                
2025-08-19T12:26:49.3067602Z           373┆ })
2025-08-19T12:26:49.3067950Z                                                  
2025-08-19T12:26:49.3068117Z     examples/availability-monitoring-config.yaml 
2025-08-19T12:26:49.3068448Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3068789Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3069099Z   they  are properly                                                            
2025-08-19T12:26:49.3069441Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3069630Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3069975Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3070164Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3070498Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3070680Z   recommended to  add a                                                         
2025-08-19T12:26:49.3071028Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3071196Z   set to `true`. This                                                           
2025-08-19T12:26:49.3071535Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3071714Z   damage that could be                                                          
2025-08-19T12:26:49.3072051Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3072227Z   container in your                                                             
2025-08-19T12:26:49.3072564Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3072765Z   applications are more secure                                                  
2025-08-19T12:26:49.3073099Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3073412Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3074312Z                                                                                 
2025-08-19T12:26:49.3074495Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3074612Z     securityContext:          
2025-08-19T12:26:49.3074737Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3074868Z           444┆ spec:
2025-08-19T12:26:49.3075134Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3075479Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3075645Z   m-container                                                                   
2025-08-19T12:26:49.3075999Z           Container availability-tracker is running with a writable root        
2025-08-19T12:26:49.3076201Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.3076553Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.3076742Z   modify container files.                                                       
2025-08-19T12:26:49.3077082Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.3077251Z   consider using a                                                              
2025-08-19T12:26:49.3077749Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.3077904Z   this.                                                                         
2025-08-19T12:26:49.3078219Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3078971Z                                                                                 
2025-08-19T12:26:49.3079319Z           447┆ - name: availability-tracker
2025-08-19T12:26:49.3079656Z                                                  
2025-08-19T12:26:49.3079814Z     examples/mvp-oran-sim/nf-sim-deployment.yaml 
2025-08-19T12:26:49.3080148Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3080485Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3080661Z   they  are properly                                                            
2025-08-19T12:26:49.3081008Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3081195Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3081529Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3081719Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3082054Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3082236Z   recommended to  add a                                                         
2025-08-19T12:26:49.3082580Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3082754Z   set to `true`. This                                                           
2025-08-19T12:26:49.3083087Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3083267Z   damage that could be                                                          
2025-08-19T12:26:49.3083607Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3084043Z   container in your                                                             
2025-08-19T12:26:49.3084440Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3084654Z   applications are more secure                                                  
2025-08-19T12:26:49.3084985Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3085297Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3086058Z                                                                                 
2025-08-19T12:26:49.3086245Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3086353Z     securityContext:          
2025-08-19T12:26:49.3086471Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3086612Z            20┆ spec:
2025-08-19T12:26:49.3086876Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3087224Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3087395Z   m-container                                                                   
2025-08-19T12:26:49.3087735Z           Container simulator is running with a writable root filesystem. This  
2025-08-19T12:26:49.3087919Z   may allow malicious                                                           
2025-08-19T12:26:49.3088272Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3088452Z   container files. If an                                                        
2025-08-19T12:26:49.3088794Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3088991Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3089502Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3089820Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3090576Z                                                                                 
2025-08-19T12:26:49.3090779Z            22┆ - name: simulator
2025-08-19T12:26:49.3091250Z                                                             
2025-08-19T12:26:49.3091580Z     examples/packages/direct/nf-sim-minimal/deployment.yaml 
2025-08-19T12:26:49.3091937Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3092276Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3092452Z   they  are properly                                                            
2025-08-19T12:26:49.3092797Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3092991Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3093327Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3093530Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3094002Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3094183Z   recommended to  add a                                                         
2025-08-19T12:26:49.3094538Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3094706Z   set to `true`. This                                                           
2025-08-19T12:26:49.3101812Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3102079Z   damage that could be                                                          
2025-08-19T12:26:49.3102446Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3102627Z   container in your                                                             
2025-08-19T12:26:49.3102982Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3103190Z   applications are more secure                                                  
2025-08-19T12:26:49.3103527Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3104033Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3104831Z                                                                                 
2025-08-19T12:26:49.3105075Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3105190Z     securityContext:          
2025-08-19T12:26:49.3105317Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3105457Z            33┆ spec:
2025-08-19T12:26:49.3105744Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3106121Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3106293Z   m-container                                                                   
2025-08-19T12:26:49.3106641Z           Container nf-sim is running with a writable root filesystem. This may 
2025-08-19T12:26:49.3106830Z   allow malicious                                                               
2025-08-19T12:26:49.3107193Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3107384Z   container files. If an                                                        
2025-08-19T12:26:49.3107738Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3107940Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3108300Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3108868Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3109720Z                                                                                 
2025-08-19T12:26:49.3109895Z            55┆ name: nf-sim
2025-08-19T12:26:49.3110383Z                                                             
2025-08-19T12:26:49.3110596Z     examples/packages/direct/nf-sim-scaling/deployment.yaml 
2025-08-19T12:26:49.3110942Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3111432Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3111622Z   they  are properly                                                            
2025-08-19T12:26:49.3111968Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3112157Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3112509Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3112706Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3113039Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3113219Z   recommended to  add a                                                         
2025-08-19T12:26:49.3113574Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3113870Z   set to `true`. This                                                           
2025-08-19T12:26:49.3114213Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3114400Z   damage that could be                                                          
2025-08-19T12:26:49.3114738Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3114916Z   container in your                                                             
2025-08-19T12:26:49.3115264Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3115476Z   applications are more secure                                                  
2025-08-19T12:26:49.3115810Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3116135Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3116915Z                                                                                 
2025-08-19T12:26:49.3117106Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3117217Z     securityContext:          
2025-08-19T12:26:49.3117343Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3117477Z            31┆ spec:
2025-08-19T12:26:49.3117749Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3118107Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3118282Z   m-container                                                                   
2025-08-19T12:26:49.3118621Z           Container nf-sim is running with a writable root filesystem. This may 
2025-08-19T12:26:49.3118800Z   allow malicious                                                               
2025-08-19T12:26:49.3119152Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3119335Z   container files. If an                                                        
2025-08-19T12:26:49.3119697Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3119894Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3120287Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3120818Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3121785Z                                                                                 
2025-08-19T12:26:49.3121982Z            53┆ name: nf-sim
2025-08-19T12:26:49.3122274Z                                            
2025-08-19T12:26:49.3122436Z     examples/service-mesh-integration.yaml 
2025-08-19T12:26:49.3122785Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3123136Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3123456Z   they  are properly                                                            
2025-08-19T12:26:49.3124129Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3124335Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3124692Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3124884Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3125227Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3125411Z   recommended to  add a                                                         
2025-08-19T12:26:49.3125758Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3125938Z   set to `true`. This                                                           
2025-08-19T12:26:49.3126285Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3126475Z   damage that could be                                                          
2025-08-19T12:26:49.3126816Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3126991Z   container in your                                                             
2025-08-19T12:26:49.3127337Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3127547Z   applications are more secure                                                  
2025-08-19T12:26:49.3127880Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3128208Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3128985Z                                                                                 
2025-08-19T12:26:49.3129188Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3129311Z     securityContext:          
2025-08-19T12:26:49.3129433Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3129567Z           246┆ spec:
2025-08-19T12:26:49.3129843Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3130209Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3130377Z   m-container                                                                   
2025-08-19T12:26:49.3130738Z           Container llm-processor is running with a writable root filesystem.   
2025-08-19T12:26:49.3130943Z   This may allow malicious                                                      
2025-08-19T12:26:49.3131295Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3131478Z   container files. If an                                                        
2025-08-19T12:26:49.3131834Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3132036Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3132394Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3132719Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3133495Z                                                                                 
2025-08-19T12:26:49.3133869Z           249┆ - name: llm-processor
2025-08-19T12:26:49.3134392Z                                                  
2025-08-19T12:26:49.3134572Z     infrastructure/terraform/modules/aws/main.tf 
2025-08-19T12:26:49.3134938Z        terraform.lang.security.eks-public-endpoint-enabled.eks-public-endpoint-e
2025-08-19T12:26:49.3135092Z   nabled                                                                        
2025-08-19T12:26:49.3135442Z           The vpc_config resource inside the eks cluster has not explicitly     
2025-08-19T12:26:49.3135642Z   disabled public endpoint                                                      
2025-08-19T12:26:49.3136040Z           access                                                                
2025-08-19T12:26:49.3136366Z           Details: https://sg.run/Albg                                          
2025-08-19T12:26:49.3137143Z                                                                                 
2025-08-19T12:26:49.3137407Z           492┆ resource "aws_eks_cluster" "main" {
2025-08-19T12:26:49.3137599Z                                
2025-08-19T12:26:49.3137722Z     internal/ingest/handler.go 
2025-08-19T12:26:49.3138056Z        go.lang.security.injection.raw-html-format.raw-html-format               
2025-08-19T12:26:49.3138400Z           Detected user input flowing into a manually constructed HTML string.  
2025-08-19T12:26:49.3138599Z   You may be accidentally                                                       
2025-08-19T12:26:49.3138945Z           bypassing secure methods of rendering HTML by manually constructing   
2025-08-19T12:26:49.3139129Z   HTML and this could                                                           
2025-08-19T12:26:49.3139480Z           create a cross-site scripting vulnerability, which could let attackers
2025-08-19T12:26:49.3139665Z   steal sensitive user                                                          
2025-08-19T12:26:49.3140000Z           data. Use the `html/template` package which will safely render HTML   
2025-08-19T12:26:49.3140195Z   instead, or inspect that                                                      
2025-08-19T12:26:49.3140510Z           the HTML is rendered safely.                                          
2025-08-19T12:26:49.3140830Z           Details: https://sg.run/3r1G                                          
2025-08-19T12:26:49.3141610Z                                                                                 
2025-08-19T12:26:49.3142013Z            73┆  ... fmt.Sprintf("Invalid plain text format. Expected: 'scale    
2025-08-19T12:26:49.3142235Z   <target> to <replicas> in ns <namespace>'. Received: %q", string(body)),      
2025-08-19T12:26:49.3142509Z   http.StatusBadRequest) ... [0m                                                
2025-08-19T12:26:49.3142871Z             [shortened a long line from output, adjust with                     
2025-08-19T12:26:49.3143064Z   --max-chars-per-line]                                                         
2025-08-19T12:26:49.3143241Z                               
2025-08-19T12:26:49.3143363Z     internal/kpm/generator.go 
2025-08-19T12:26:49.3143632Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3144022Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3144289Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3144834Z                                                                  
2025-08-19T12:26:49.3145040Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3145205Z             8┆ "math/rand"
2025-08-19T12:26:49.3145643Z                                                         
2025-08-19T12:26:49.3145833Z     kpt-packages/nephio/coredns-caching/deployment.yaml 
2025-08-19T12:26:49.3146177Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3146522Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3146699Z   they  are properly                                                            
2025-08-19T12:26:49.3147190Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3147396Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3147743Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3147943Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3148282Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3148586Z   recommended to  add a                                                         
2025-08-19T12:26:49.3148936Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3149111Z   set to `true`. This                                                           
2025-08-19T12:26:49.3149451Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3149632Z   damage that could be                                                          
2025-08-19T12:26:49.3149977Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3150151Z   container in your                                                             
2025-08-19T12:26:49.3150492Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3150700Z   applications are more secure                                                  
2025-08-19T12:26:49.3151037Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3151354Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3152131Z                                                                                 
2025-08-19T12:26:49.3152323Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3152435Z     securityContext:          
2025-08-19T12:26:49.3152555Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3152700Z            22┆ spec:
2025-08-19T12:26:49.3153226Z                                                                
2025-08-19T12:26:49.3153449Z     kpt-packages/nephio/coredns-caching-scaled/deployment.yaml 
2025-08-19T12:26:49.3153957Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3154307Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3154492Z   they  are properly                                                            
2025-08-19T12:26:49.3154852Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3155043Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3155388Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3155580Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3155925Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3156103Z   recommended to  add a                                                         
2025-08-19T12:26:49.3156456Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3156627Z   set to `true`. This                                                           
2025-08-19T12:26:49.3156970Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3157151Z   damage that could be                                                          
2025-08-19T12:26:49.3157498Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3157671Z   container in your                                                             
2025-08-19T12:26:49.3158008Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3158353Z   applications are more secure                                                  
2025-08-19T12:26:49.3158694Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3159016Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3159797Z                                                                                 
2025-08-19T12:26:49.3159982Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3160091Z     securityContext:          
2025-08-19T12:26:49.3160335Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3160476Z            22┆ spec:
2025-08-19T12:26:49.3161252Z                                                                                 
2025-08-19T12:26:49.3161545Z     kpt-packages/nephio/nephio-system/ipam/app/controller/deployment-controller.
2025-08-19T12:26:49.3161697Z   yaml                                                                          
2025-08-19T12:26:49.3162029Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3162376Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3162562Z   they  are properly                                                            
2025-08-19T12:26:49.3162909Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3163099Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3163458Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3163650Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3164315Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3164502Z   recommended to  add a                                                         
2025-08-19T12:26:49.3164862Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3165039Z   set to `true`. This                                                           
2025-08-19T12:26:49.3165379Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3165562Z   damage that could be                                                          
2025-08-19T12:26:49.3165902Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3166075Z   container in your                                                             
2025-08-19T12:26:49.3166423Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3166627Z   applications are more secure                                                  
2025-08-19T12:26:49.3166957Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3167283Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3168062Z                                                                                 
2025-08-19T12:26:49.3168254Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3168369Z     securityContext:          
2025-08-19T12:26:49.3168489Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3168621Z            28┆ spec:
2025-08-19T12:26:49.3168895Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3169256Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3169429Z   m-container                                                                   
2025-08-19T12:26:49.3169777Z           Container kube-rbac-proxy is running with a writable root filesystem. 
2025-08-19T12:26:49.3169947Z   This may allow                                                                
2025-08-19T12:26:49.3170306Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.3170499Z   modify container files.                                                       
2025-08-19T12:26:49.3171089Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.3171274Z   consider using a                                                              
2025-08-19T12:26:49.3171626Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.3171774Z   this.                                                                         
2025-08-19T12:26:49.3172095Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3172994Z                                                                                 
2025-08-19T12:26:49.3173197Z            36┆ name: kube-rbac-proxy
2025-08-19T12:26:49.3173468Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3173966Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3174136Z   m-container                                                                   
2025-08-19T12:26:49.3174501Z           Container controller is running with a writable root filesystem. This 
2025-08-19T12:26:49.3174684Z   may allow malicious                                                           
2025-08-19T12:26:49.3175038Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3175229Z   container files. If an                                                        
2025-08-19T12:26:49.3175590Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3175786Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3176153Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3176474Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3177249Z                                                                                 
2025-08-19T12:26:49.3177435Z            80┆ name: controller
2025-08-19T12:26:49.3178216Z                                                                                 
2025-08-19T12:26:49.3178509Z     kpt-packages/nephio/nephio-system/nephio-5gc/app/controller/deployment-contr
2025-08-19T12:26:49.3178666Z   oller.yaml                                                                    
2025-08-19T12:26:49.3179003Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3179350Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3179526Z   they  are properly                                                            
2025-08-19T12:26:49.3179873Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3180062Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3180404Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3180603Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3180934Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3181112Z   recommended to  add a                                                         
2025-08-19T12:26:49.3181465Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3181630Z   set to `true`. This                                                           
2025-08-19T12:26:49.3181972Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3182153Z   damage that could be                                                          
2025-08-19T12:26:49.3182497Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3182671Z   container in your                                                             
2025-08-19T12:26:49.3183157Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3183376Z   applications are more secure                                                  
2025-08-19T12:26:49.3183821Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3184150Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3184926Z                                                                                 
2025-08-19T12:26:49.3185242Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3185359Z     securityContext:          
2025-08-19T12:26:49.3185480Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3185612Z            27┆ spec:
2025-08-19T12:26:49.3185881Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3186230Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3186406Z   m-container                                                                   
2025-08-19T12:26:49.3186760Z           Container kube-rbac-proxy is running with a writable root filesystem. 
2025-08-19T12:26:49.3186922Z   This may allow                                                                
2025-08-19T12:26:49.3187279Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.3187471Z   modify container files.                                                       
2025-08-19T12:26:49.3187825Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.3187997Z   consider using a                                                              
2025-08-19T12:26:49.3188347Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.3188493Z   this.                                                                         
2025-08-19T12:26:49.3188809Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3189585Z                                                                                 
2025-08-19T12:26:49.3189787Z            35┆ name: kube-rbac-proxy
2025-08-19T12:26:49.3190048Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3190398Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3190570Z   m-container                                                                   
2025-08-19T12:26:49.3190928Z           Container controller is running with a writable root filesystem. This 
2025-08-19T12:26:49.3191109Z   may allow malicious                                                           
2025-08-19T12:26:49.3191466Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3191648Z   container files. If an                                                        
2025-08-19T12:26:49.3191998Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3192197Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3192561Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3192877Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3193651Z                                                                                 
2025-08-19T12:26:49.3193958Z            59┆ name: controller
2025-08-19T12:26:49.3194738Z                                                                                 
2025-08-19T12:26:49.3195026Z     kpt-packages/nephio/nephio-system/nf-injector/app/controller/deployment-cont
2025-08-19T12:26:49.3195193Z   roller.yaml                                                                   
2025-08-19T12:26:49.3195524Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3196000Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3196189Z   they  are properly                                                            
2025-08-19T12:26:49.3196531Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3196719Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3197064Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3197378Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3197710Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3197887Z   recommended to  add a                                                         
2025-08-19T12:26:49.3198240Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3198406Z   set to `true`. This                                                           
2025-08-19T12:26:49.3198753Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3198936Z   damage that could be                                                          
2025-08-19T12:26:49.3199274Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3199446Z   container in your                                                             
2025-08-19T12:26:49.3199791Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3199998Z   applications are more secure                                                  
2025-08-19T12:26:49.3200329Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3200650Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3201424Z                                                                                 
2025-08-19T12:26:49.3201615Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3201725Z     securityContext:          
2025-08-19T12:26:49.3201854Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3201990Z            28┆ spec:
2025-08-19T12:26:49.3202253Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3202613Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3202779Z   m-container                                                                   
2025-08-19T12:26:49.3203133Z           Container kube-rbac-proxy is running with a writable root filesystem. 
2025-08-19T12:26:49.3203304Z   This may allow                                                                
2025-08-19T12:26:49.3203662Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.3204173Z   modify container files.                                                       
2025-08-19T12:26:49.3204537Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.3204710Z   consider using a                                                              
2025-08-19T12:26:49.3205061Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.3205209Z   this.                                                                         
2025-08-19T12:26:49.3205524Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3206302Z                                                                                 
2025-08-19T12:26:49.3206513Z            36┆ name: kube-rbac-proxy
2025-08-19T12:26:49.3206780Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3207131Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3207296Z   m-container                                                                   
2025-08-19T12:26:49.3207844Z           Container controller is running with a writable root filesystem. This 
2025-08-19T12:26:49.3208037Z   may allow malicious                                                           
2025-08-19T12:26:49.3208389Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3208575Z   container files. If an                                                        
2025-08-19T12:26:49.3208925Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3209285Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3209649Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3209964Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3210739Z                                                                                 
2025-08-19T12:26:49.3210922Z            80┆ name: controller
2025-08-19T12:26:49.3211708Z                                                                                 
2025-08-19T12:26:49.3212003Z     kpt-packages/nephio/nephio-system/package-deployment-controller/app/controll
2025-08-19T12:26:49.3212226Z   er/deployment-controller.yaml                                                 
2025-08-19T12:26:49.3212564Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3212904Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3213087Z   they  are properly                                                            
2025-08-19T12:26:49.3213435Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3213622Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3214104Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3214301Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3214640Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3214819Z   recommended to  add a                                                         
2025-08-19T12:26:49.3215171Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3215336Z   set to `true`. This                                                           
2025-08-19T12:26:49.3215680Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3215856Z   damage that could be                                                          
2025-08-19T12:26:49.3216198Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3216371Z   container in your                                                             
2025-08-19T12:26:49.3216710Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3216929Z   applications are more secure                                                  
2025-08-19T12:26:49.3217261Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3217577Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3218357Z                                                                                 
2025-08-19T12:26:49.3218538Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3218650Z     securityContext:          
2025-08-19T12:26:49.3218774Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3218906Z            27┆ spec:
2025-08-19T12:26:49.3219165Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3219515Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3219684Z   m-container                                                                   
2025-08-19T12:26:49.3220171Z           Container kube-rbac-proxy is running with a writable root filesystem. 
2025-08-19T12:26:49.3220341Z   This may allow                                                                
2025-08-19T12:26:49.3220703Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.3220893Z   modify container files.                                                       
2025-08-19T12:26:49.3221236Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.3221534Z   consider using a                                                              
2025-08-19T12:26:49.3221883Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.3222027Z   this.                                                                         
2025-08-19T12:26:49.3222348Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3223122Z                                                                                 
2025-08-19T12:26:49.3223327Z            35┆ name: kube-rbac-proxy
2025-08-19T12:26:49.3223590Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3224074Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3224241Z   m-container                                                                   
2025-08-19T12:26:49.3224597Z           Container controller is running with a writable root filesystem. This 
2025-08-19T12:26:49.3224790Z   may allow malicious                                                           
2025-08-19T12:26:49.3225148Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3225329Z   container files. If an                                                        
2025-08-19T12:26:49.3225687Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3225883Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3226247Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3226573Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3227348Z                                                                                 
2025-08-19T12:26:49.3227528Z            59┆ name: controller
2025-08-19T12:26:49.3228114Z                                                                    
2025-08-19T12:26:49.3228357Z     kpt-packages/nephio/nephio-system/porch/2-function-runner.yaml 
2025-08-19T12:26:49.3228692Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3229038Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3229216Z   they  are properly                                                            
2025-08-19T12:26:49.3229557Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3229756Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3230107Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3230297Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3230631Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3230819Z   recommended to  add a                                                         
2025-08-19T12:26:49.3231168Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3231333Z   set to `true`. This                                                           
2025-08-19T12:26:49.3231676Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3231857Z   damage that could be                                                          
2025-08-19T12:26:49.3232338Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3232525Z   container in your                                                             
2025-08-19T12:26:49.3232865Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3233068Z   applications are more secure                                                  
2025-08-19T12:26:49.3233411Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3233981Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3234763Z                                                                                 
2025-08-19T12:26:49.3234947Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3235061Z     securityContext:          
2025-08-19T12:26:49.3235181Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3235314Z            38┆ spec:
2025-08-19T12:26:49.3235590Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3235942Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3236108Z   m-container                                                                   
2025-08-19T12:26:49.3236464Z           Container function-runner is running with a writable root filesystem. 
2025-08-19T12:26:49.3236630Z   This may allow                                                                
2025-08-19T12:26:49.3236996Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.3237194Z   modify container files.                                                       
2025-08-19T12:26:49.3237535Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.3237708Z   consider using a                                                              
2025-08-19T12:26:49.3238060Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.3238213Z   this.                                                                         
2025-08-19T12:26:49.3238529Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3239305Z                                                                                 
2025-08-19T12:26:49.3239525Z            41┆ - name: function-runner
2025-08-19T12:26:49.3240064Z                                                                 
2025-08-19T12:26:49.3240294Z     kpt-packages/nephio/nephio-system/porch/3-porch-server.yaml 
2025-08-19T12:26:49.3240633Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3240976Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3241156Z   they  are properly                                                            
2025-08-19T12:26:49.3241504Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3241696Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3242037Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3242235Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3242568Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3242749Z   recommended to  add a                                                         
2025-08-19T12:26:49.3243096Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3243266Z   set to `true`. This                                                           
2025-08-19T12:26:49.3243605Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3244097Z   damage that could be                                                          
2025-08-19T12:26:49.3244623Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3244811Z   container in your                                                             
2025-08-19T12:26:49.3245166Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3245378Z   applications are more secure                                                  
2025-08-19T12:26:49.3245711Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3246156Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3246940Z                                                                                 
2025-08-19T12:26:49.3247139Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3247251Z     securityContext:          
2025-08-19T12:26:49.3247370Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3247508Z            38┆ spec:
2025-08-19T12:26:49.3247782Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3248135Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3248307Z   m-container                                                                   
2025-08-19T12:26:49.3248658Z           Container porch-server is running with a writable root filesystem.    
2025-08-19T12:26:49.3248851Z   This may allow malicious                                                      
2025-08-19T12:26:49.3249215Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3249398Z   container files. If an                                                        
2025-08-19T12:26:49.3249746Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3249945Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3250303Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3250634Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3251415Z                                                                                 
2025-08-19T12:26:49.3251614Z            44┆ - name: porch-server
2025-08-19T12:26:49.3252123Z                                                               
2025-08-19T12:26:49.3252335Z     kpt-packages/nephio/nephio-system/porch/4-apiservice.yaml 
2025-08-19T12:26:49.3252694Z        yaml.kubernetes.security.skip-tls-verify-service.skip-tls-verify-service 
2025-08-19T12:26:49.3253038Z           Service is disabling TLS certificate verification when communicating  
2025-08-19T12:26:49.3253217Z   with the server. This                                                         
2025-08-19T12:26:49.3253555Z           makes your HTTPS connections insecure. Remove the                     
2025-08-19T12:26:49.3253912Z   'insecureSkipTLSVerify: true' key to                                          
2025-08-19T12:26:49.3254237Z           secure communication.                                                 
2025-08-19T12:26:49.3254559Z           Details: https://sg.run/zk10                                          
2025-08-19T12:26:49.3255334Z                                                                                 
2025-08-19T12:26:49.3255470Z            20┆ spec:
2025-08-19T12:26:49.3255709Z            21┆   insecureSkipTLSVerify: true
2025-08-19T12:26:49.3255919Z            22┆   group: porch.kpt.dev
2025-08-19T12:26:49.3256149Z            23┆   groupPriorityMinimum: 1000
2025-08-19T12:26:49.3256344Z            24┆   versionPriority: 15
2025-08-19T12:26:49.3256499Z            25┆   service:
2025-08-19T12:26:49.3256661Z            26┆     name: api
2025-08-19T12:26:49.3256882Z            27┆     namespace: porch-system
2025-08-19T12:26:49.3257077Z            28┆   version: v1alpha1
2025-08-19T12:26:49.3257600Z                                                                
2025-08-19T12:26:49.3257962Z     kpt-packages/nephio/nephio-system/porch/9-controllers.yaml 
2025-08-19T12:26:49.3258306Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3258656Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3258833Z   they  are properly                                                            
2025-08-19T12:26:49.3259175Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3259491Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3259833Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3260027Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3260366Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3260551Z   recommended to  add a                                                         
2025-08-19T12:26:49.3260903Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3261078Z   set to `true`. This                                                           
2025-08-19T12:26:49.3261417Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3261595Z   damage that could be                                                          
2025-08-19T12:26:49.3261943Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3262116Z   container in your                                                             
2025-08-19T12:26:49.3262455Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3262666Z   applications are more secure                                                  
2025-08-19T12:26:49.3262999Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3263322Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3264250Z                                                                                 
2025-08-19T12:26:49.3264460Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3264569Z     securityContext:          
2025-08-19T12:26:49.3264688Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3264830Z            40┆ spec:
2025-08-19T12:26:49.3265106Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3265456Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3265651Z   m-container                                                                   
2025-08-19T12:26:49.3266008Z           Container porch-controllers is running with a writable root           
2025-08-19T12:26:49.3266208Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.3266580Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.3266780Z   modify container files.                                                       
2025-08-19T12:26:49.3267122Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.3267294Z   consider using a                                                              
2025-08-19T12:26:49.3267651Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.3267799Z   this.                                                                         
2025-08-19T12:26:49.3268117Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3268898Z                                                                                 
2025-08-19T12:26:49.3269125Z            43┆ - name: porch-controllers
2025-08-19T12:26:49.3269523Z                                                      
2025-08-19T12:26:49.3269857Z     kpt-packages/nephio/nephio-webui/deployment.yaml 
2025-08-19T12:26:49.3270200Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3270544Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3270727Z   they  are properly                                                            
2025-08-19T12:26:49.3271070Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3271384Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3271727Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3271928Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3272263Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3272445Z   recommended to  add a                                                         
2025-08-19T12:26:49.3272806Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3272972Z   set to `true`. This                                                           
2025-08-19T12:26:49.3273312Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3273497Z   damage that could be                                                          
2025-08-19T12:26:49.3273981Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3274157Z   container in your                                                             
2025-08-19T12:26:49.3274503Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3274708Z   applications are more secure                                                  
2025-08-19T12:26:49.3275041Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3275368Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3276143Z                                                                                 
2025-08-19T12:26:49.3276335Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3276444Z     securityContext:          
2025-08-19T12:26:49.3276570Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3276704Z            17┆ spec:
2025-08-19T12:26:49.3276967Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3277329Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3277502Z   m-container                                                                   
2025-08-19T12:26:49.3277844Z           Container main is running with a writable root filesystem. This may   
2025-08-19T12:26:49.3278032Z   allow malicious                                                               
2025-08-19T12:26:49.3278392Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3278574Z   container files. If an                                                        
2025-08-19T12:26:49.3278931Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3279126Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3279483Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3279806Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3280585Z                                                                                 
2025-08-19T12:26:49.3280748Z            21┆ - name: main
2025-08-19T12:26:49.3280989Z                                       
2025-08-19T12:26:49.3281122Z     kpt-packages/ric-sim/ric-sim.yaml 
2025-08-19T12:26:49.3281455Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3281938Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3282128Z   they  are properly                                                            
2025-08-19T12:26:49.3282472Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3282660Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3283009Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3283324Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3283657Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3284157Z   recommended to  add a                                                         
2025-08-19T12:26:49.3284526Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3284700Z   set to `true`. This                                                           
2025-08-19T12:26:49.3285040Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3285224Z   damage that could be                                                          
2025-08-19T12:26:49.3285564Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3285737Z   container in your                                                             
2025-08-19T12:26:49.3286086Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3286291Z   applications are more secure                                                  
2025-08-19T12:26:49.3286624Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3286947Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3287723Z                                                                                 
2025-08-19T12:26:49.3287925Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3288039Z     securityContext:          
2025-08-19T12:26:49.3288159Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3288293Z            19┆ spec:
2025-08-19T12:26:49.3288559Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3288918Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3289084Z   m-container                                                                   
2025-08-19T12:26:49.3289432Z           Container ric-sim is running with a writable root filesystem. This may
2025-08-19T12:26:49.3289612Z   allow malicious                                                               
2025-08-19T12:26:49.3289963Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3290145Z   container files. If an                                                        
2025-08-19T12:26:49.3290505Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3290700Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3291057Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3291379Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3292153Z                                                                                 
2025-08-19T12:26:49.3292331Z            21┆ - name: ric-sim
2025-08-19T12:26:49.3292589Z                                         
2025-08-19T12:26:49.3292731Z     pkg/audit/backends/elasticsearch.go 
2025-08-19T12:26:49.3293074Z        go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversi
2025-08-19T12:26:49.3293209Z   on                                                                            
2025-08-19T12:26:49.3293911Z           `MinVersion` is missing from this TLS configuration.  By default, as  
2025-08-19T12:26:49.3294094Z   of Go 1.22, TLS 1.2 is                                                        
2025-08-19T12:26:49.3294437Z           currently used as the minimum. General purpose web applications should
2025-08-19T12:26:49.3294611Z   default to TLS 1.3                                                            
2025-08-19T12:26:49.3294951Z           with all other protocols disabled.  Only where it is known that a web 
2025-08-19T12:26:49.3295305Z   server must support                                                           
2025-08-19T12:26:49.3295649Z           legacy clients with unsupported an insecure browsers (such as Internet
2025-08-19T12:26:49.3295824Z   Explorer 10), it may                                                          
2025-08-19T12:26:49.3296163Z           be necessary to enable TLS 1.0 to provide support. Add `MinVersion:   
2025-08-19T12:26:49.3296359Z   tls.VersionTLS13' to the                                                      
2025-08-19T12:26:49.3296700Z           TLS configuration to bump the minimum version to TLS 1.3.             
2025-08-19T12:26:49.3297017Z           Details: https://sg.run/oxEN                                          
2025-08-19T12:26:49.3297786Z                                                                                 
2025-08-19T12:26:49.3298216Z            ▶▶┆ Autofix ▶ tls.Config{ InsecureSkipVerify: !esConfig.VerifyTLS,   
2025-08-19T12:26:49.3298428Z   MinVersion: tls.VersionTLS13 }                                                
2025-08-19T12:26:49.3298646Z           121┆ tlsConfig := &tls.Config{
2025-08-19T12:26:49.3298909Z           122┆    InsecureSkipVerify:                  
2025-08-19T12:26:49.3299055Z   !esConfig.VerifyTLS,                                 
2025-08-19T12:26:49.3299175Z           123┆ }
2025-08-19T12:26:49.3299381Z                                  
2025-08-19T12:26:49.3299505Z     pkg/audit/backends/splunk.go 
2025-08-19T12:26:49.3299858Z        go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversi
2025-08-19T12:26:49.3300000Z   on                                                                            
2025-08-19T12:26:49.3300341Z           `MinVersion` is missing from this TLS configuration.  By default, as  
2025-08-19T12:26:49.3300498Z   of Go 1.22, TLS 1.2 is                                                        
2025-08-19T12:26:49.3300842Z           currently used as the minimum. General purpose web applications should
2025-08-19T12:26:49.3301019Z   default to TLS 1.3                                                            
2025-08-19T12:26:49.3301360Z           with all other protocols disabled.  Only where it is known that a web 
2025-08-19T12:26:49.3301547Z   server must support                                                           
2025-08-19T12:26:49.3301885Z           legacy clients with unsupported an insecure browsers (such as Internet
2025-08-19T12:26:49.3302053Z   Explorer 10), it may                                                          
2025-08-19T12:26:49.3302392Z           be necessary to enable TLS 1.0 to provide support. Add `MinVersion:   
2025-08-19T12:26:49.3302588Z   tls.VersionTLS13' to the                                                      
2025-08-19T12:26:49.3302924Z           TLS configuration to bump the minimum version to TLS 1.3.             
2025-08-19T12:26:49.3303242Z           Details: https://sg.run/oxEN                                          
2025-08-19T12:26:49.3304129Z                                                                                 
2025-08-19T12:26:49.3304532Z            ▶▶┆ Autofix ▶ tls.Config{ InsecureSkipVerify:                        
2025-08-19T12:26:49.3304774Z   !splunkConfig.VerifyTLS, MinVersion: tls.VersionTLS13 }                       
2025-08-19T12:26:49.3304984Z           142┆ tlsConfig := &tls.Config{
2025-08-19T12:26:49.3305260Z           143┆    InsecureSkipVerify:                      
2025-08-19T12:26:49.3305420Z   !splunkConfig.VerifyTLS,                                 
2025-08-19T12:26:49.3305686Z           144┆ }
2025-08-19T12:26:49.3305839Z                          
2025-08-19T12:26:49.3305945Z     pkg/auth/handlers.go 
2025-08-19T12:26:49.3306271Z        go.lang.security.injection.open-redirect.open-redirect                   
2025-08-19T12:26:49.3306607Z           An HTTP redirect was found to be crafted from user-input `r`. This can
2025-08-19T12:26:49.3306790Z   lead to open redirect                                                         
2025-08-19T12:26:49.3307262Z           vulnerabilities, potentially allowing attackers to redirect users to  
2025-08-19T12:26:49.3307453Z   malicious web sites. It                                                       
2025-08-19T12:26:49.3307795Z           is recommend where possible to not allow user-input to craft the      
2025-08-19T12:26:49.3307983Z   redirect URL. When user-                                                      
2025-08-19T12:26:49.3308328Z           input is necessary to craft the request, it is recommended to follow  
2025-08-19T12:26:49.3308521Z   OWASP best practices to                                                       
2025-08-19T12:26:49.3308845Z           restrict the URL to domains in an allowlist.                          
2025-08-19T12:26:49.3309165Z           Details: https://sg.run/2ZW45                                         
2025-08-19T12:26:49.3309965Z                                                                                 
2025-08-19T12:26:49.3310304Z           200┆ http.Redirect(w, r, redirectURL, http.StatusFound)
2025-08-19T12:26:49.3310495Z                                 
2025-08-19T12:26:49.3310618Z     pkg/auth/ldap_middleware.go 
2025-08-19T12:26:49.3310959Z        go.lang.security.audit.net.cookie-missing-secure.cookie-missing-secure   
2025-08-19T12:26:49.3311297Z           A session cookie was detected without setting the 'Secure' flag. The  
2025-08-19T12:26:49.3311470Z   'secure' flag for                                                             
2025-08-19T12:26:49.3311825Z           cookies prevents the client from transmitting the cookie over insecure
2025-08-19T12:26:49.3311995Z   channels such as                                                              
2025-08-19T12:26:49.3312324Z           HTTP. Set the 'Secure' flag by setting 'Secure' to 'true' in the      
2025-08-19T12:26:49.3312497Z   Options struct.                                                               
2025-08-19T12:26:49.3312809Z           Details: https://sg.run/N4G7                                          
2025-08-19T12:26:49.3313588Z                                                                                 
2025-08-19T12:26:49.3314002Z            ▶▶┆ Autofix ▶ s/(Secure\s*:\s+)false/\1true/g
2025-08-19T12:26:49.3314239Z           219┆ http.SetCookie(w, &http.Cookie{
2025-08-19T12:26:49.3314447Z           220┆    Name:                     
2025-08-19T12:26:49.3314565Z   "nephoran_session",                       
2025-08-19T12:26:49.3314759Z           221┆    Value:                
2025-08-19T12:26:49.3314872Z   sessionInfo.ID,                       
2025-08-19T12:26:49.3315044Z           222┆    Path:      
2025-08-19T12:26:49.3315130Z   "/",                       
2025-08-19T12:26:49.3315296Z           223┆    HttpOnly:   
2025-08-19T12:26:49.3315391Z   true,                       
2025-08-19T12:26:49.3315582Z           224┆    Secure:   r.TLS !=  
2025-08-19T12:26:49.3315678Z   nil,                                
2025-08-19T12:26:49.3315893Z           225┆    SameSite:                   
2025-08-19T12:26:49.3316031Z   http.SameSiteLaxMode,                       
2025-08-19T12:26:49.3316250Z           226┆    Expires:                     
2025-08-19T12:26:49.3316378Z   sessionInfo.ExpiresAt,                       
2025-08-19T12:26:49.3316503Z           227┆ })
2025-08-19T12:26:49.3316770Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3317042Z            ▶▶┆ Autofix ▶ s/(Secure\s*:\s+)false/\1true/g
2025-08-19T12:26:49.3317273Z           291┆ http.SetCookie(w, &http.Cookie{
2025-08-19T12:26:49.3317620Z           292┆    Name:                     
2025-08-19T12:26:49.3317738Z   "nephoran_session",                       
2025-08-19T12:26:49.3317901Z           293┆    Value:    
2025-08-19T12:26:49.3317992Z   "",                       
2025-08-19T12:26:49.3318152Z           294┆    Path:      
2025-08-19T12:26:49.3318237Z   "/",                       
2025-08-19T12:26:49.3318404Z           295┆    HttpOnly:   
2025-08-19T12:26:49.3318620Z   true,                       
2025-08-19T12:26:49.3318812Z           296┆    Secure:   r.TLS !=  
2025-08-19T12:26:49.3318908Z   nil,                                
2025-08-19T12:26:49.3319130Z           297┆    SameSite:                   
2025-08-19T12:26:49.3319252Z   http.SameSiteLaxMode,                       
2025-08-19T12:26:49.3319406Z           298┆    MaxAge:   
2025-08-19T12:26:49.3319500Z   -1,                       
2025-08-19T12:26:49.3319621Z           299┆ })
2025-08-19T12:26:49.3319804Z                                
2025-08-19T12:26:49.3319931Z     pkg/auth/providers/ldap.go 
2025-08-19T12:26:49.3320290Z        go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversi
2025-08-19T12:26:49.3320431Z   on                                                                            
2025-08-19T12:26:49.3320774Z           `MinVersion` is missing from this TLS configuration.  By default, as  
2025-08-19T12:26:49.3320936Z   of Go 1.22, TLS 1.2 is                                                        
2025-08-19T12:26:49.3321282Z           currently used as the minimum. General purpose web applications should
2025-08-19T12:26:49.3321447Z   default to TLS 1.3                                                            
2025-08-19T12:26:49.3321794Z           with all other protocols disabled.  Only where it is known that a web 
2025-08-19T12:26:49.3321977Z   server must support                                                           
2025-08-19T12:26:49.3322318Z           legacy clients with unsupported an insecure browsers (such as Internet
2025-08-19T12:26:49.3322492Z   Explorer 10), it may                                                          
2025-08-19T12:26:49.3322831Z           be necessary to enable TLS 1.0 to provide support. Add `MinVersion:   
2025-08-19T12:26:49.3323023Z   tls.VersionTLS13' to the                                                      
2025-08-19T12:26:49.3323364Z           TLS configuration to bump the minimum version to TLS 1.3.             
2025-08-19T12:26:49.3323688Z           Details: https://sg.run/oxEN                                          
2025-08-19T12:26:49.3324775Z                                                                                 
2025-08-19T12:26:49.3325186Z            ▶▶┆ Autofix ▶ tls.Config{ ServerName:         p.config.Host,  
2025-08-19T12:26:49.3325658Z                           InsecureSkipVerify: p.config.SkipVerify,       
2025-08-19T12:26:49.3325852Z   MinVersion: tls.VersionTLS13 }                                         
2025-08-19T12:26:49.3326069Z           198┆ tlsConfig := &tls.Config{
2025-08-19T12:26:49.3326305Z           199┆    ServerName:                    
2025-08-19T12:26:49.3326431Z   p.config.Host,                                 
2025-08-19T12:26:49.3326692Z           200┆    InsecureSkipVerify:                  
2025-08-19T12:26:49.3326842Z   p.config.SkipVerify,                                 
2025-08-19T12:26:49.3326959Z           201┆ }
2025-08-19T12:26:49.3327226Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3327608Z            ▶▶┆ Autofix ▶ tls.Config{ ServerName:         p.config.Host,  
2025-08-19T12:26:49.3328113Z                                   InsecureSkipVerify:                    
2025-08-19T12:26:49.3328322Z   p.config.SkipVerify, MinVersion: tls.VersionTLS13 }                    
2025-08-19T12:26:49.3328525Z           208┆ tlsConfig := &tls.Config{
2025-08-19T12:26:49.3328754Z           209┆    ServerName:                    
2025-08-19T12:26:49.3328879Z   p.config.Host,                                 
2025-08-19T12:26:49.3329289Z           210┆    InsecureSkipVerify:                  
2025-08-19T12:26:49.3329444Z   p.config.SkipVerify,                                 
2025-08-19T12:26:49.3329582Z           211┆ }
2025-08-19T12:26:49.3329806Z                                     
2025-08-19T12:26:49.3329933Z     pkg/auth/providers/ldap_pool.go 
2025-08-19T12:26:49.3330281Z        go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversi
2025-08-19T12:26:49.3330558Z   on                                                                            
2025-08-19T12:26:49.3330898Z           `MinVersion` is missing from this TLS configuration.  By default, as  
2025-08-19T12:26:49.3331056Z   of Go 1.22, TLS 1.2 is                                                        
2025-08-19T12:26:49.3331404Z           currently used as the minimum. General purpose web applications should
2025-08-19T12:26:49.3331575Z   default to TLS 1.3                                                            
2025-08-19T12:26:49.3331926Z           with all other protocols disabled.  Only where it is known that a web 
2025-08-19T12:26:49.3332118Z   server must support                                                           
2025-08-19T12:26:49.3332457Z           legacy clients with unsupported an insecure browsers (such as Internet
2025-08-19T12:26:49.3332628Z   Explorer 10), it may                                                          
2025-08-19T12:26:49.3332973Z           be necessary to enable TLS 1.0 to provide support. Add `MinVersion:   
2025-08-19T12:26:49.3333168Z   tls.VersionTLS13' to the                                                      
2025-08-19T12:26:49.3333508Z           TLS configuration to bump the minimum version to TLS 1.3.             
2025-08-19T12:26:49.3333960Z           Details: https://sg.run/oxEN                                          
2025-08-19T12:26:49.3334731Z                                                                                 
2025-08-19T12:26:49.3335154Z            ▶▶┆ Autofix ▶ tls.Config{ InsecureSkipVerify: p.config.SkipVerify,   
2025-08-19T12:26:49.3335366Z   MinVersion: tls.VersionTLS13 }                                                
2025-08-19T12:26:49.3335577Z           333┆ tlsConfig := &tls.Config{
2025-08-19T12:26:49.3335833Z           334┆    InsecureSkipVerify:                  
2025-08-19T12:26:49.3335977Z   p.config.SkipVerify,                                 
2025-08-19T12:26:49.3336103Z           335┆ }
2025-08-19T12:26:49.3336372Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3336739Z            ▶▶┆ Autofix ▶ tls.Config{ ServerName:         p.config.Host,  
2025-08-19T12:26:49.3337251Z                                   InsecureSkipVerify:                    
2025-08-19T12:26:49.3337461Z   p.config.SkipVerify, MinVersion: tls.VersionTLS13 }                    
2025-08-19T12:26:49.3337694Z           341┆ err = conn.StartTLS(&tls.Config{
2025-08-19T12:26:49.3337923Z           342┆    ServerName:                    
2025-08-19T12:26:49.3338055Z   p.config.Host,                                 
2025-08-19T12:26:49.3338311Z           343┆    InsecureSkipVerify:                  
2025-08-19T12:26:49.3338451Z   p.config.SkipVerify,                                 
2025-08-19T12:26:49.3338577Z           344┆ })
2025-08-19T12:26:49.3338836Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3339242Z            ▶▶┆ Autofix ▶ tls.Config{ InsecureSkipVerify: h.config.SkipVerify,   
2025-08-19T12:26:49.3339463Z   MinVersion: tls.VersionTLS13 }                                                
2025-08-19T12:26:49.3339665Z           537┆ tlsConfig := &tls.Config{
2025-08-19T12:26:49.3339916Z           538┆    InsecureSkipVerify:                  
2025-08-19T12:26:49.3340058Z   h.config.SkipVerify,                                 
2025-08-19T12:26:49.3340176Z           539┆ }
2025-08-19T12:26:49.3340433Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3340971Z            ▶▶┆ Autofix ▶ tls.Config{ ServerName:         h.config.Host,  
2025-08-19T12:26:49.3341486Z                                   InsecureSkipVerify:                    
2025-08-19T12:26:49.3341697Z   h.config.SkipVerify, MinVersion: tls.VersionTLS13 }                    
2025-08-19T12:26:49.3341931Z           544┆ err = conn.StartTLS(&tls.Config{
2025-08-19T12:26:49.3342160Z           545┆    ServerName:                    
2025-08-19T12:26:49.3342281Z   h.config.Host,                                 
2025-08-19T12:26:49.3342665Z           546┆    InsecureSkipVerify:                  
2025-08-19T12:26:49.3342808Z   h.config.SkipVerify,                                 
2025-08-19T12:26:49.3342930Z           547┆ })
2025-08-19T12:26:49.3343077Z                          
2025-08-19T12:26:49.3343182Z     pkg/auth/security.go 
2025-08-19T12:26:49.3343540Z        go.lang.security.audit.net.cookie-missing-httponly.cookie-missing-httponl
2025-08-19T12:26:49.3343676Z   y                                                                             
2025-08-19T12:26:49.3344136Z           A session cookie was detected without setting the 'HttpOnly' flag. The
2025-08-19T12:26:49.3344318Z   'HttpOnly' flag for                                                           
2025-08-19T12:26:49.3344671Z           cookies instructs the browser to forbid client-side scripts from      
2025-08-19T12:26:49.3344865Z   reading the cookie which                                                      
2025-08-19T12:26:49.3345213Z           mitigates XSS attacks. Set the 'HttpOnly' flag by setting 'HttpOnly'  
2025-08-19T12:26:49.3345374Z   to 'true' in the                                                              
2025-08-19T12:26:49.3345647Z           Cookie.                                                               
2025-08-19T12:26:49.3345965Z           Details: https://sg.run/b73e                                          
2025-08-19T12:26:49.3346731Z                                                                                 
2025-08-19T12:26:49.3347026Z            ▶▶┆ Autofix ▶ s/(HttpOnly\s*:\s+)false/\1true/g
2025-08-19T12:26:49.3347258Z           406┆ http.SetCookie(w, &http.Cookie{
2025-08-19T12:26:49.3347474Z           407┆    Name:                       
2025-08-19T12:26:49.3347596Z   cm.config.CookieName,                       
2025-08-19T12:26:49.3347763Z           408┆    Value:       
2025-08-19T12:26:49.3347860Z   token,                       
2025-08-19T12:26:49.3348020Z           409┆    Path:      
2025-08-19T12:26:49.3348112Z   "/",                       
2025-08-19T12:26:49.3348319Z           410┆    MaxAge:                 
2025-08-19T12:26:49.3348431Z   cm.config.MaxAge,                       
2025-08-19T12:26:49.3348653Z           411┆    Secure:                       
2025-08-19T12:26:49.3348782Z   cm.config.CookieSecure,                       
2025-08-19T12:26:49.3349017Z           412┆    HttpOnly:                       
2025-08-19T12:26:49.3349154Z   cm.config.CookieHTTPOnly,                       
2025-08-19T12:26:49.3349387Z           413┆    SameSite:                       
2025-08-19T12:26:49.3349524Z   cm.config.CookieSameSite,                       
2025-08-19T12:26:49.3349644Z           414┆ })
2025-08-19T12:26:49.3349907Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3350201Z            ▶▶┆ Autofix ▶ s/(HttpOnly\s*:\s+)false/\1true/g
2025-08-19T12:26:49.3350434Z           469┆ http.SetCookie(w, &http.Cookie{
2025-08-19T12:26:49.3350647Z           470┆    Name:                       
2025-08-19T12:26:49.3350776Z   cm.config.CookieName,                       
2025-08-19T12:26:49.3350951Z           471┆    Value:       
2025-08-19T12:26:49.3351044Z   token,                       
2025-08-19T12:26:49.3351207Z           472┆    Path:      
2025-08-19T12:26:49.3351298Z   "/",                       
2025-08-19T12:26:49.3351503Z           473┆    MaxAge:                 
2025-08-19T12:26:49.3351614Z   cm.config.MaxAge,                       
2025-08-19T12:26:49.3351835Z           474┆    Secure:                       
2025-08-19T12:26:49.3352109Z   cm.config.CookieSecure,                       
2025-08-19T12:26:49.3352350Z           475┆    HttpOnly:                       
2025-08-19T12:26:49.3352487Z   cm.config.CookieHTTPOnly,                       
2025-08-19T12:26:49.3352722Z           476┆    SameSite:                       
2025-08-19T12:26:49.3352854Z   cm.config.CookieSameSite,                       
2025-08-19T12:26:49.3352975Z           477┆ })
2025-08-19T12:26:49.3353379Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3353853Z        go.lang.security.audit.net.cookie-missing-secure.cookie-missing-secure   
2025-08-19T12:26:49.3354203Z           A session cookie was detected without setting the 'Secure' flag. The  
2025-08-19T12:26:49.3354377Z   'secure' flag for                                                             
2025-08-19T12:26:49.3354733Z           cookies prevents the client from transmitting the cookie over insecure
2025-08-19T12:26:49.3354911Z   channels such as                                                              
2025-08-19T12:26:49.3355235Z           HTTP. Set the 'Secure' flag by setting 'Secure' to 'true' in the      
2025-08-19T12:26:49.3355416Z   Options struct.                                                               
2025-08-19T12:26:49.3355732Z           Details: https://sg.run/N4G7                                          
2025-08-19T12:26:49.3356502Z                                                                                 
2025-08-19T12:26:49.3356796Z            ▶▶┆ Autofix ▶ s/(Secure\s*:\s+)false/\1true/g
2025-08-19T12:26:49.3357024Z           406┆ http.SetCookie(w, &http.Cookie{
2025-08-19T12:26:49.3357236Z           407┆    Name:                       
2025-08-19T12:26:49.3357362Z   cm.config.CookieName,                       
2025-08-19T12:26:49.3357530Z           408┆    Value:       
2025-08-19T12:26:49.3357621Z   token,                       
2025-08-19T12:26:49.3357781Z           409┆    Path:      
2025-08-19T12:26:49.3357882Z   "/",                       
2025-08-19T12:26:49.3358084Z           410┆    MaxAge:                 
2025-08-19T12:26:49.3358196Z   cm.config.MaxAge,                       
2025-08-19T12:26:49.3358421Z           411┆    Secure:                       
2025-08-19T12:26:49.3358549Z   cm.config.CookieSecure,                       
2025-08-19T12:26:49.3358777Z           412┆    HttpOnly:                       
2025-08-19T12:26:49.3358919Z   cm.config.CookieHTTPOnly,                       
2025-08-19T12:26:49.3359152Z           413┆    SameSite:                       
2025-08-19T12:26:49.3359286Z   cm.config.CookieSameSite,                       
2025-08-19T12:26:49.3359405Z           414┆ })
2025-08-19T12:26:49.3359671Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3359942Z            ▶▶┆ Autofix ▶ s/(Secure\s*:\s+)false/\1true/g
2025-08-19T12:26:49.3360168Z           469┆ http.SetCookie(w, &http.Cookie{
2025-08-19T12:26:49.3360383Z           470┆    Name:                       
2025-08-19T12:26:49.3360512Z   cm.config.CookieName,                       
2025-08-19T12:26:49.3360676Z           471┆    Value:       
2025-08-19T12:26:49.3360773Z   token,                       
2025-08-19T12:26:49.3360931Z           472┆    Path:      
2025-08-19T12:26:49.3361015Z   "/",                       
2025-08-19T12:26:49.3361213Z           473┆    MaxAge:                 
2025-08-19T12:26:49.3361330Z   cm.config.MaxAge,                       
2025-08-19T12:26:49.3361554Z           474┆    Secure:                       
2025-08-19T12:26:49.3361680Z   cm.config.CookieSecure,                       
2025-08-19T12:26:49.3361909Z           475┆    HttpOnly:                       
2025-08-19T12:26:49.3362044Z   cm.config.CookieHTTPOnly,                       
2025-08-19T12:26:49.3362269Z           476┆    SameSite:                       
2025-08-19T12:26:49.3362401Z   cm.config.CookieSameSite,                       
2025-08-19T12:26:49.3362524Z           477┆ })
2025-08-19T12:26:49.3362872Z                                 
2025-08-19T12:26:49.3362998Z     pkg/auth/session_manager.go 
2025-08-19T12:26:49.3363351Z        go.lang.security.audit.net.cookie-missing-secure.cookie-missing-secure   
2025-08-19T12:26:49.3363872Z           A session cookie was detected without setting the 'Secure' flag. The  
2025-08-19T12:26:49.3364176Z   'secure' flag for                                                             
2025-08-19T12:26:49.3364541Z           cookies prevents the client from transmitting the cookie over insecure
2025-08-19T12:26:49.3364880Z   channels such as                                                              
2025-08-19T12:26:49.3365206Z           HTTP. Set the 'Secure' flag by setting 'Secure' to 'true' in the      
2025-08-19T12:26:49.3365386Z   Options struct.                                                               
2025-08-19T12:26:49.3365703Z           Details: https://sg.run/N4G7                                          
2025-08-19T12:26:49.3366475Z                                                                                 
2025-08-19T12:26:49.3366775Z            ▶▶┆ Autofix ▶ s/(Secure\s*:\s+)false/\1true/g
2025-08-19T12:26:49.3366982Z           760┆ cookie := &http.Cookie{
2025-08-19T12:26:49.3367192Z           761┆    Name:                     
2025-08-19T12:26:49.3367305Z   "nephoran_session",                       
2025-08-19T12:26:49.3367491Z           762┆    Value:           
2025-08-19T12:26:49.3367593Z   sessionID,                       
2025-08-19T12:26:49.3367813Z           763┆    Path:                       
2025-08-19T12:26:49.3367942Z   sm.config.CookiePath,                       
2025-08-19T12:26:49.3368165Z           764┆    Domain:                       
2025-08-19T12:26:49.3368294Z   sm.config.CookieDomain,                       
2025-08-19T12:26:49.3368521Z           765┆    Secure:                        
2025-08-19T12:26:49.3368663Z   sm.config.SecureCookies,                       
2025-08-19T12:26:49.3368830Z           766┆    HttpOnly:   
2025-08-19T12:26:49.3368928Z   true,                       
2025-08-19T12:26:49.3369230Z           767┆    MaxAge:                                        
2025-08-19T12:26:49.3369419Z   int(sm.config.SessionTimeout.Seconds()),                       
2025-08-19T12:26:49.3369538Z           768┆ }
2025-08-19T12:26:49.3369814Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3370085Z            ▶▶┆ Autofix ▶ s/(Secure\s*:\s+)false/\1true/g
2025-08-19T12:26:49.3370291Z           784┆ cookie := &http.Cookie{
2025-08-19T12:26:49.3370499Z           785┆    Name:                     
2025-08-19T12:26:49.3370619Z   "nephoran_session",                       
2025-08-19T12:26:49.3370776Z           786┆    Value:    
2025-08-19T12:26:49.3370862Z   "",                       
2025-08-19T12:26:49.3371079Z           787┆    Path:                       
2025-08-19T12:26:49.3371201Z   sm.config.CookiePath,                       
2025-08-19T12:26:49.3371421Z           788┆    Domain:                       
2025-08-19T12:26:49.3371556Z   sm.config.CookieDomain,                       
2025-08-19T12:26:49.3371764Z           789┆    Expires:  time.Unix(0, 
2025-08-19T12:26:49.3371862Z   0),                                    
2025-08-19T12:26:49.3372018Z           790┆    MaxAge:   
2025-08-19T12:26:49.3372114Z   -1,                       
2025-08-19T12:26:49.3372277Z           791┆    HttpOnly:   
2025-08-19T12:26:49.3372369Z   true,                       
2025-08-19T12:26:49.3372492Z           792┆ }
2025-08-19T12:26:49.3372704Z                                   
2025-08-19T12:26:49.3372825Z     pkg/auth/testutil/fixtures.go 
2025-08-19T12:26:49.3373078Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3373345Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3373600Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3374282Z                                                                  
2025-08-19T12:26:49.3374644Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3374811Z             5┆ "math/rand"
2025-08-19T12:26:49.3374996Z                                
2025-08-19T12:26:49.3375123Z     pkg/auth/testutil/mocks.go 
2025-08-19T12:26:49.3375472Z        go.lang.security.injection.open-redirect.open-redirect                   
2025-08-19T12:26:49.3375811Z           An HTTP redirect was found to be crafted from user-input `r`. This can
2025-08-19T12:26:49.3375998Z   lead to open redirect                                                         
2025-08-19T12:26:49.3376496Z           vulnerabilities, potentially allowing attackers to redirect users to  
2025-08-19T12:26:49.3376688Z   malicious web sites. It                                                       
2025-08-19T12:26:49.3377033Z           is recommend where possible to not allow user-input to craft the      
2025-08-19T12:26:49.3377230Z   redirect URL. When user-                                                      
2025-08-19T12:26:49.3377575Z           input is necessary to craft the request, it is recommended to follow  
2025-08-19T12:26:49.3377767Z   OWASP best practices to                                                       
2025-08-19T12:26:49.3378102Z           restrict the URL to domains in an allowlist.                          
2025-08-19T12:26:49.3378428Z           Details: https://sg.run/2ZW45                                         
2025-08-19T12:26:49.3379201Z                                                                                 
2025-08-19T12:26:49.3379590Z           456┆ http.Redirect(w, r, redirectURL.String(), http.StatusFound)
2025-08-19T12:26:49.3379793Z                                  
2025-08-19T12:26:49.3379913Z     pkg/auth/testutil/testing.go 
2025-08-19T12:26:49.3380258Z        go.lang.security.audit.net.cookie-missing-secure.cookie-missing-secure   
2025-08-19T12:26:49.3380603Z           A session cookie was detected without setting the 'Secure' flag. The  
2025-08-19T12:26:49.3380778Z   'secure' flag for                                                             
2025-08-19T12:26:49.3381134Z           cookies prevents the client from transmitting the cookie over insecure
2025-08-19T12:26:49.3381309Z   channels such as                                                              
2025-08-19T12:26:49.3381633Z           HTTP. Set the 'Secure' flag by setting 'Secure' to 'true' in the      
2025-08-19T12:26:49.3381808Z   Options struct.                                                               
2025-08-19T12:26:49.3382135Z           Details: https://sg.run/N4G7                                          
2025-08-19T12:26:49.3382901Z                                                                                 
2025-08-19T12:26:49.3383182Z            ▶▶┆ Autofix ▶ s/(Secure\s*:\s+)false/\1true/g
2025-08-19T12:26:49.3383421Z           191┆ http.SetCookie(w, &http.Cookie{
2025-08-19T12:26:49.3383617Z           192┆    Name:                 
2025-08-19T12:26:49.3383842Z   "test-session",                       
2025-08-19T12:26:49.3384036Z           193┆    Value:           
2025-08-19T12:26:49.3384140Z   sessionID,                       
2025-08-19T12:26:49.3384303Z           194┆    Path:      
2025-08-19T12:26:49.3384390Z   "/",                       
2025-08-19T12:26:49.3384560Z           195┆    HttpOnly:   
2025-08-19T12:26:49.3384650Z   true,                       
2025-08-19T12:26:49.3384875Z           196┆    Secure:   false, // For     
2025-08-19T12:26:49.3384992Z   testing                                     
2025-08-19T12:26:49.3385121Z           197┆ })
2025-08-19T12:26:49.3385389Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3385718Z        go.lang.security.injection.open-redirect.open-redirect                   
2025-08-19T12:26:49.3386058Z           An HTTP redirect was found to be crafted from user-input `r`. This can
2025-08-19T12:26:49.3386243Z   lead to open redirect                                                         
2025-08-19T12:26:49.3386738Z           vulnerabilities, potentially allowing attackers to redirect users to  
2025-08-19T12:26:49.3386937Z   malicious web sites. It                                                       
2025-08-19T12:26:49.3387283Z           is recommend where possible to not allow user-input to craft the      
2025-08-19T12:26:49.3387473Z   redirect URL. When user-                                                      
2025-08-19T12:26:49.3387818Z           input is necessary to craft the request, it is recommended to follow  
2025-08-19T12:26:49.3388167Z   OWASP best practices to                                                       
2025-08-19T12:26:49.3388491Z           restrict the URL to domains in an allowlist.                          
2025-08-19T12:26:49.3388813Z           Details: https://sg.run/2ZW45                                         
2025-08-19T12:26:49.3389580Z                                                                                 
2025-08-19T12:26:49.3389956Z           435┆ http.Redirect(w, r, redirectURL.String(), http.StatusFound)
2025-08-19T12:26:49.3390175Z                                    
2025-08-19T12:26:49.3390305Z     pkg/chaos/failure_injection.go 
2025-08-19T12:26:49.3390565Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3390825Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3391083Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3391621Z                                                                  
2025-08-19T12:26:49.3391828Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3391991Z             7┆ "math/rand"
2025-08-19T12:26:49.3392288Z                                             
2025-08-19T12:26:49.3392436Z     pkg/controllers/e2nodeset_controller.go 
2025-08-19T12:26:49.3392692Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3392948Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3393209Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3393904Z                                                                  
2025-08-19T12:26:49.3394113Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3394271Z             8┆ "math/rand"
2025-08-19T12:26:49.3394606Z                                                 
2025-08-19T12:26:49.3394775Z     pkg/controllers/networkintent_controller.go 
2025-08-19T12:26:49.3395027Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3395290Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3395546Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3396461Z                                                                  
2025-08-19T12:26:49.3396830Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3397113Z             8┆ "math/rand"
2025-08-19T12:26:49.3397745Z                                                  
2025-08-19T12:26:49.3397941Z     pkg/controllers/optimized/backoff_manager.go 
2025-08-19T12:26:49.3398206Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3398472Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3398837Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3399377Z                                                                  
2025-08-19T12:26:49.3399602Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3399768Z             6┆ "math/rand"
2025-08-19T12:26:49.3400072Z                                              
2025-08-19T12:26:49.3400220Z     pkg/controllers/testutil/test_helpers.go 
2025-08-19T12:26:49.3400478Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3400733Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3400985Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3401722Z                                                                  
2025-08-19T12:26:49.3401937Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3402094Z             6┆ "math/rand"
2025-08-19T12:26:49.3402319Z                                     
2025-08-19T12:26:49.3402444Z     pkg/disaster/restore_manager.go 
2025-08-19T12:26:49.3402797Z        go.lang.security.decompression_bomb.potential-dos-via-decompression-bomb 
2025-08-19T12:26:49.3403152Z           Detected a possible denial-of-service via a zip bomb attack. By       
2025-08-19T12:26:49.3403486Z   limiting the max bytes read,                                                  
2025-08-19T12:26:49.3404101Z           you can mitigate this attack. `io.CopyN()` can specify a size.        
2025-08-19T12:26:49.3404432Z           Details: https://sg.run/RodK                                          
2025-08-19T12:26:49.3405205Z                                                                                 
2025-08-19T12:26:49.3405611Z            ▶▶┆ Autofix ▶                                                        
2025-08-19T12:26:49.3405807Z   s/(.*)(Copy|CopyBuffer)\((.*?),(.*?)(\)|,.*\))/\1CopyN(\3, \4,                
2025-08-19T12:26:49.3405980Z   1024*1024*256)/g                                                              
2025-08-19T12:26:49.3406181Z           995┆ _, err = io.Copy(f, tr)
2025-08-19T12:26:49.3406340Z                            
2025-08-19T12:26:49.3406456Z     pkg/errors/recovery.go 
2025-08-19T12:26:49.3406721Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3406978Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3407231Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3407772Z                                                                  
2025-08-19T12:26:49.3407970Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3408128Z             6┆ "math/rand"
2025-08-19T12:26:49.3408254Z                      
2025-08-19T12:26:49.3408356Z     pkg/llm/cache.go 
2025-08-19T12:26:49.3408671Z        go.lang.security.audit.crypto.use_of_weak_crypto.use-of-md5              
2025-08-19T12:26:49.3409023Z           Detected MD5 hash algorithm which is considered insecure. MD5 is not  
2025-08-19T12:26:49.3409252Z   collision resistant and                                                       
2025-08-19T12:26:49.3409595Z           is therefore not suitable as a cryptographic signature. Use SHA256 or 
2025-08-19T12:26:49.3409766Z   SHA3 instead.                                                                 
2025-08-19T12:26:49.3410084Z           Details: https://sg.run/2xB5                                          
2025-08-19T12:26:49.3410850Z                                                                                 
2025-08-19T12:26:49.3411087Z           711┆ hash := md5.Sum([]byte(combined))
2025-08-19T12:26:49.3411310Z                                     
2025-08-19T12:26:49.3411436Z     pkg/llm/optimized_controller.go 
2025-08-19T12:26:49.3411755Z        go.lang.security.audit.unsafe.use-of-unsafe-block                        
2025-08-19T12:26:49.3412102Z           Using the unsafe package in Go gives you low-level memory management  
2025-08-19T12:26:49.3412264Z   and many of the                                                               
2025-08-19T12:26:49.3412597Z           strengths of the C language, but also steps around the type safety of 
2025-08-19T12:26:49.3412771Z   Go and can lead to                                                            
2025-08-19T12:26:49.3413118Z           buffer overflows and possible arbitrary code execution by an attacker.
2025-08-19T12:26:49.3413301Z   Only use this package                                                         
2025-08-19T12:26:49.3413632Z           if you absolutely know what you're doing.                             
2025-08-19T12:26:49.3414065Z           Details: https://sg.run/qxEx                                          
2025-08-19T12:26:49.3414991Z                                                                                 
2025-08-19T12:26:49.3415356Z           476┆ dataBytes := *(*[]byte)(unsafe.Pointer(&responseData))
2025-08-19T12:26:49.3415646Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3415983Z           491┆ return *(*string)(unsafe.Pointer(&contentBytes)), nil
2025-08-19T12:26:49.3416216Z                                      
2025-08-19T12:26:49.3416350Z     pkg/llm/optimized_http_client.go 
2025-08-19T12:26:49.3416804Z        go.lang.security.audit.unsafe.use-of-unsafe-block                        
2025-08-19T12:26:49.3417146Z           Using the unsafe package in Go gives you low-level memory management  
2025-08-19T12:26:49.3417312Z   and many of the                                                               
2025-08-19T12:26:49.3417647Z           strengths of the C language, but also steps around the type safety of 
2025-08-19T12:26:49.3417817Z   Go and can lead to                                                            
2025-08-19T12:26:49.3418170Z           buffer overflows and possible arbitrary code execution by an attacker.
2025-08-19T12:26:49.3418352Z   Only use this package                                                         
2025-08-19T12:26:49.3418677Z           if you absolutely know what you're doing.                             
2025-08-19T12:26:49.3418993Z           Details: https://sg.run/qxEx                                          
2025-08-19T12:26:49.3419766Z                                                                                 
2025-08-19T12:26:49.3420097Z           486┆ content = *(*string)(unsafe.Pointer(&contentBytes))
2025-08-19T12:26:49.3420359Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3420679Z           493┆ content = *(*string)(unsafe.Pointer(&contentBytes))
2025-08-19T12:26:49.3420845Z                             
2025-08-19T12:26:49.3420954Z     pkg/llm/retry_engine.go 
2025-08-19T12:26:49.3421223Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3421483Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3421734Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3422276Z                                                                  
2025-08-19T12:26:49.3422474Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3422627Z            12┆ "math/rand"
2025-08-19T12:26:49.3422902Z                                          
2025-08-19T12:26:49.3423041Z     pkg/middleware/rate_limit_example.go 
2025-08-19T12:26:49.3423344Z        go.lang.security.audit.net.use-tls.use-tls                               
2025-08-19T12:26:49.3423685Z           Found an HTTP server without TLS. Use 'http.ListenAndServeTLS'        
2025-08-19T12:26:49.3423965Z   instead. See                                                                  
2025-08-19T12:26:49.3424321Z           https://golang.org/pkg/net/http/#ListenAndServeTLS for more           
2025-08-19T12:26:49.3424496Z   information.                                                                  
2025-08-19T12:26:49.3424817Z           Details: https://sg.run/dKbY                                          
2025-08-19T12:26:49.3425582Z                                                                                 
2025-08-19T12:26:49.3425992Z            ▶▶┆ Autofix ▶ http.ListenAndServeTLS(":8080", certFile, keyFile,     
2025-08-19T12:26:49.3426146Z   router)                                                                       
2025-08-19T12:26:49.3426410Z            44┆ http.ListenAndServe(":8080", router)
2025-08-19T12:26:49.3426672Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3427072Z            ▶▶┆ Autofix ▶ http.ListenAndServeTLS(":8080", certFile, keyFile,     
2025-08-19T12:26:49.3427227Z   router)                                                                       
2025-08-19T12:26:49.3427480Z            85┆ http.ListenAndServe(":8080", router)
2025-08-19T12:26:49.3427918Z                                             
2025-08-19T12:26:49.3428076Z     pkg/monitoring/alerting/alert_router.go 
2025-08-19T12:26:49.3428395Z        go.lang.security.audit.crypto.use_of_weak_crypto.use-of-md5              
2025-08-19T12:26:49.3428740Z           Detected MD5 hash algorithm which is considered insecure. MD5 is not  
2025-08-19T12:26:49.3428938Z   collision resistant and                                                       
2025-08-19T12:26:49.3429402Z           is therefore not suitable as a cryptographic signature. Use SHA256 or 
2025-08-19T12:26:49.3429568Z   SHA3 instead.                                                                 
2025-08-19T12:26:49.3429888Z           Details: https://sg.run/2xB5                                          
2025-08-19T12:26:49.3430653Z                                                                                 
2025-08-19T12:26:49.3431007Z           683┆ ID:             fmt.Sprintf("group-%x",                          
2025-08-19T12:26:49.3431207Z   md5.Sum([]byte(fingerprint))),                                                
2025-08-19T12:26:49.3431473Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3431819Z           709┆ ID:             fmt.Sprintf("group-%x",                          
2025-08-19T12:26:49.3432034Z   md5.Sum([]byte(fmt.Sprintf("%s-%d", fingerprint, time.Now().Unix())))),       
2025-08-19T12:26:49.3432299Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3432603Z           740┆ return fmt.Sprintf("%x", md5.Sum([]byte(data)))
2025-08-19T12:26:49.3432961Z                                                  
2025-08-19T12:26:49.3433124Z     pkg/monitoring/alerting/sla_alert_manager.go 
2025-08-19T12:26:49.3433449Z        go.lang.security.audit.crypto.use_of_weak_crypto.use-of-md5              
2025-08-19T12:26:49.3433949Z           Detected MD5 hash algorithm which is considered insecure. MD5 is not  
2025-08-19T12:26:49.3434170Z   collision resistant and                                                       
2025-08-19T12:26:49.3434517Z           is therefore not suitable as a cryptographic signature. Use SHA256 or 
2025-08-19T12:26:49.3434681Z   SHA3 instead.                                                                 
2025-08-19T12:26:49.3435001Z           Details: https://sg.run/2xB5                                          
2025-08-19T12:26:49.3435766Z                                                                                 
2025-08-19T12:26:49.3436076Z           836┆ return fmt.Sprintf("%x", md5.Sum([]byte(data)))
2025-08-19T12:26:49.3436339Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3436663Z           842┆ return fmt.Sprintf("%x", md5.Sum([]byte(data)))[:8]
2025-08-19T12:26:49.3436968Z                                              
2025-08-19T12:26:49.3437116Z     pkg/monitoring/availability/synthetic.go 
2025-08-19T12:26:49.3437381Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3437648Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3437900Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3438439Z                                                                  
2025-08-19T12:26:49.3438642Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3438797Z            10┆ "math/rand"
2025-08-19T12:26:49.3439058Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3439417Z        go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversi
2025-08-19T12:26:49.3439554Z   on                                                                            
2025-08-19T12:26:49.3439892Z           `MinVersion` is missing from this TLS configuration.  By default, as  
2025-08-19T12:26:49.3440056Z   of Go 1.22, TLS 1.2 is                                                        
2025-08-19T12:26:49.3440397Z           currently used as the minimum. General purpose web applications should
2025-08-19T12:26:49.3440738Z   default to TLS 1.3                                                            
2025-08-19T12:26:49.3441093Z           with all other protocols disabled.  Only where it is known that a web 
2025-08-19T12:26:49.3441278Z   server must support                                                           
2025-08-19T12:26:49.3441616Z           legacy clients with unsupported an insecure browsers (such as Internet
2025-08-19T12:26:49.3441791Z   Explorer 10), it may                                                          
2025-08-19T12:26:49.3442248Z           be necessary to enable TLS 1.0 to provide support. Add `MinVersion:   
2025-08-19T12:26:49.3442439Z   tls.VersionTLS13' to the                                                      
2025-08-19T12:26:49.3442781Z           TLS configuration to bump the minimum version to TLS 1.3.             
2025-08-19T12:26:49.3443100Z           Details: https://sg.run/oxEN                                          
2025-08-19T12:26:49.3444177Z                                                                                 
2025-08-19T12:26:49.3444622Z            ▶▶┆ Autofix ▶ tls.Config{ InsecureSkipVerify: config.HTTPSkipTLS,    
2025-08-19T12:26:49.3444837Z   MinVersion: tls.VersionTLS13 }                                                
2025-08-19T12:26:49.3445066Z           224┆ TLSClientConfig: &tls.Config{
2025-08-19T12:26:49.3445321Z           225┆    InsecureSkipVerify:                 
2025-08-19T12:26:49.3445480Z   config.HTTPSkipTLS,                                 
2025-08-19T12:26:49.3445605Z           226┆ },
2025-08-19T12:26:49.3445920Z                                               
2025-08-19T12:26:49.3446079Z     pkg/monitoring/predictive_sla_analyzer.go 
2025-08-19T12:26:49.3446337Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3446594Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3446854Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3447397Z                                                                  
2025-08-19T12:26:49.3447599Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3447757Z             8┆ "math/rand"
2025-08-19T12:26:49.3448064Z                                              
2025-08-19T12:26:49.3448214Z     pkg/monitoring/throughput/load_tester.go 
2025-08-19T12:26:49.3448467Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3448737Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3448990Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3449526Z                                                                  
2025-08-19T12:26:49.3449731Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3449887Z             6┆ "math/rand"
2025-08-19T12:26:49.3450160Z                                           
2025-08-19T12:26:49.3450300Z     pkg/nephio/testutil/porch_fixtures.go 
2025-08-19T12:26:49.3450561Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3450819Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3451071Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3451612Z                                                                  
2025-08-19T12:26:49.3451809Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3451961Z            22┆ "math/rand"
2025-08-19T12:26:49.3452178Z                                   
2025-08-19T12:26:49.3452302Z     pkg/nephio/webui/websocket.go 
2025-08-19T12:26:49.3452658Z        go.gorilla.security.audit.websocket-missing-origin-check.websocket-missin
2025-08-19T12:26:49.3452838Z   g-origin-check                                                                
2025-08-19T12:26:49.3453180Z           The Origin header in the HTTP WebSocket handshake is used to guarantee
2025-08-19T12:26:49.3453519Z   that the connection                                                           
2025-08-19T12:26:49.3454018Z           accepted by the WebSocket is from a trusted origin domain. Failure to 
2025-08-19T12:26:49.3454201Z   enforce can lead to                                                           
2025-08-19T12:26:49.3454540Z           Cross Site Request Forgery (CSRF). As per "gorilla/websocket"         
2025-08-19T12:26:49.3454758Z   documentation: "A CheckOrigin                                                 
2025-08-19T12:26:49.3455256Z           function should carefully validate the request origin to prevent      
2025-08-19T12:26:49.3455444Z   cross-site request                                                            
2025-08-19T12:26:49.3455725Z           forgery."                                                             
2025-08-19T12:26:49.3456055Z           Details: https://sg.run/xXpz                                          
2025-08-19T12:26:49.3456834Z                                                                                 
2025-08-19T12:26:49.3457147Z            56┆ conn, err := ws.upgrader.Upgrade(w, r, nil)
2025-08-19T12:26:49.3457478Z                                                
2025-08-19T12:26:49.3457640Z     pkg/optimization/ai_configuration_tuner.go 
2025-08-19T12:26:49.3457899Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3458158Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3458418Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3458965Z                                                                  
2025-08-19T12:26:49.3459165Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3459324Z            23┆ "math/rand"
2025-08-19T12:26:49.3459648Z                                                
2025-08-19T12:26:49.3459803Z     pkg/optimization/optimization_dashboard.go 
2025-08-19T12:26:49.3460165Z        go.gorilla.security.audit.websocket-missing-origin-check.websocket-missin
2025-08-19T12:26:49.3460351Z   g-origin-check                                                                
2025-08-19T12:26:49.3460691Z           The Origin header in the HTTP WebSocket handshake is used to guarantee
2025-08-19T12:26:49.3460875Z   that the connection                                                           
2025-08-19T12:26:49.3461221Z           accepted by the WebSocket is from a trusted origin domain. Failure to 
2025-08-19T12:26:49.3461400Z   enforce can lead to                                                           
2025-08-19T12:26:49.3461748Z           Cross Site Request Forgery (CSRF). As per "gorilla/websocket"         
2025-08-19T12:26:49.3461963Z   documentation: "A CheckOrigin                                                 
2025-08-19T12:26:49.3462316Z           function should carefully validate the request origin to prevent      
2025-08-19T12:26:49.3462498Z   cross-site request                                                            
2025-08-19T12:26:49.3462785Z           forgery."                                                             
2025-08-19T12:26:49.3463101Z           Details: https://sg.run/xXpz                                          
2025-08-19T12:26:49.3463988Z                                                                                 
2025-08-19T12:26:49.3464334Z           848┆ conn, err := dashboard.wsUpgrader.Upgrade(w, r, nil)
2025-08-19T12:26:49.3464513Z                               
2025-08-19T12:26:49.3464627Z     pkg/oran/a1/a1_adaptor.go 
2025-08-19T12:26:49.3464886Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3465154Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3465409Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3465954Z                                                                  
2025-08-19T12:26:49.3466158Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3466312Z            10┆ "math/rand"
2025-08-19T12:26:49.3466628Z                               
2025-08-19T12:26:49.3466753Z     pkg/oran/e2/e2_adaptor.go 
2025-08-19T12:26:49.3467006Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3467263Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3467517Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3468066Z                                                                  
2025-08-19T12:26:49.3468414Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3468568Z            10┆ "math/rand"
2025-08-19T12:26:49.3468774Z                                  
2025-08-19T12:26:49.3468894Z     pkg/oran/o1/fault_manager.go 
2025-08-19T12:26:49.3469252Z        go.gorilla.security.audit.websocket-missing-origin-check.websocket-missin
2025-08-19T12:26:49.3469436Z   g-origin-check                                                                
2025-08-19T12:26:49.3469781Z           The Origin header in the HTTP WebSocket handshake is used to guarantee
2025-08-19T12:26:49.3469964Z   that the connection                                                           
2025-08-19T12:26:49.3470308Z           accepted by the WebSocket is from a trusted origin domain. Failure to 
2025-08-19T12:26:49.3470482Z   enforce can lead to                                                           
2025-08-19T12:26:49.3470821Z           Cross Site Request Forgery (CSRF). As per "gorilla/websocket"         
2025-08-19T12:26:49.3471036Z   documentation: "A CheckOrigin                                                 
2025-08-19T12:26:49.3471392Z           function should carefully validate the request origin to prevent      
2025-08-19T12:26:49.3471574Z   cross-site request                                                            
2025-08-19T12:26:49.3471851Z           forgery."                                                             
2025-08-19T12:26:49.3472171Z           Details: https://sg.run/xXpz                                          
2025-08-19T12:26:49.3472950Z                                                                                 
2025-08-19T12:26:49.3473284Z           611┆ conn, err := fm.websocketUpgrader.Upgrade(w, r, nil)
2025-08-19T12:26:49.3473495Z                                   
2025-08-19T12:26:49.3473617Z     pkg/oran/o1/netconf_client.go 
2025-08-19T12:26:49.3474085Z        go.lang.security.audit.crypto.insecure_ssh.avoid-ssh-insecure-ignore-host
2025-08-19T12:26:49.3474240Z   -key                                                                          
2025-08-19T12:26:49.3474597Z           Disabled host key verification detected. This allows man-in-the-middle
2025-08-19T12:26:49.3474773Z   attacks. Use the                                                              
2025-08-19T12:26:49.3475144Z           'golang.org/x/crypto/ssh/knownhosts' package to do host key           
2025-08-19T12:26:49.3475325Z   verification. See                                                             
2025-08-19T12:26:49.3475693Z           https://skarlso.github.io/2019/02/17/go-ssh-with-host-key-verification
2025-08-19T12:26:49.3475873Z   / to learn more about                                                         
2025-08-19T12:26:49.3476195Z           the problem and how to fix it.                                        
2025-08-19T12:26:49.3476512Z           Details: https://sg.run/Yv6X                                          
2025-08-19T12:26:49.3477289Z                                                                                 
2025-08-19T12:26:49.3477717Z           152┆ HostKeyCallback: ssh.InsecureIgnoreHostKey(), // In production,  
2025-08-19T12:26:49.3477930Z   use proper host key verification                                              
2025-08-19T12:26:49.3478122Z                                 
2025-08-19T12:26:49.3478246Z     pkg/oran/o1/o1_streaming.go 
2025-08-19T12:26:49.3478602Z        go.gorilla.security.audit.websocket-missing-origin-check.websocket-missin
2025-08-19T12:26:49.3478917Z   g-origin-check                                                                
2025-08-19T12:26:49.3479266Z           The Origin header in the HTTP WebSocket handshake is used to guarantee
2025-08-19T12:26:49.3479448Z   that the connection                                                           
2025-08-19T12:26:49.3479788Z           accepted by the WebSocket is from a trusted origin domain. Failure to 
2025-08-19T12:26:49.3479963Z   enforce can lead to                                                           
2025-08-19T12:26:49.3480431Z           Cross Site Request Forgery (CSRF). As per "gorilla/websocket"         
2025-08-19T12:26:49.3480643Z   documentation: "A CheckOrigin                                                 
2025-08-19T12:26:49.3480992Z           function should carefully validate the request origin to prevent      
2025-08-19T12:26:49.3481182Z   cross-site request                                                            
2025-08-19T12:26:49.3481468Z           forgery."                                                             
2025-08-19T12:26:49.3481785Z           Details: https://sg.run/xXpz                                          
2025-08-19T12:26:49.3482568Z                                                                                 
2025-08-19T12:26:49.3482887Z           291┆ conn, err := s.upgrader.Upgrade(w, r, nil)
2025-08-19T12:26:49.3483142Z                                        
2025-08-19T12:26:49.3483287Z     pkg/performance/cache_optimized.go 
2025-08-19T12:26:49.3483610Z        go.lang.security.audit.unsafe.use-of-unsafe-block                        
2025-08-19T12:26:49.3484255Z           Using the unsafe package in Go gives you low-level memory management  
2025-08-19T12:26:49.3484430Z   and many of the                                                               
2025-08-19T12:26:49.3484772Z           strengths of the C language, but also steps around the type safety of 
2025-08-19T12:26:49.3484938Z   Go and can lead to                                                            
2025-08-19T12:26:49.3485293Z           buffer overflows and possible arbitrary code execution by an attacker.
2025-08-19T12:26:49.3485483Z   Only use this package                                                         
2025-08-19T12:26:49.3485811Z           if you absolutely know what you're doing.                             
2025-08-19T12:26:49.3486133Z           Details: https://sg.run/qxEx                                          
2025-08-19T12:26:49.3486913Z                                                                                 
2025-08-19T12:26:49.3487175Z           625┆ return int64(unsafe.Sizeof(value))
2025-08-19T12:26:49.3487595Z                                                        
2025-08-19T12:26:49.3487783Z     pkg/performance/distributed/telecom_load_tester.go 
2025-08-19T12:26:49.3488053Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3488313Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3488577Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3489120Z                                                                  
2025-08-19T12:26:49.3489323Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3489481Z             9┆ "math/rand"
2025-08-19T12:26:49.3489772Z                                            
2025-08-19T12:26:49.3489916Z     pkg/performance/example_integration.go 
2025-08-19T12:26:49.3490233Z        go.lang.security.audit.unsafe.use-of-unsafe-block                        
2025-08-19T12:26:49.3490593Z           Using the unsafe package in Go gives you low-level memory management  
2025-08-19T12:26:49.3490766Z   and many of the                                                               
2025-08-19T12:26:49.3491110Z           strengths of the C language, but also steps around the type safety of 
2025-08-19T12:26:49.3491284Z   Go and can lead to                                                            
2025-08-19T12:26:49.3491847Z           buffer overflows and possible arbitrary code execution by an attacker.
2025-08-19T12:26:49.3492043Z   Only use this package                                                         
2025-08-19T12:26:49.3492380Z           if you absolutely know what you're doing.                             
2025-08-19T12:26:49.3492698Z           Details: https://sg.run/qxEx                                          
2025-08-19T12:26:49.3493474Z                                                                                 
2025-08-19T12:26:49.3494022Z           183┆ ringBuffer.Push(unsafe.Pointer(&data))
2025-08-19T12:26:49.3494282Z                                        
2025-08-19T12:26:49.3494418Z     pkg/performance/goroutine_pools.go 
2025-08-19T12:26:49.3494743Z        go.lang.security.audit.unsafe.use-of-unsafe-block                        
2025-08-19T12:26:49.3495098Z           Using the unsafe package in Go gives you low-level memory management  
2025-08-19T12:26:49.3495267Z   and many of the                                                               
2025-08-19T12:26:49.3495605Z           strengths of the C language, but also steps around the type safety of 
2025-08-19T12:26:49.3495776Z   Go and can lead to                                                            
2025-08-19T12:26:49.3496128Z           buffer overflows and possible arbitrary code execution by an attacker.
2025-08-19T12:26:49.3496311Z   Only use this package                                                         
2025-08-19T12:26:49.3496651Z           if you absolutely know what you're doing.                             
2025-08-19T12:26:49.3496969Z           Details: https://sg.run/qxEx                                          
2025-08-19T12:26:49.3497748Z                                                                                 
2025-08-19T12:26:49.3498172Z           234┆ atomic.StorePointer(&wsq.tasks[tail&wsq.mask],                   
2025-08-19T12:26:49.3498361Z   unsafe.Pointer(task))                                                         
2025-08-19T12:26:49.3498687Z                                               
2025-08-19T12:26:49.3498842Z     pkg/performance/load-testing/framework.go 
2025-08-19T12:26:49.3499109Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3499371Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3499628Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3500177Z                                                                  
2025-08-19T12:26:49.3500391Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3500551Z             7┆ "math/rand"
2025-08-19T12:26:49.3500977Z                                                        
2025-08-19T12:26:49.3501164Z     pkg/performance/load-testing/telecom_generators.go 
2025-08-19T12:26:49.3501419Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3501678Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3501942Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3502485Z                                                                  
2025-08-19T12:26:49.3502682Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3502845Z             8┆ "math/rand"
2025-08-19T12:26:49.3503133Z                                            
2025-08-19T12:26:49.3503277Z     pkg/performance/load_test_scenarios.go 
2025-08-19T12:26:49.3503537Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3503941Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3504194Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3504741Z                                                                  
2025-08-19T12:26:49.3504941Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3505098Z             7┆ "math/rand"
2025-08-19T12:26:49.3505426Z                                                
2025-08-19T12:26:49.3505730Z     pkg/performance/performance_test_runner.go 
2025-08-19T12:26:49.3505991Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3506249Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3506508Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3507052Z                                                                  
2025-08-19T12:26:49.3507379Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3507541Z             7┆ "math/rand"
2025-08-19T12:26:49.3507725Z                                
2025-08-19T12:26:49.3507842Z     pkg/rag/document_loader.go 
2025-08-19T12:26:49.3508163Z        go.lang.security.audit.crypto.use_of_weak_crypto.use-of-md5              
2025-08-19T12:26:49.3508515Z           Detected MD5 hash algorithm which is considered insecure. MD5 is not  
2025-08-19T12:26:49.3508713Z   collision resistant and                                                       
2025-08-19T12:26:49.3509062Z           is therefore not suitable as a cryptographic signature. Use SHA256 or 
2025-08-19T12:26:49.3509294Z   SHA3 instead.                                                                 
2025-08-19T12:26:49.3509616Z           Details: https://sg.run/2xB5                                          
2025-08-19T12:26:49.3510393Z                                                                                 
2025-08-19T12:26:49.3510577Z          1266┆ hash := md5.New()
2025-08-19T12:26:49.3510861Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3511206Z          2241┆ Hash:           fmt.Sprintf("%x", md5.Sum([]byte(content))),
2025-08-19T12:26:49.3511469Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3511770Z          2314┆ return fmt.Sprintf("%x", md5.Sum([]byte(path)))
2025-08-19T12:26:49.3511971Z                                  
2025-08-19T12:26:49.3512093Z     pkg/rag/embedding_support.go 
2025-08-19T12:26:49.3512363Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3512624Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3512878Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3513429Z                                                                  
2025-08-19T12:26:49.3513626Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3513885Z            11┆ "math/rand"
2025-08-19T12:26:49.3514058Z                             
2025-08-19T12:26:49.3514174Z     pkg/rag/memory_cache.go 
2025-08-19T12:26:49.3514493Z        go.lang.security.audit.unsafe.use-of-unsafe-block                        
2025-08-19T12:26:49.3514841Z           Using the unsafe package in Go gives you low-level memory management  
2025-08-19T12:26:49.3515010Z   and many of the                                                               
2025-08-19T12:26:49.3515349Z           strengths of the C language, but also steps around the type safety of 
2025-08-19T12:26:49.3515655Z   Go and can lead to                                                            
2025-08-19T12:26:49.3516018Z           buffer overflows and possible arbitrary code execution by an attacker.
2025-08-19T12:26:49.3516203Z   Only use this package                                                         
2025-08-19T12:26:49.3516531Z           if you absolutely know what you're doing.                             
2025-08-19T12:26:49.3516853Z           Details: https://sg.run/qxEx                                          
2025-08-19T12:26:49.3517751Z                                                                                 
2025-08-19T12:26:49.3517990Z           749┆ return int64(unsafe.Sizeof(v))
2025-08-19T12:26:49.3518240Z                                       
2025-08-19T12:26:49.3518373Z     pkg/rag/optimized_rag_pipeline.go 
2025-08-19T12:26:49.3518688Z        go.lang.security.audit.crypto.use_of_weak_crypto.use-of-md5              
2025-08-19T12:26:49.3519035Z           Detected MD5 hash algorithm which is considered insecure. MD5 is not  
2025-08-19T12:26:49.3519244Z   collision resistant and                                                       
2025-08-19T12:26:49.3519586Z           is therefore not suitable as a cryptographic signature. Use SHA256 or 
2025-08-19T12:26:49.3519754Z   SHA3 instead.                                                                 
2025-08-19T12:26:49.3520078Z           Details: https://sg.run/2xB5                                          
2025-08-19T12:26:49.3520860Z                                                                                 
2025-08-19T12:26:49.3521162Z           577┆ return fmt.Sprintf("%x", md5.Sum([]byte(data)))
2025-08-19T12:26:49.3521325Z                            
2025-08-19T12:26:49.3521433Z     pkg/rag/redis_cache.go 
2025-08-19T12:26:49.3521748Z        go.lang.security.audit.crypto.use_of_weak_crypto.use-of-md5              
2025-08-19T12:26:49.3522102Z           Detected MD5 hash algorithm which is considered insecure. MD5 is not  
2025-08-19T12:26:49.3522296Z   collision resistant and                                                       
2025-08-19T12:26:49.3522639Z           is therefore not suitable as a cryptographic signature. Use SHA256 or 
2025-08-19T12:26:49.3522805Z   SHA3 instead.                                                                 
2025-08-19T12:26:49.3523125Z           Details: https://sg.run/2xB5                                          
2025-08-19T12:26:49.3524018Z                                                                                 
2025-08-19T12:26:49.3524187Z           761┆ h := md5.New()
2025-08-19T12:26:49.3524441Z                                        
2025-08-19T12:26:49.3524573Z     pkg/rag/weaviate_client_complex.go 
2025-08-19T12:26:49.3524830Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3525098Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3525359Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3525902Z                                                                  
2025-08-19T12:26:49.3526105Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3526264Z            11┆ "math/rand"
2025-08-19T12:26:49.3526522Z                                         
2025-08-19T12:26:49.3526654Z     pkg/security/ca/external_backend.go 
2025-08-19T12:26:49.3527013Z        go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversi
2025-08-19T12:26:49.3527162Z   on                                                                            
2025-08-19T12:26:49.3527506Z           `MinVersion` is missing from this TLS configuration.  By default, as  
2025-08-19T12:26:49.3527673Z   of Go 1.22, TLS 1.2 is                                                        
2025-08-19T12:26:49.3528018Z           currently used as the minimum. General purpose web applications should
2025-08-19T12:26:49.3528332Z   default to TLS 1.3                                                            
2025-08-19T12:26:49.3528693Z           with all other protocols disabled.  Only where it is known that a web 
2025-08-19T12:26:49.3528880Z   server must support                                                           
2025-08-19T12:26:49.3529225Z           legacy clients with unsupported an insecure browsers (such as Internet
2025-08-19T12:26:49.3529396Z   Explorer 10), it may                                                          
2025-08-19T12:26:49.3529860Z           be necessary to enable TLS 1.0 to provide support. Add `MinVersion:   
2025-08-19T12:26:49.3530051Z   tls.VersionTLS13' to the                                                      
2025-08-19T12:26:49.3530390Z           TLS configuration to bump the minimum version to TLS 1.3.             
2025-08-19T12:26:49.3530713Z           Details: https://sg.run/oxEN                                          
2025-08-19T12:26:49.3531489Z                                                                                 
2025-08-19T12:26:49.3531896Z            ▶▶┆ Autofix ▶ tls.Config{ InsecureSkipVerify:                        
2025-08-19T12:26:49.3532159Z   b.config.TLSConfig.InsecureSkipVerify, MinVersion: tls.VersionTLS13 }         
2025-08-19T12:26:49.3532368Z           601┆ tlsConfig := &tls.Config{
2025-08-19T12:26:49.3532715Z           602┆    InsecureSkipVerify:                                    
2025-08-19T12:26:49.3532938Z   b.config.TLSConfig.InsecureSkipVerify,                                 
2025-08-19T12:26:49.3533065Z           603┆ }
2025-08-19T12:26:49.3533304Z                                       
2025-08-19T12:26:49.3533432Z     pkg/security/ca/health_checker.go 
2025-08-19T12:26:49.3533886Z        go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversi
2025-08-19T12:26:49.3534028Z   on                                                                            
2025-08-19T12:26:49.3534375Z           `MinVersion` is missing from this TLS configuration.  By default, as  
2025-08-19T12:26:49.3534544Z   of Go 1.22, TLS 1.2 is                                                        
2025-08-19T12:26:49.3534888Z           currently used as the minimum. General purpose web applications should
2025-08-19T12:26:49.3535056Z   default to TLS 1.3                                                            
2025-08-19T12:26:49.3535403Z           with all other protocols disabled.  Only where it is known that a web 
2025-08-19T12:26:49.3535587Z   server must support                                                           
2025-08-19T12:26:49.3535936Z           legacy clients with unsupported an insecure browsers (such as Internet
2025-08-19T12:26:49.3536111Z   Explorer 10), it may                                                          
2025-08-19T12:26:49.3536453Z           be necessary to enable TLS 1.0 to provide support. Add `MinVersion:   
2025-08-19T12:26:49.3536647Z   tls.VersionTLS13' to the                                                      
2025-08-19T12:26:49.3536996Z           TLS configuration to bump the minimum version to TLS 1.3.             
2025-08-19T12:26:49.3537319Z           Details: https://sg.run/oxEN                                          
2025-08-19T12:26:49.3538094Z                                                                                 
2025-08-19T12:26:49.3538500Z            ▶▶┆ Autofix ▶ tls.Config{ InsecureSkipVerify:                        
2025-08-19T12:26:49.3538748Z   !hc.config.TLSVerificationEnabled, MinVersion: tls.VersionTLS13 }             
2025-08-19T12:26:49.3538959Z           335┆ tlsConfig := &tls.Config{
2025-08-19T12:26:49.3539285Z           336┆    InsecureSkipVerify:                                
2025-08-19T12:26:49.3539489Z   !hc.config.TLSVerificationEnabled,                                 
2025-08-19T12:26:49.3539607Z           337┆ }
2025-08-19T12:26:49.3539808Z                                  
2025-08-19T12:26:49.3539933Z     pkg/security/crypto_utils.go 
2025-08-19T12:26:49.3540252Z        go.lang.security.audit.unsafe.use-of-unsafe-block                        
2025-08-19T12:26:49.3540735Z           Using the unsafe package in Go gives you low-level memory management  
2025-08-19T12:26:49.3540908Z   and many of the                                                               
2025-08-19T12:26:49.3541246Z           strengths of the C language, but also steps around the type safety of 
2025-08-19T12:26:49.3541413Z   Go and can lead to                                                            
2025-08-19T12:26:49.3541881Z           buffer overflows and possible arbitrary code execution by an attacker.
2025-08-19T12:26:49.3542072Z   Only use this package                                                         
2025-08-19T12:26:49.3542400Z           if you absolutely know what you're doing.                             
2025-08-19T12:26:49.3542717Z           Details: https://sg.run/qxEx                                          
2025-08-19T12:26:49.3543499Z                                                                                 
2025-08-19T12:26:49.3543915Z           291┆ ptr := uintptr(unsafe.Pointer(&buffer.data[0]))
2025-08-19T12:26:49.3544083Z                             
2025-08-19T12:26:49.3544198Z     pkg/security/scanner.go 
2025-08-19T12:26:49.3544543Z        go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversi
2025-08-19T12:26:49.3544678Z   on                                                                            
2025-08-19T12:26:49.3545025Z           `MinVersion` is missing from this TLS configuration.  By default, as  
2025-08-19T12:26:49.3545188Z   of Go 1.22, TLS 1.2 is                                                        
2025-08-19T12:26:49.3545529Z           currently used as the minimum. General purpose web applications should
2025-08-19T12:26:49.3545702Z   default to TLS 1.3                                                            
2025-08-19T12:26:49.3546046Z           with all other protocols disabled.  Only where it is known that a web 
2025-08-19T12:26:49.3546234Z   server must support                                                           
2025-08-19T12:26:49.3546576Z           legacy clients with unsupported an insecure browsers (such as Internet
2025-08-19T12:26:49.3546753Z   Explorer 10), it may                                                          
2025-08-19T12:26:49.3547093Z           be necessary to enable TLS 1.0 to provide support. Add `MinVersion:   
2025-08-19T12:26:49.3547287Z   tls.VersionTLS13' to the                                                      
2025-08-19T12:26:49.3547636Z           TLS configuration to bump the minimum version to TLS 1.3.             
2025-08-19T12:26:49.3547954Z           Details: https://sg.run/oxEN                                          
2025-08-19T12:26:49.3548730Z                                                                                 
2025-08-19T12:26:49.3549137Z            ▶▶┆ Autofix ▶ tls.Config{ InsecureSkipVerify:                        
2025-08-19T12:26:49.3549383Z   config.SkipTLSVerification, MinVersion: tls.VersionTLS13 }                    
2025-08-19T12:26:49.3549628Z           160┆ TLSClientConfig: &tls.Config{
2025-08-19T12:26:49.3549926Z           161┆    InsecureSkipVerify:                         
2025-08-19T12:26:49.3550106Z   config.SkipTLSVerification,                                 
2025-08-19T12:26:49.3550228Z           162┆ },
2025-08-19T12:26:49.3550498Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3550834Z            ▶▶┆ Autofix ▶ tls.Config{ MaxVersion:         version,
2025-08-19T12:26:49.3551299Z                                   InsecureSkipVerify: true,      
2025-08-19T12:26:49.3551478Z   MinVersion: tls.VersionTLS13 }                                 
2025-08-19T12:26:49.3551730Z           664┆ "tcp", host+":"+port, &tls.Config{
2025-08-19T12:26:49.3551943Z           665┆    MaxVersion:              
2025-08-19T12:26:49.3552051Z   version,                                 
2025-08-19T12:26:49.3552264Z           666┆    InsecureSkipVerify:   
2025-08-19T12:26:49.3558955Z   true,                                 
2025-08-19T12:26:49.3559186Z           667┆ })
2025-08-19T12:26:49.3559520Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3559921Z            ▶▶┆ Autofix ▶ tls.Config{ , MinVersion: tls.VersionTLS13 }
2025-08-19T12:26:49.3560192Z           688┆ "tcp", host+":"+port, &tls.Config{})
2025-08-19T12:26:49.3560417Z                                    
2025-08-19T12:26:49.3560552Z     pkg/webui/realtime_handlers.go 
2025-08-19T12:26:49.3561074Z        go.gorilla.security.audit.websocket-missing-origin-check.websocket-missin
2025-08-19T12:26:49.3561262Z   g-origin-check                                                                
2025-08-19T12:26:49.3561605Z           The Origin header in the HTTP WebSocket handshake is used to guarantee
2025-08-19T12:26:49.3561794Z   that the connection                                                           
2025-08-19T12:26:49.3562134Z           accepted by the WebSocket is from a trusted origin domain. Failure to 
2025-08-19T12:26:49.3562320Z   enforce can lead to                                                           
2025-08-19T12:26:49.3562668Z           Cross Site Request Forgery (CSRF). As per "gorilla/websocket"         
2025-08-19T12:26:49.3562884Z   documentation: "A CheckOrigin                                                 
2025-08-19T12:26:49.3563238Z           function should carefully validate the request origin to prevent      
2025-08-19T12:26:49.3563428Z   cross-site request                                                            
2025-08-19T12:26:49.3563859Z           forgery."                                                             
2025-08-19T12:26:49.3564186Z           Details: https://sg.run/xXpz                                          
2025-08-19T12:26:49.3564972Z                                                                                 
2025-08-19T12:26:49.3565295Z           154┆ conn, err := s.upgrader.Upgrade(w, r, nil)
2025-08-19T12:26:49.3565428Z                       
2025-08-19T12:26:49.3565535Z     rag-python/api.py 
2025-08-19T12:26:49.3565888Z        python.flask.security.audit.app-run-param-config.avoid_app_run_with_bad_h
2025-08-19T12:26:49.3566029Z   ost                                                                           
2025-08-19T12:26:49.3566367Z           Running flask app with host 0.0.0.0 could expose the server publicly. 
2025-08-19T12:26:49.3566688Z           Details: https://sg.run/eLby                                          
2025-08-19T12:26:49.3567461Z                                                                                 
2025-08-19T12:26:49.3567707Z           374┆ app.run(host='0.0.0.0', port=5001)
2025-08-19T12:26:49.3567969Z                                         
2025-08-19T12:26:49.3568107Z     scripts/generate-security-report.py 
2025-08-19T12:26:49.3568431Z        python.lang.security.use-defused-xml.use-defused-xml                     
2025-08-19T12:26:49.3568788Z           The Python documentation recommends using `defusedxml` instead of     
2025-08-19T12:26:49.3568978Z   `xml` because the native                                                      
2025-08-19T12:26:49.3569310Z           Python `xml` library is vulnerable to XML External Entity (XXE)       
2025-08-19T12:26:49.3569508Z   attacks. These attacks can                                                    
2025-08-19T12:26:49.3569856Z           leak confidential data and "XML bombs" can cause denial of service.   
2025-08-19T12:26:49.3570171Z           Details: https://sg.run/kX47                                          
2025-08-19T12:26:49.3570943Z                                                                                 
2025-08-19T12:26:49.3571198Z            16┆ import xml.etree.ElementTree as ET
2025-08-19T12:26:49.3571437Z                                       
2025-08-19T12:26:49.3571565Z     tools/vessend/cmd/vessend/main.go 
2025-08-19T12:26:49.3571831Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3572236Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3572497Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3573042Z                                                                  
2025-08-19T12:26:49.3573248Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3573407Z            14┆ "math/rand"
2025-08-19T12:26:49.3573571Z                             
2025-08-19T12:26:49.3573672Z   BLOCKING CODE RULES FIRED:
2025-08-19T12:26:49.3574250Z     generic.secrets.security.detected-pgp-private-key-block.detected-pgp-private
2025-08-19T12:26:49.3574421Z   -key-block                                                                    
2025-08-19T12:26:49.3574717Z     generic.secrets.security.detected-slack-webhook.detected-slack-webhook
2025-08-19T12:26:49.3575033Z     go.gorilla.security.audit.websocket-missing-origin-check.websocket-missing-o
2025-08-19T12:26:49.3575199Z   rigin-check                                                                   
2025-08-19T12:26:49.3575499Z     go.lang.security.audit.crypto.insecure_ssh.avoid-ssh-insecure-ignore-host-ke
2025-08-19T12:26:49.3575636Z   y                                                                             
2025-08-19T12:26:49.3575852Z     go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3576164Z     go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversion
2025-08-19T12:26:49.3576383Z     go.lang.security.audit.crypto.use_of_weak_crypto.use-of-md5
2025-08-19T12:26:49.3576690Z     go.lang.security.audit.net.cookie-missing-httponly.cookie-missing-httponly
2025-08-19T12:26:49.3576966Z     go.lang.security.audit.net.cookie-missing-secure.cookie-missing-secure
2025-08-19T12:26:49.3577129Z     go.lang.security.audit.net.use-tls.use-tls
2025-08-19T12:26:49.3577312Z     go.lang.security.audit.unsafe.use-of-unsafe-block
2025-08-19T12:26:49.3577591Z     go.lang.security.decompression_bomb.potential-dos-via-decompression-bomb
2025-08-19T12:26:49.3577806Z     go.lang.security.injection.open-redirect.open-redirect
2025-08-19T12:26:49.3578024Z     go.lang.security.injection.raw-html-format.raw-html-format
2025-08-19T12:26:49.3578323Z     python.flask.security.audit.app-run-param-config.avoid_app_run_with_bad_host
2025-08-19T12:26:49.3578610Z     python.lang.security.audit.subprocess-shell-true.subprocess-shell-true
2025-08-19T12:26:49.3578809Z     python.lang.security.use-defused-xml.use-defused-xml
2025-08-19T12:26:49.3579122Z     terraform.lang.security.eks-public-endpoint-enabled.eks-public-endpoint-enab
2025-08-19T12:26:49.3579272Z   led                                                                           
2025-08-19T12:26:49.3579586Z     yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalati
2025-08-19T12:26:49.3579719Z   on                                                                            
2025-08-19T12:26:49.3580033Z     yaml.kubernetes.security.exposing-docker-socket-hostpath.exposing-docker-soc
2025-08-19T12:26:49.3580211Z   ket-hostpath                                                                  
2025-08-19T12:26:49.3580431Z     yaml.kubernetes.security.hostnetwork-pod.hostnetwork-pod
2025-08-19T12:26:49.3580616Z     yaml.kubernetes.security.hostpid-pod.hostpid-pod
2025-08-19T12:26:49.3580895Z     yaml.kubernetes.security.privileged-container.privileged-container
2025-08-19T12:26:49.3581109Z     yaml.kubernetes.security.run-as-non-root.run-as-non-root
2025-08-19T12:26:49.3581391Z     yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file
2025-08-19T12:26:49.3581692Z     yaml.kubernetes.security.skip-tls-verify-service.skip-tls-verify-service
2025-08-19T12:26:49.3582006Z     yaml.kubernetes.security.writable-filesystem-container.writable-filesystem-c
2025-08-19T12:26:49.3582163Z   ontainer                                                                      
2025-08-19T12:26:49.3582170Z 
2025-08-19T12:26:49.3582336Z                 
2025-08-19T12:26:49.3582438Z                 
2025-08-19T12:26:49.3582550Z ┌──────────────┐
2025-08-19T12:26:49.3582788Z │ Scan Summary │
2025-08-19T12:26:49.3582896Z └──────────────┘
2025-08-19T12:26:49.3583039Z Some files were skipped or only partially analyzed.
2025-08-19T12:26:49.3583164Z   Scan was limited to files tracked by git.
2025-08-19T12:26:49.3583479Z   Partially scanned: 17 files only partially analyzed due to parsing or internal Semgrep errors
2025-08-19T12:26:49.3583653Z   Scan skipped: 464 files matching .semgrepignore patterns
2025-08-19T12:26:49.3584128Z   For a full list of skipped files, run semgrep with the --verbose flag.
2025-08-19T12:26:49.3584134Z 
2025-08-19T12:26:49.3584237Z CI scan completed successfully.
2025-08-19T12:26:49.3584377Z   Found 318 findings (318 blocking) from 313 rules.
2025-08-19T12:26:49.3584540Z   Has findings for blocking rules so exiting with code 1
2025-08-19T12:26:49.3584545Z 
2025-08-19T12:26:49.3584764Z A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading
2025-08-19T12:26:49.3584769Z 
2025-08-19T12:26:49.3584985Z Versions prior to 1.76.0 are no longer supported by Semgrep.dev, please upgrade.
2025-08-19T12:26:50.6213689Z Post job cleanup.
2025-08-19T12:26:50.7197375Z [command]/usr/bin/git version
2025-08-19T12:26:50.7240593Z git version 2.50.1
2025-08-19T12:26:50.7286501Z Temporarily overriding HOME='/home/runner/work/_temp/5f182a8c-1923-4fd5-a617-dc02dee4992b' before making global git config changes
2025-08-19T12:26:50.7287873Z Adding repository directory to the temporary git global config as a safe directory
2025-08-19T12:26:50.7301408Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/nephoran-intent-operator/nephoran-intent-operator
2025-08-19T12:26:50.7345303Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-08-19T12:26:50.7385450Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-08-19T12:26:50.7664266Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-08-19T12:26:50.7691615Z http.https://github.com/.extraheader
2025-08-19T12:26:50.7705490Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-08-19T12:26:50.7745143Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-08-19T12:26:50.8118895Z Post job cleanup.
2025-08-19T12:26:50.8894181Z [harden-runner] post-step
2025-08-19T12:26:51.8930358Z log:
2025-08-19T12:26:51.8931348Z Tue, 19 Aug 2025 12:25:32 GMT:[buildInfo] tag=v0.14.2 commit=a33c48b038c7b6ac98c789579037e76204e082d0 branch=HEAD 
2025-08-19T12:26:51.8931934Z 
2025-08-19T12:26:51.8932095Z Tue, 19 Aug 2025 12:25:32 GMT:read config 
2025-08-19T12:26:51.8938326Z  &{Repo:thc1006/nephoran-intent-operator CorrelationId:6e3e7f24-3ed1-4264-abc7-214bf28d2d2f RunId:17069476080 WorkingDirectory:/home/runner/work/nephoran-intent-operator/nephoran-intent-operator APIURL:https://agent.api.stepsecurity.io/v1 OneTimeKey: Endpoints:map[api.github.com.:[{domainName:api.github.com. port:443}] github.com.:[{domainName:github.com. port:443}] golang.org.:[{domainName:golang.org. port:443}] objects.githubusercontent.com.:[{domainName:objects.githubusercontent.com. port:443}] proxy.golang.org.:[{domainName:proxy.golang.org. port:443}] sum.golang.org.:[{domainName:sum.golang.org. port:443}]] EgressPolicy:audit DisableTelemetry:false DisableSudo:false DisableSudoAndContainers:false DisableFileMonitoring:false Private:false}
2025-08-19T12:26:51.8941379Z 
2025-08-19T12:26:51.8941697Z Tue, 19 Aug 2025 12:25:32 GMT:Step Security Job Correlation ID: 6e3e7f24-3ed1-4264-abc7-214bf28d2d2f
2025-08-19T12:26:51.8942077Z 
2025-08-19T12:26:51.8942346Z Tue, 19 Aug 2025 12:25:32 GMT:Global feature flags: {AgentType:agent-oss EnableArmour:true}
2025-08-19T12:26:51.8942858Z Tue, 19 Aug 2025 12:25:32 GMT:initialized global feature flags
2025-08-19T12:26:51.8943115Z 
2025-08-19T12:26:51.8943259Z Tue, 19 Aug 2025 12:25:32 GMT:started process monitor
2025-08-19T12:26:51.8943491Z 
2025-08-19T12:26:51.8943642Z Tue, 19 Aug 2025 12:25:32 GMT:Monitor Processes called
2025-08-19T12:26:51.8944208Z Tue, 19 Aug 2025 12:25:32 GMT:NewAuditClient created
2025-08-19T12:26:51.8944558Z Tue, 19 Aug 2025 12:25:32 GMT:Status is enabled
2025-08-19T12:26:51.8944880Z Tue, 19 Aug 2025 12:25:32 GMT:Rules deleted
2025-08-19T12:26:51.8945828Z Tue, 19 Aug 2025 12:25:32 GMT:File monitor added for /home/runner/work/nephoran-intent-operator/nephoran-intent-operator
2025-08-19T12:26:51.8946443Z Tue, 19 Aug 2025 12:25:32 GMT:Agent file monitor added
2025-08-19T12:26:51.8946823Z Tue, 19 Aug 2025 12:25:32 GMT:Docker's daemon.json file monitor added
2025-08-19T12:26:51.8947221Z Tue, 19 Aug 2025 12:25:32 GMT:Systemd's resolved.conf file monitor added
2025-08-19T12:26:51.8947558Z Tue, 19 Aug 2025 12:25:32 GMT:Net monitor added
2025-08-19T12:26:51.8947840Z Tue, 19 Aug 2025 12:25:32 GMT:Process monitor added
2025-08-19T12:26:51.8948123Z Tue, 19 Aug 2025 12:25:32 GMT:receive called
2025-08-19T12:26:51.8948287Z 
2025-08-19T12:26:51.8948291Z 
2025-08-19T12:26:51.8948400Z Tue, 19 Aug 2025 12:25:32 GMT:updated resolved
2025-08-19T12:26:51.8948567Z 
2025-08-19T12:26:51.8948672Z Tue, 19 Aug 2025 12:25:33 GMT:set docker config
2025-08-19T12:26:51.8948851Z 
2025-08-19T12:26:51.8948957Z Tue, 19 Aug 2025 12:25:33 GMT:before audit rules
2025-08-19T12:26:51.8949240Z Tue, 19 Aug 2025 12:25:34 GMT:added audit rules
2025-08-19T12:26:51.8949519Z Tue, 19 Aug 2025 12:25:34 GMT:Armour is enabled
2025-08-19T12:26:51.8949777Z Tue, 19 Aug 2025 12:25:34 GMT:Armour attached
2025-08-19T12:26:51.8950031Z Tue, 19 Aug 2025 12:25:34 GMT:done
2025-08-19T12:26:51.8951096Z Tue, 19 Aug 2025 12:25:34 GMT:[Source code overwritten] file: /home/runner/work/nephoran-intent-operator/nephoran-intent-operator/.git/config.lock syscall: openat by exe: /usr/bin/git [324c8e1c70df886c33f9de6baea3e69badf185588d7724d68da69d4be7933a74] Timestamp: 2025-08-19T12:25:34.774Z
2025-08-19T12:26:51.8952906Z Tue, 19 Aug 2025 12:25:34 GMT:[Source code overwritten] file: /home/runner/work/nephoran-intent-operator/nephoran-intent-operator/.git/config syscall: rename by exe: /usr/bin/git [324c8e1c70df886c33f9de6baea3e69badf185588d7724d68da69d4be7933a74] Timestamp: 2025-08-19T12:25:34.774Z
2025-08-19T12:26:51.8955818Z Tue, 19 Aug 2025 12:25:34 GMT:[Source code overwritten] file: /home/runner/work/nephoran-intent-operator/nephoran-intent-operator/.git/config.lock syscall: openat by exe: /usr/bin/git [324c8e1c70df886c33f9de6baea3e69badf185588d7724d68da69d4be7933a74] Timestamp: 2025-08-19T12:25:34.774Z
2025-08-19T12:26:51.8958457Z Tue, 19 Aug 2025 12:25:35 GMT:[Source code overwritten] file: /home/runner/work/nephoran-intent-operator/nephoran-intent-operator/.git/config syscall: openat by exe: /home/runner/actions-runner/cached/externals/node20/bin/node [2fef68bbc03f7bf68b3daa917d43ab198466080302b2a9d731cf43614a574d25] Timestamp: 2025-08-19T12:25:34.961Z
2025-08-19T12:26:51.8959966Z Tue, 19 Aug 2025 12:25:35 GMT:domain resolved: github.com., ip address: 140.82.113.3, TTL: 60
2025-08-19T12:26:51.8960701Z Tue, 19 Aug 2025 12:25:35 GMT:endpoint called ip address:port 140.82.113.3:443, domain: github.com., pid: 2870, process: git-remote-http
2025-08-19T12:26:51.8961552Z Tue, 19 Aug 2025 12:25:44 GMT:domain resolved: results-receiver.actions.githubusercontent.com., ip address: 140.82.112.22, TTL: 30
2025-08-19T12:26:51.8962652Z Tue, 19 Aug 2025 12:25:44 GMT:endpoint called ip address:port 140.82.112.22:443, domain: results-receiver.actions.githubusercontent.com., pid: 2889, process: node
2025-08-19T12:26:51.8963504Z Tue, 19 Aug 2025 12:25:44 GMT:domain resolved: proxy.golang.org., ip address: 192.178.210.141, TTL: 300
2025-08-19T12:26:51.8964408Z Tue, 19 Aug 2025 12:25:45 GMT:endpoint called ip address:port 192.178.210.141:443, domain: proxy.golang.org., pid: 2954, process: go
2025-08-19T12:26:51.8965265Z Tue, 19 Aug 2025 12:26:01 GMT:domain resolved: storage.googleapis.com., ip address: 209.85.200.207, TTL: 300
2025-08-19T12:26:51.8966042Z Tue, 19 Aug 2025 12:26:01 GMT:endpoint called ip address:port 209.85.200.207:443, domain: storage.googleapis.com., pid: 2954, process: go
2025-08-19T12:26:51.8966758Z Tue, 19 Aug 2025 12:26:17 GMT:domain resolved: semgrep.dev., ip address: 13.249.205.24, TTL: 60
2025-08-19T12:26:51.8967511Z Tue, 19 Aug 2025 12:26:17 GMT:endpoint called ip address:port 13.249.205.24:443, domain: semgrep.dev., pid: 3019, process: python3.11
2025-08-19T12:26:51.8968486Z Tue, 19 Aug 2025 12:26:49 GMT:domain resolved: metrics.semgrep.dev., ip address: 44.226.46.250, TTL: 60
2025-08-19T12:26:51.8969243Z Tue, 19 Aug 2025 12:26:49 GMT:endpoint called ip address:port 44.226.46.250:443, domain: metrics.semgrep.dev., pid: 3019, process: python3.11
2025-08-19T12:26:51.8969743Z 
2025-08-19T12:26:51.8969857Z Tue, 19 Aug 2025 12:26:50 GMT:post_event called
2025-08-19T12:26:51.8970037Z 
2025-08-19T12:26:51.8970115Z status:
2025-08-19T12:26:51.8970287Z Initialized
2025-08-19T12:26:51.9094162Z agent.service log:
2025-08-19T12:26:51.9095765Z Aug 19 12:25:32 pkrvmubgrv54qmi systemd[1]: /etc/systemd/system/agent.service:9: Standard output type syslog is obsolete, automatically updating to journal. Please update your unit file, and consider removing the setting altogether.
2025-08-19T12:26:51.9098302Z Aug 19 12:25:32 pkrvmubgrv54qmi systemd[1]: /etc/systemd/system/agent.service:10: Standard output type syslog is obsolete, automatically updating to journal. Please update your unit file, and consider removing the setting altogether.
2025-08-19T12:26:51.9099823Z Aug 19 12:25:32 pkrvmubgrv54qmi systemd[1]: Started agent.service - Agent.
2025-08-19T12:26:51.9101047Z Aug 19 12:25:32 pkrvmubgrv54qmi sudo[2447]:     root : *** ; USER=root ; COMMAND=/usr/bin/systemctl stop systemd-resolved
2025-08-19T12:26:51.9102154Z Aug 19 12:25:32 pkrvmubgrv54qmi sudo[2447]: pam_unix(sudo:session): session opened for user root(uid=0) by (uid=0)
2025-08-19T12:26:51.9103170Z Aug 19 12:25:32 pkrvmubgrv54qmi sudo[2447]: pam_unix(sudo:session): session closed for user root
2025-08-19T12:26:51.9104517Z Aug 19 12:25:32 pkrvmubgrv54qmi sudo[2453]:     root : *** ; USER=root ; COMMAND=/usr/bin/systemctl restart systemd-resolved
2025-08-19T12:26:51.9105632Z Aug 19 12:25:32 pkrvmubgrv54qmi sudo[2453]: pam_unix(sudo:session): session opened for user root(uid=0) by (uid=0)
2025-08-19T12:26:51.9106958Z Aug 19 12:25:32 pkrvmubgrv54qmi sudo[2453]: pam_unix(sudo:session): session closed for user root
2025-08-19T12:26:51.9108029Z Aug 19 12:25:32 pkrvmubgrv54qmi sudo[2459]:     root : *** ; USER=root ; COMMAND=/usr/bin/resolvectl flush-caches
2025-08-19T12:26:51.9109064Z Aug 19 12:25:32 pkrvmubgrv54qmi sudo[2459]: pam_unix(sudo:session): session opened for user root(uid=0) by (uid=0)
2025-08-19T12:26:51.9110045Z Aug 19 12:25:32 pkrvmubgrv54qmi sudo[2459]: pam_unix(sudo:session): session closed for user root
2025-08-19T12:26:51.9111108Z Aug 19 12:25:32 pkrvmubgrv54qmi sudo[2462]:     root : *** ; USER=root ; COMMAND=/usr/bin/systemctl reload docker
2025-08-19T12:26:51.9112154Z Aug 19 12:25:32 pkrvmubgrv54qmi sudo[2462]: pam_unix(sudo:session): session opened for user root(uid=0) by (uid=0)
2025-08-19T12:26:51.9113118Z Aug 19 12:25:32 pkrvmubgrv54qmi sudo[2462]: pam_unix(sudo:session): session closed for user root
2025-08-19T12:26:51.9114808Z Aug 19 12:25:33 pkrvmubgrv54qmi sudo[2471]:     root : *** ; USER=root ; COMMAND=/usr/bin/systemctl daemon-reload
2025-08-19T12:26:51.9115911Z Aug 19 12:25:33 pkrvmubgrv54qmi sudo[2471]: pam_unix(sudo:session): session opened for user root(uid=0) by (uid=0)
2025-08-19T12:26:51.9117755Z Aug 19 12:25:33 pkrvmubgrv54qmi systemd[1]: /etc/systemd/system/agent.service:9: Standard output type syslog is obsolete, automatically updating to journal. Please update your unit file, and consider removing the setting altogether.
2025-08-19T12:26:51.9120204Z Aug 19 12:25:33 pkrvmubgrv54qmi systemd[1]: /etc/systemd/system/agent.service:10: Standard output type syslog is obsolete, automatically updating to journal. Please update your unit file, and consider removing the setting altogether.
2025-08-19T12:26:51.9121841Z Aug 19 12:25:33 pkrvmubgrv54qmi sudo[2471]: pam_unix(sudo:session): session closed for user root
2025-08-19T12:26:51.9122968Z Aug 19 12:25:33 pkrvmubgrv54qmi sudo[2539]:     root : *** ; USER=root ; COMMAND=/usr/bin/systemctl restart docker
2025-08-19T12:26:51.9125323Z Aug 19 12:25:33 pkrvmubgrv54qmi sudo[2539]: pam_unix(sudo:session): session opened for user root(uid=0) by (uid=0)
2025-08-19T12:26:51.9126582Z Aug 19 12:25:33 pkrvmubgrv54qmi sudo[2539]: pam_unix(sudo:session): session closed for user root
2025-08-19T12:26:51.9127564Z Aug 19 12:25:34 pkrvmubgrv54qmi agentservice[2434]: 2025/08/19 12:25:34 INFO Config ENFORCE_WRITE_BLOCK=false
2025-08-19T12:26:51.9128549Z Aug 19 12:25:34 pkrvmubgrv54qmi agentservice[2434]: 2025/08/19 12:25:34 INFO Config ENFORCE_KILL_BLOCK=false
2025-08-19T12:26:51.9129450Z Aug 19 12:25:34 pkrvmubgrv54qmi agentservice[2434]: 2025/08/19 12:25:34 INFO Config AGENT_PID=2434
2025-08-19T12:26:51.9130445Z Aug 19 12:25:34 pkrvmubgrv54qmi agentservice[2434]: 2025/08/19 12:25:34 INFO Config ENFORCE_READ_BLOCK=false
2025-08-19T12:26:51.9131069Z Aug 19 12:25:34 pkrvmubgrv54qmi agentservice[2434]: 2025/08/19 12:25:34 INFO Map size protected_pids=1
2025-08-19T12:26:51.9131670Z Aug 19 12:25:34 pkrvmubgrv54qmi agentservice[2434]: 2025/08/19 12:25:34 INFO Map size protected_pid_inodes=1
2025-08-19T12:26:51.9132283Z Aug 19 12:25:34 pkrvmubgrv54qmi agentservice[2434]: 2025/08/19 12:25:34 INFO Map size protected_bpf_ids=9
2025-08-19T12:26:51.9132877Z Aug 19 12:25:34 pkrvmubgrv54qmi agentservice[2434]: 2025/08/19 12:25:34 INFO Map size protected_fs_inodes=6
2025-08-19T12:26:51.9133475Z Aug 19 12:25:34 pkrvmubgrv54qmi agentservice[2434]: 2025/08/19 12:25:34 INFO Map size protected_proc_fs_inodes=2
2025-08-19T12:26:51.9134647Z Aug 19 12:25:34 pkrvmubgrv54qmi agentservice[2434]: 2025/08/19 12:25:34 INFO ProtectedPids err=<nil> pids=map[2734:2434]
2025-08-19T12:26:51.9135376Z Aug 19 12:25:34 pkrvmubgrv54qmi agentservice[2434]: 2025/08/19 12:25:34 INFO ProtectedBPFIDs freezed ids="[10 4 8 11 9]"
2025-08-19T12:26:51.9136519Z Aug 19 12:25:34 pkrvmubgrv54qmi agentservice[2434]: 2025/08/19 12:25:34 INFO Write protected inodes="map[509:/etc/systemd/resolved.conf 996:/etc/resolv.conf 1643:/etc/sudoers.d/runner 17725:/proc/2007/mem 17726:/proc/1992/mem 3189531:/etc/docker/daemon.json]" freezeErr=<nil>
2025-08-19T12:26:51.9137784Z Aug 19 12:25:34 pkrvmubgrv54qmi agentservice[2434]: 2025/08/19 12:25:34 INFO Linking completed
2025-08-19T12:26:51.9138321Z Aug 19 12:25:34 pkrvmubgrv54qmi agentservice[2434]: 2025/08/19 12:25:34 INFO Armour engaged
2025-08-19T12:26:51.9138612Z 
2025-08-19T12:26:51.9192535Z Cleaning up orphan processes
