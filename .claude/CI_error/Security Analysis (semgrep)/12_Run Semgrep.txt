2025-08-19T12:26:12.8255790Z ##[group]Run semgrep/semgrep-action@v1
2025-08-19T12:26:12.8256101Z with:
2025-08-19T12:26:12.8256371Z   config: p/security-audit p/secrets p/golang p/docker p/kubernetes
2025-08-19T12:26:12.8256709Z env:
2025-08-19T12:26:12.8256865Z   GO_VERSION: 1.24
2025-08-19T12:26:12.8257048Z   REGISTRY: ghcr.io
2025-08-19T12:26:12.8257248Z   IMAGE_NAME: nephoran/conductor-loop
2025-08-19T12:26:12.8257493Z   SECURITY_SCAN_LEVEL: standard
2025-08-19T12:26:12.8257936Z   SEMGREP_APP_TOKEN: 
2025-08-19T12:26:12.8258119Z ##[endgroup]
2025-08-19T12:26:12.8359984Z ##[command]/usr/bin/docker run --name returntocorpsemgrepagentv1_847c53 --label 903624 --workdir /github/workspace --rm -e "GO_VERSION" -e "REGISTRY" -e "IMAGE_NAME" -e "SECURITY_SCAN_LEVEL" -e "SEMGREP_APP_TOKEN" -e "INPUT_CONFIG" -e "INPUT_PUBLISHTOKEN" -e "HOME" -e "GITHUB_JOB" -e "GITHUB_REF" -e "GITHUB_SHA" -e "GITHUB_REPOSITORY" -e "GITHUB_REPOSITORY_OWNER" -e "GITHUB_REPOSITORY_OWNER_ID" -e "GITHUB_RUN_ID" -e "GITHUB_RUN_NUMBER" -e "GITHUB_RETENTION_DAYS" -e "GITHUB_RUN_ATTEMPT" -e "GITHUB_ACTOR_ID" -e "GITHUB_ACTOR" -e "GITHUB_WORKFLOW" -e "GITHUB_HEAD_REF" -e "GITHUB_BASE_REF" -e "GITHUB_EVENT_NAME" -e "GITHUB_SERVER_URL" -e "GITHUB_API_URL" -e "GITHUB_GRAPHQL_URL" -e "GITHUB_REF_NAME" -e "GITHUB_REF_PROTECTED" -e "GITHUB_REF_TYPE" -e "GITHUB_WORKFLOW_REF" -e "GITHUB_WORKFLOW_SHA" -e "GITHUB_REPOSITORY_ID" -e "GITHUB_TRIGGERING_ACTOR" -e "GITHUB_WORKSPACE" -e "GITHUB_ACTION" -e "GITHUB_EVENT_PATH" -e "GITHUB_ACTION_REPOSITORY" -e "GITHUB_ACTION_REF" -e "GITHUB_PATH" -e "GITHUB_ENV" -e "GITHUB_STEP_SUMMARY" -e "GITHUB_STATE" -e "GITHUB_OUTPUT" -e "RUNNER_OS" -e "RUNNER_ARCH" -e "RUNNER_NAME" -e "RUNNER_ENVIRONMENT" -e "RUNNER_TOOL_CACHE" -e "RUNNER_TEMP" -e "RUNNER_WORKSPACE" -e "ACTIONS_RUNTIME_URL" -e "ACTIONS_RUNTIME_TOKEN" -e "ACTIONS_CACHE_URL" -e "ACTIONS_RESULTS_URL" -e GITHUB_ACTIONS=true -e CI=true -v "/var/run/docker.sock":"/var/run/docker.sock" -v "/home/runner/work/_temp/_github_home":"/github/home" -v "/home/runner/work/_temp/_github_workflow":"/github/workflow" -v "/home/runner/work/_temp/_runner_file_commands":"/github/file_commands" -v "/home/runner/work/nephoran-intent-operator/nephoran-intent-operator":"/github/workspace" returntocorp/semgrep-agent:v1
2025-08-19T12:26:16.4552654Z === Running: SEMGREP_RULES="p/security-audit p/secrets p/golang p/docker p/kubernetes" semgrep ci
2025-08-19T12:26:17.2742326Z                   
2025-08-19T12:26:17.2742691Z                   
2025-08-19T12:26:17.2743442Z ┌────────────────┐
2025-08-19T12:26:17.2743976Z │ Debugging Info │
2025-08-19T12:26:17.2744331Z └────────────────┘
2025-08-19T12:26:17.2746456Z                   
2025-08-19T12:26:17.2746847Z   SCAN ENVIRONMENT
2025-08-19T12:26:17.2768731Z   versions    - semgrep 1.36.0 on python 3.11.4                                
2025-08-19T12:26:17.2769704Z   environment - running in environment github-actions, triggering event is push
2025-08-19T12:26:18.9138854Z                
2025-08-19T12:26:18.9139310Z                
2025-08-19T12:26:18.9139769Z ┌─────────────┐
2025-08-19T12:26:18.9140083Z │ Scan Status │
2025-08-19T12:26:18.9140338Z └─────────────┘
2025-08-19T12:26:20.2737842Z   Scanning 2497 files tracked by git with 313 Code rules:
2025-08-19T12:26:20.2932583Z                                                                                 
2025-08-19T12:26:20.2933250Z   Language      Rules   Files          Origin      Rules                        
2025-08-19T12:26:20.2934249Z  ─────────────────────────────        ───────────────────                       
2025-08-19T12:26:20.2934718Z   <multilang>      38    4066          Community     313                        
2025-08-19T12:26:20.2935170Z   go               52     721                                                   
2025-08-19T12:26:20.2935569Z   yaml             13     525                                                   
2025-08-19T12:26:20.2935975Z   json              1     109                                                   
2025-08-19T12:26:20.2936383Z   python           77      20                                                   
2025-08-19T12:26:20.2937496Z   terraform         6      10                                                   
2025-08-19T12:26:20.2937958Z   dockerfile        7       3                                                   
2025-08-19T12:26:20.2938372Z   js               23       1                                                   
2025-08-19T12:26:20.2939533Z                                                                                 
2025-08-19T12:26:49.1679228Z                               
2025-08-19T12:26:49.1681411Z                               
2025-08-19T12:26:49.1682338Z ┌────────────────────────────┐
2025-08-19T12:26:49.1682822Z │ 318 Blocking Code Findings │
2025-08-19T12:26:49.1683369Z └────────────────────────────┘
2025-08-19T12:26:49.1684420Z                                          
2025-08-19T12:26:49.1685024Z     .claude/hooks/post_write_validate.py 
2025-08-19T12:26:49.1686062Z        python.lang.security.audit.subprocess-shell-true.subprocess-shell-true   
2025-08-19T12:26:49.1687302Z           Found 'subprocess' function 'check_output' with 'shell=True'. This is 
2025-08-19T12:26:49.1688281Z   dangerous because this                                                        
2025-08-19T12:26:49.1690744Z           call will spawn the command using a shell process. Doing so propagates
2025-08-19T12:26:49.1691507Z   current shell                                                                 
2025-08-19T12:26:49.1692509Z           settings and variables, which makes it much easier for a malicious    
2025-08-19T12:26:49.1693234Z   actor to execute                                                              
2025-08-19T12:26:49.1694369Z           commands. Use 'shell=False' instead.                                  
2025-08-19T12:26:49.1695390Z           Details: https://sg.run/J92w                                          
2025-08-19T12:26:49.1697299Z                                                                                 
2025-08-19T12:26:49.1698265Z            ▶▶┆ Autofix ▶ False
2025-08-19T12:26:49.1699311Z            22┆ out = subprocess.check_output(cmd, stderr=subprocess.STDOUT,     
2025-08-19T12:26:49.1700097Z   text=True, shell=True)                                                        
2025-08-19T12:26:49.1700689Z                    
2025-08-19T12:26:49.1701034Z     .gitleaks.toml 
2025-08-19T12:26:49.1701906Z        generic.secrets.security.detected-pgp-private-key-block.detected-pgp-priv
2025-08-19T12:26:49.1702811Z   ate-key-block                                                                 
2025-08-19T12:26:49.1703987Z           Something that looks like a PGP private key block is detected. This is
2025-08-19T12:26:49.1704830Z   a potential hardcoded                                                         
2025-08-19T12:26:49.1705896Z           secret that could be leaked if this code is committed. Instead, remove
2025-08-19T12:26:49.1706658Z   this code block from                                                          
2025-08-19T12:26:49.1707643Z           the commit.                                                           
2025-08-19T12:26:49.1708613Z           Details: https://sg.run/ydKd                                          
2025-08-19T12:26:49.1710567Z                                                                                 
2025-08-19T12:26:49.1711722Z            15┆ keywords = ["-----BEGIN PRIVATE KEY-----", "-----BEGIN RSA       
2025-08-19T12:26:49.1712569Z   PRIVATE KEY-----", "-----BEGIN EC PRIVATE KEY-----", "-----BEGIN PGP PRIVATE  
2025-08-19T12:26:49.1713319Z   KEY BLOCK-----"]                                                              
2025-08-19T12:26:49.1714187Z                                  
2025-08-19T12:26:49.1714649Z     archive/test-deployment.yaml 
2025-08-19T12:26:49.1715553Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.1716738Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.1717544Z   they  are properly                                                            
2025-08-19T12:26:49.1718940Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.1719755Z   vulnerability is when a                                                       
2025-08-19T12:26:49.1720815Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.1721880Z   could allow an attacker to                                                    
2025-08-19T12:26:49.1722923Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.1723687Z   recommended to  add a                                                         
2025-08-19T12:26:49.1724890Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.1725665Z   set to `true`. This                                                           
2025-08-19T12:26:49.1726673Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.1727479Z   damage that could be                                                          
2025-08-19T12:26:49.1728502Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.1729281Z   container in your                                                             
2025-08-19T12:26:49.1730289Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.1731124Z   applications are more secure                                                  
2025-08-19T12:26:49.1732299Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.1733346Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.1735390Z                                                                                 
2025-08-19T12:26:49.1736107Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.1736550Z     securityContext:          
2025-08-19T12:26:49.1737011Z       runAsNonRoot: true #    
2025-08-19T12:26:49.1737502Z            17┆ spec:
2025-08-19T12:26:49.1738385Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1739012Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.1739283Z     securityContext:          
2025-08-19T12:26:49.1739594Z       runAsNonRoot: true #    
2025-08-19T12:26:49.1739960Z            76┆ spec:
2025-08-19T12:26:49.1740448Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1741143Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.1741893Z   m-container                                                                   
2025-08-19T12:26:49.1742585Z           Container llm-processor is running with a writable root filesystem.   
2025-08-19T12:26:49.1743195Z   This may allow malicious                                                      
2025-08-19T12:26:49.1744027Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.1744484Z   container files. If an                                                        
2025-08-19T12:26:49.1745227Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.1745780Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.1746476Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.1747078Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.1748187Z                                                                                 
2025-08-19T12:26:49.1748598Z            19┆ - name: llm-processor
2025-08-19T12:26:49.1749048Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1749701Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.1750573Z   m-container                                                                   
2025-08-19T12:26:49.1751853Z           Container nephio-bridge is running with a writable root filesystem.   
2025-08-19T12:26:49.1752678Z   This may allow malicious                                                      
2025-08-19T12:26:49.1753880Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.1754707Z   container files. If an                                                        
2025-08-19T12:26:49.1756032Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.1756896Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.1758037Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.1759097Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.1761119Z                                                                                 
2025-08-19T12:26:49.1761915Z            79┆ - name: nephio-bridge
2025-08-19T12:26:49.1762467Z                        
2025-08-19T12:26:49.1762863Z     cmd/a1-sim/main.go 
2025-08-19T12:26:49.1763660Z        go.lang.security.audit.net.use-tls.use-tls                               
2025-08-19T12:26:49.1765008Z           Found an HTTP server without TLS. Use 'http.ListenAndServeTLS'        
2025-08-19T12:26:49.1765819Z   instead. See                                                                  
2025-08-19T12:26:49.1766900Z           https://golang.org/pkg/net/http/#ListenAndServeTLS for more           
2025-08-19T12:26:49.1767721Z   information.                                                                  
2025-08-19T12:26:49.1768739Z           Details: https://sg.run/dKbY                                          
2025-08-19T12:26:49.1770778Z                                                                                 
2025-08-19T12:26:49.1771906Z            ▶▶┆ Autofix ▶ http.ListenAndServeTLS(addr, certFile, keyFile, mux)
2025-08-19T12:26:49.1772893Z            16┆ log.Fatal(http.ListenAndServe(addr, mux))
2025-08-19T12:26:49.1773568Z                               
2025-08-19T12:26:49.1774144Z     cmd/fcaps-reducer/main.go 
2025-08-19T12:26:49.1774942Z        go.lang.security.audit.net.use-tls.use-tls                               
2025-08-19T12:26:49.1776071Z           Found an HTTP server without TLS. Use 'http.ListenAndServeTLS'        
2025-08-19T12:26:49.1776855Z   instead. See                                                                  
2025-08-19T12:26:49.1777883Z           https://golang.org/pkg/net/http/#ListenAndServeTLS for more           
2025-08-19T12:26:49.1778668Z   information.                                                                  
2025-08-19T12:26:49.1779787Z           Details: https://sg.run/dKbY                                          
2025-08-19T12:26:49.1781733Z                                                                                 
2025-08-19T12:26:49.1782867Z            ▶▶┆ Autofix ▶ http.ListenAndServeTLS(config.ListenAddr, certFile,    
2025-08-19T12:26:49.1783624Z   keyFile, nil)                                                                 
2025-08-19T12:26:49.1784957Z            62┆ if err := http.ListenAndServe(config.ListenAddr, nil); err != nil
2025-08-19T12:26:49.1785672Z   {                                                                             
2025-08-19T12:26:49.1786355Z                               
2025-08-19T12:26:49.1786802Z     cmd/intent-ingest/main.go 
2025-08-19T12:26:49.1787645Z        go.lang.security.audit.net.use-tls.use-tls                               
2025-08-19T12:26:49.1788815Z           Found an HTTP server without TLS. Use 'http.ListenAndServeTLS'        
2025-08-19T12:26:49.1789592Z   instead. See                                                                  
2025-08-19T12:26:49.1790654Z           https://golang.org/pkg/net/http/#ListenAndServeTLS for more           
2025-08-19T12:26:49.1791738Z   information.                                                                  
2025-08-19T12:26:49.1792731Z           Details: https://sg.run/dKbY                                          
2025-08-19T12:26:49.1795186Z                                                                                 
2025-08-19T12:26:49.1796359Z            ▶▶┆ Autofix ▶ http.ListenAndServeTLS(*addr, certFile, keyFile, mux)
2025-08-19T12:26:49.1797760Z            83┆ log.Fatal(http.ListenAndServe(*addr, mux))
2025-08-19T12:26:49.1798764Z                                                  
2025-08-19T12:26:49.1799346Z     config/default/webhook-deployment-patch.yaml 
2025-08-19T12:26:49.1800319Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.1801463Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.1802224Z   they  are properly                                                            
2025-08-19T12:26:49.1803217Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.1804207Z   vulnerability is when a                                                       
2025-08-19T12:26:49.1805268Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.1806072Z   could allow an attacker to                                                    
2025-08-19T12:26:49.1807131Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.1807930Z   recommended to  add a                                                         
2025-08-19T12:26:49.1809029Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.1809800Z   set to `true`. This                                                           
2025-08-19T12:26:49.1810776Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.1811527Z   damage that could be                                                          
2025-08-19T12:26:49.1812549Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.1813320Z   container in your                                                             
2025-08-19T12:26:49.1814516Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.1815410Z   applications are more secure                                                  
2025-08-19T12:26:49.1816535Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.1817620Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.1819520Z                                                                                 
2025-08-19T12:26:49.1820205Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.1820654Z     securityContext:          
2025-08-19T12:26:49.1821109Z       runAsNonRoot: true #    
2025-08-19T12:26:49.1821621Z             9┆ spec:
2025-08-19T12:26:49.1822454Z                                                
2025-08-19T12:26:49.1823023Z     deployments/auth-resources/deployment.yaml 
2025-08-19T12:26:49.1824340Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.1825574Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.1826367Z   they  are properly                                                            
2025-08-19T12:26:49.1827417Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.1828230Z   vulnerability is when a                                                       
2025-08-19T12:26:49.1829260Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.1830062Z   could allow an attacker to                                                    
2025-08-19T12:26:49.1831105Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.1832234Z   recommended to  add a                                                         
2025-08-19T12:26:49.1833303Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.1834270Z   set to `true`. This                                                           
2025-08-19T12:26:49.1835304Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.1836321Z   damage that could be                                                          
2025-08-19T12:26:49.1837353Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.1838122Z   container in your                                                             
2025-08-19T12:26:49.1839122Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.1839938Z   applications are more secure                                                  
2025-08-19T12:26:49.1841002Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.1842040Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.1844253Z                                                                                 
2025-08-19T12:26:49.1844945Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.1845411Z     securityContext:          
2025-08-19T12:26:49.1845893Z       runAsNonRoot: true #    
2025-08-19T12:26:49.1846395Z            15┆ spec:
2025-08-19T12:26:49.1847125Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1848127Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.1849020Z   m-container                                                                   
2025-08-19T12:26:49.1850059Z           Container auth-service is running with a writable root filesystem.    
2025-08-19T12:26:49.1850914Z   This may allow malicious                                                      
2025-08-19T12:26:49.1852050Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.1852869Z   container files. If an                                                        
2025-08-19T12:26:49.1854115Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.1854942Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.1856030Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.1857100Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.1859016Z                                                                                 
2025-08-19T12:26:49.1859727Z            18┆ - name: auth-service
2025-08-19T12:26:49.1861245Z                                                                        
2025-08-19T12:26:49.1862035Z     deployments/cert-automation/certificate-automation-deployment.yaml 
2025-08-19T12:26:49.1863226Z        yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file   
2025-08-19T12:26:49.1864642Z           Secrets (LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t) should not be stored in
2025-08-19T12:26:49.1865525Z   infrastructure as                                                             
2025-08-19T12:26:49.1866553Z           code files. Use an alternative such as Bitnami Sealed Secrets or KSOPS
2025-08-19T12:26:49.1867367Z   to encrypt Kubernetes                                                         
2025-08-19T12:26:49.1868307Z           Secrets.                                                              
2025-08-19T12:26:49.1869254Z           Details: https://sg.run/KyL6                                          
2025-08-19T12:26:49.1871137Z                                                                                 
2025-08-19T12:26:49.1872237Z           212┆ tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t  # Base64 encoded  
2025-08-19T12:26:49.1873284Z   certificate                                                                   
2025-08-19T12:26:49.1874388Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1875417Z        yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file   
2025-08-19T12:26:49.1876652Z           Secrets (LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t) should not be stored in
2025-08-19T12:26:49.1877969Z   infrastructure as                                                             
2025-08-19T12:26:49.1879065Z           code files. Use an alternative such as Bitnami Sealed Secrets or KSOPS
2025-08-19T12:26:49.1879838Z   to encrypt Kubernetes                                                         
2025-08-19T12:26:49.1880753Z           Secrets.                                                              
2025-08-19T12:26:49.1881694Z           Details: https://sg.run/KyL6                                          
2025-08-19T12:26:49.1883608Z                                                                                 
2025-08-19T12:26:49.1884902Z           213┆ tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t    # Base64 encoded
2025-08-19T12:26:49.1885681Z   private key                                                                   
2025-08-19T12:26:49.1887114Z                                                                   
2025-08-19T12:26:49.1887870Z     deployments/disaster-recovery/backup-recovery-automation.yaml 
2025-08-19T12:26:49.1888942Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.1890090Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.1890863Z   they  are properly                                                            
2025-08-19T12:26:49.1891876Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.1892668Z   vulnerability is when a                                                       
2025-08-19T12:26:49.1893948Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.1894764Z   could allow an attacker to                                                    
2025-08-19T12:26:49.1895790Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.1896565Z   recommended to  add a                                                         
2025-08-19T12:26:49.1897609Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.1898381Z   set to `true`. This                                                           
2025-08-19T12:26:49.1899365Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.1900145Z   damage that could be                                                          
2025-08-19T12:26:49.1901186Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.1901990Z   container in your                                                             
2025-08-19T12:26:49.1903021Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.1904054Z   applications are more secure                                                  
2025-08-19T12:26:49.1905134Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.1906187Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.1908106Z                                                                                 
2025-08-19T12:26:49.1908776Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.1909262Z     securityContext:          
2025-08-19T12:26:49.1909714Z       runAsNonRoot: true #    
2025-08-19T12:26:49.1910191Z           124┆ spec:
2025-08-19T12:26:49.1910891Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1911548Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.1912276Z     securityContext:          
2025-08-19T12:26:49.1912736Z       runAsNonRoot: true #    
2025-08-19T12:26:49.1913255Z           356┆ spec:
2025-08-19T12:26:49.1914134Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1914783Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.1915208Z     securityContext:          
2025-08-19T12:26:49.1915648Z       runAsNonRoot: true #    
2025-08-19T12:26:49.1916391Z           579┆ spec:
2025-08-19T12:26:49.1917121Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1917771Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.1918212Z     securityContext:          
2025-08-19T12:26:49.1918659Z       runAsNonRoot: true #    
2025-08-19T12:26:49.1919159Z           824┆ spec:
2025-08-19T12:26:49.1919844Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1920802Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.1921698Z   m-container                                                                   
2025-08-19T12:26:49.1922746Z           Container weaviate-backup is running with a writable root filesystem. 
2025-08-19T12:26:49.1923532Z   This may allow                                                                
2025-08-19T12:26:49.1924789Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.1925655Z   modify container files.                                                       
2025-08-19T12:26:49.1926708Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.1927481Z   consider using a                                                              
2025-08-19T12:26:49.1928520Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.1929265Z   this.                                                                         
2025-08-19T12:26:49.1930211Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.1932135Z                                                                                 
2025-08-19T12:26:49.1932876Z           128┆ - name: weaviate-backup
2025-08-19T12:26:49.1933672Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1934845Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.1935753Z   m-container                                                                   
2025-08-19T12:26:49.1936775Z           Container config-backup is running with a writable root filesystem.   
2025-08-19T12:26:49.1937594Z   This may allow malicious                                                      
2025-08-19T12:26:49.1938659Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.1939445Z   container files. If an                                                        
2025-08-19T12:26:49.1940496Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.1941331Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.1942399Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.1943459Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.1945536Z                                                                                 
2025-08-19T12:26:49.1946271Z           360┆ - name: config-backup
2025-08-19T12:26:49.1947088Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1948070Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.1948947Z   m-container                                                                   
2025-08-19T12:26:49.1949978Z           Container pitr-controller is running with a writable root filesystem. 
2025-08-19T12:26:49.1950743Z   This may allow                                                                
2025-08-19T12:26:49.1952074Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.1952908Z   modify container files.                                                       
2025-08-19T12:26:49.1954130Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.1954890Z   consider using a                                                              
2025-08-19T12:26:49.1956115Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.1956832Z   this.                                                                         
2025-08-19T12:26:49.1957699Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.1959554Z                                                                                 
2025-08-19T12:26:49.1960267Z           582┆ - name: pitr-controller
2025-08-19T12:26:49.1960830Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1961376Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.1961869Z   m-container                                                                   
2025-08-19T12:26:49.1962423Z           Container backup-validator is running with a writable root filesystem.
2025-08-19T12:26:49.1962844Z   This may allow                                                                
2025-08-19T12:26:49.1963412Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.1964150Z   modify container files.                                                       
2025-08-19T12:26:49.1964842Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.1965364Z   consider using a                                                              
2025-08-19T12:26:49.1966333Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.1967062Z   this.                                                                         
2025-08-19T12:26:49.1968001Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.1969895Z                                                                                 
2025-08-19T12:26:49.1970628Z           828┆ - name: backup-validator
2025-08-19T12:26:49.1971986Z                                                                  
2025-08-19T12:26:49.1972528Z     deployments/disaster-recovery/multi-region-architecture.yaml 
2025-08-19T12:26:49.1973127Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.1973985Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.1974503Z   they  are properly                                                            
2025-08-19T12:26:49.1975066Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.1975518Z   vulnerability is when a                                                       
2025-08-19T12:26:49.1976074Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.1976510Z   could allow an attacker to                                                    
2025-08-19T12:26:49.1977064Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.1977491Z   recommended to  add a                                                         
2025-08-19T12:26:49.1978053Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.1978468Z   set to `true`. This                                                           
2025-08-19T12:26:49.1979010Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.1979423Z   damage that could be                                                          
2025-08-19T12:26:49.1980214Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.1980630Z   container in your                                                             
2025-08-19T12:26:49.1981177Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.1981620Z   applications are more secure                                                  
2025-08-19T12:26:49.1982344Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.1982915Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.1984364Z                                                                                 
2025-08-19T12:26:49.1984900Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.1985154Z     securityContext:          
2025-08-19T12:26:49.1985403Z       runAsNonRoot: true #    
2025-08-19T12:26:49.1985667Z           283┆ spec:
2025-08-19T12:26:49.1986058Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1986405Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.1986639Z     securityContext:          
2025-08-19T12:26:49.1986896Z       runAsNonRoot: true #    
2025-08-19T12:26:49.1987148Z           350┆ spec:
2025-08-19T12:26:49.1987516Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1987850Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.1988091Z     securityContext:          
2025-08-19T12:26:49.1988339Z       runAsNonRoot: true #    
2025-08-19T12:26:49.1988592Z           499┆ spec:
2025-08-19T12:26:49.1988955Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1989465Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.1989946Z   m-container                                                                   
2025-08-19T12:26:49.1990491Z           Container external-dns is running with a writable root filesystem.    
2025-08-19T12:26:49.1990949Z   This may allow malicious                                                      
2025-08-19T12:26:49.1991526Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.1991957Z   container files. If an                                                        
2025-08-19T12:26:49.1992523Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.1992973Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.1993558Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.1994312Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.1995313Z                                                                                 
2025-08-19T12:26:49.1995677Z           286┆ - name: external-dns
2025-08-19T12:26:49.1996088Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.1996623Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.1997090Z   m-container                                                                   
2025-08-19T12:26:49.1997652Z           Container replication-controller is running with a writable root      
2025-08-19T12:26:49.1998109Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.1998701Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.1999148Z   modify container files.                                                       
2025-08-19T12:26:49.1999716Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2000142Z   consider using a                                                              
2025-08-19T12:26:49.2000697Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2001094Z   this.                                                                         
2025-08-19T12:26:49.2001764Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2002757Z                                                                                 
2025-08-19T12:26:49.2003162Z           353┆ - name: replication-controller
2025-08-19T12:26:49.2003592Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2004470Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2004949Z   m-container                                                                   
2025-08-19T12:26:49.2005496Z           Container failover-controller is running with a writable root         
2025-08-19T12:26:49.2005957Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.2006539Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2006999Z   modify container files.                                                       
2025-08-19T12:26:49.2007564Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2007978Z   consider using a                                                              
2025-08-19T12:26:49.2008536Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2008974Z   this.                                                                         
2025-08-19T12:26:49.2009471Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2010476Z                                                                                 
2025-08-19T12:26:49.2010886Z           502┆ - name: failover-controller
2025-08-19T12:26:49.2011328Z                                           
2025-08-19T12:26:49.2011608Z     deployments/edge/edge-cloud-sync.yaml 
2025-08-19T12:26:49.2012132Z        yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escal
2025-08-19T12:26:49.2012590Z   ation                                                                         
2025-08-19T12:26:49.2013116Z           In Kubernetes, each pod runs in its own isolated environment with its 
2025-08-19T12:26:49.2013532Z   own set of security                                                           
2025-08-19T12:26:49.2014316Z           policies. However, certain container images may contain `setuid` or   
2025-08-19T12:26:49.2014769Z   `setgid` binaries that                                                        
2025-08-19T12:26:49.2015336Z           could allow an attacker to perform privilege escalation and gain      
2025-08-19T12:26:49.2015762Z   access to sensitive                                                           
2025-08-19T12:26:49.2016312Z           resources. To mitigate this risk, it's recommended to add a           
2025-08-19T12:26:49.2016748Z   `securityContext` to the                                                      
2025-08-19T12:26:49.2017316Z           container in the pod, with the parameter `allowPrivilegeEscalation`   
2025-08-19T12:26:49.2017735Z   set to `false`. This                                                          
2025-08-19T12:26:49.2018279Z           will prevent the container from running any privileged processes and  
2025-08-19T12:26:49.2018704Z   limit the impact of any                                                       
2025-08-19T12:26:49.2019278Z           potential attacks. By adding the `allowPrivilegeEscalation` parameter 
2025-08-19T12:26:49.2019683Z   to your the                                                                   
2025-08-19T12:26:49.2020214Z           `securityContext`, you can help to ensure that your containerized     
2025-08-19T12:26:49.2020654Z   applications are more                                                         
2025-08-19T12:26:49.2021210Z           secure and less vulnerable to privilege escalation attacks.           
2025-08-19T12:26:49.2021957Z           Details: https://sg.run/ljp6                                          
2025-08-19T12:26:49.2022952Z                                                                                 
2025-08-19T12:26:49.2023362Z            ▶▶┆ Autofix ▶ securityContext:
2025-08-19T12:26:49.2023660Z     allowPrivilegeEscalation: false #    
2025-08-19T12:26:49.2024207Z           271┆ securityContext:
2025-08-19T12:26:49.2024798Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2025310Z        yaml.kubernetes.security.hostnetwork-pod.hostnetwork-pod                 
2025-08-19T12:26:49.2025949Z           Pod may use the node network namespace. This gives the pod access to  
2025-08-19T12:26:49.2026371Z   the loopback device,                                                          
2025-08-19T12:26:49.2026941Z           services listening on localhost, and could be used to snoop on network
2025-08-19T12:26:49.2027361Z   activity of other                                                             
2025-08-19T12:26:49.2027917Z           pods on the same node. Remove the 'hostNetwork' key to disable this   
2025-08-19T12:26:49.2028332Z   functionality.                                                                
2025-08-19T12:26:49.2028853Z           Details: https://sg.run/E51A                                          
2025-08-19T12:26:49.2029844Z                                                                                 
2025-08-19T12:26:49.2030202Z           227┆ hostNetwork: true
2025-08-19T12:26:49.2030609Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2031105Z        yaml.kubernetes.security.hostpid-pod.hostpid-pod                         
2025-08-19T12:26:49.2031714Z           Pod is sharing the host process ID namespace. When paired with ptrace 
2025-08-19T12:26:49.2032123Z   this can be used to                                                           
2025-08-19T12:26:49.2032673Z           escalate privileges outside of the container. Remove the 'hostPID' key
2025-08-19T12:26:49.2033125Z   to disable this                                                               
2025-08-19T12:26:49.2033624Z           functionality.                                                        
2025-08-19T12:26:49.2034433Z           Details: https://sg.run/708R                                          
2025-08-19T12:26:49.2035432Z                                                                                 
2025-08-19T12:26:49.2035809Z           228┆ hostPID: true
2025-08-19T12:26:49.2036207Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2036725Z        yaml.kubernetes.security.privileged-container.privileged-container       
2025-08-19T12:26:49.2037368Z           Container or pod is running in privileged mode. This grants the       
2025-08-19T12:26:49.2037806Z   container the equivalent of                                                   
2025-08-19T12:26:49.2038385Z           root capabilities on the host machine. This can lead to container     
2025-08-19T12:26:49.2038824Z   escapes, privilege                                                            
2025-08-19T12:26:49.2039380Z           escalation, and other security concerns. Remove the 'privileged' key  
2025-08-19T12:26:49.2039805Z   to disable this                                                               
2025-08-19T12:26:49.2040289Z           capability.                                                           
2025-08-19T12:26:49.2040808Z           Details: https://sg.run/Ygr5                                          
2025-08-19T12:26:49.2041800Z                                                                                 
2025-08-19T12:26:49.2042174Z           230┆ - name: metrics-collector
2025-08-19T12:26:49.2042657Z           231┆   image: nephoran/edge-metrics-collector:latest
2025-08-19T12:26:49.2043011Z           232┆   ports:
2025-08-19T12:26:49.2043332Z           233┆   - containerPort: 8080
2025-08-19T12:26:49.2043857Z           234┆     name: metrics
2025-08-19T12:26:49.2044470Z           235┆   env:
2025-08-19T12:26:49.2044771Z           236┆   - name: NODE_NAME
2025-08-19T12:26:49.2045083Z           237┆     valueFrom:
2025-08-19T12:26:49.2045387Z           238┆       fieldRef:
2025-08-19T12:26:49.2045751Z           239┆         fieldPath: spec.nodeName
2025-08-19T12:26:49.2046286Z              [hid 33 additional lines, adjust with --max-lines-per-finding] 
2025-08-19T12:26:49.2047068Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2047701Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2048127Z   they  are properly                                                            
2025-08-19T12:26:49.2048686Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2049126Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2049689Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2050139Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2050694Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2051117Z   recommended to  add a                                                         
2025-08-19T12:26:49.2051680Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2052101Z   set to `true`. This                                                           
2025-08-19T12:26:49.2052640Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2053057Z   damage that could be                                                          
2025-08-19T12:26:49.2053612Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2054304Z   container in your                                                             
2025-08-19T12:26:49.2054865Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2055318Z   applications are more secure                                                  
2025-08-19T12:26:49.2055891Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2056453Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2057456Z                                                                                 
2025-08-19T12:26:49.2057819Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2058063Z     securityContext:          
2025-08-19T12:26:49.2058319Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2058579Z           223┆ spec:
2025-08-19T12:26:49.2058952Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2059298Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2059532Z     securityContext:          
2025-08-19T12:26:49.2059791Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2060046Z           315┆ spec:
2025-08-19T12:26:49.2060409Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2060923Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2061409Z   m-container                                                                   
2025-08-19T12:26:49.2061965Z           Container metrics-collector is running with a writable root           
2025-08-19T12:26:49.2062421Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.2063013Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2063460Z   modify container files.                                                       
2025-08-19T12:26:49.2064129Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2064552Z   consider using a                                                              
2025-08-19T12:26:49.2065281Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2065680Z   this.                                                                         
2025-08-19T12:26:49.2066172Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2067168Z                                                                                 
2025-08-19T12:26:49.2067679Z           230┆ - name: metrics-collector
2025-08-19T12:26:49.2068107Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2068625Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2069091Z   m-container                                                                   
2025-08-19T12:26:49.2069645Z           Container intent-processor is running with a writable root filesystem.
2025-08-19T12:26:49.2070065Z   This may allow                                                                
2025-08-19T12:26:49.2070628Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2071082Z   modify container files.                                                       
2025-08-19T12:26:49.2071643Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2072059Z   consider using a                                                              
2025-08-19T12:26:49.2072615Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2073015Z   this.                                                                         
2025-08-19T12:26:49.2073506Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2074804Z                                                                                 
2025-08-19T12:26:49.2075225Z           318┆ - name: intent-processor
2025-08-19T12:26:49.2075722Z                                                 
2025-08-19T12:26:49.2076055Z     deployments/edge/edge-computing-config.yaml 
2025-08-19T12:26:49.2076576Z        yaml.kubernetes.security.hostnetwork-pod.hostnetwork-pod                 
2025-08-19T12:26:49.2077199Z           Pod may use the node network namespace. This gives the pod access to  
2025-08-19T12:26:49.2077619Z   the loopback device,                                                          
2025-08-19T12:26:49.2078194Z           services listening on localhost, and could be used to snoop on network
2025-08-19T12:26:49.2078620Z   activity of other                                                             
2025-08-19T12:26:49.2079164Z           pods on the same node. Remove the 'hostNetwork' key to disable this   
2025-08-19T12:26:49.2079582Z   functionality.                                                                
2025-08-19T12:26:49.2080103Z           Details: https://sg.run/E51A                                          
2025-08-19T12:26:49.2081108Z                                                                                 
2025-08-19T12:26:49.2081587Z           488┆ hostNetwork: true  # For O-RAN interface access
2025-08-19T12:26:49.2082049Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2082550Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2083167Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2083601Z   they  are properly                                                            
2025-08-19T12:26:49.2084732Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2085234Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2085801Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2086232Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2087006Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2087425Z   recommended to  add a                                                         
2025-08-19T12:26:49.2087990Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2088413Z   set to `true`. This                                                           
2025-08-19T12:26:49.2089096Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2089532Z   damage that could be                                                          
2025-08-19T12:26:49.2090087Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2090512Z   container in your                                                             
2025-08-19T12:26:49.2091055Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2091511Z   applications are more secure                                                  
2025-08-19T12:26:49.2092091Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2092653Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2093668Z                                                                                 
2025-08-19T12:26:49.2094197Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2094449Z     securityContext:          
2025-08-19T12:26:49.2094699Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2094960Z           252┆ spec:
2025-08-19T12:26:49.2095344Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2095693Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2095933Z     securityContext:          
2025-08-19T12:26:49.2096177Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2096437Z           324┆ spec:
2025-08-19T12:26:49.2096800Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2097145Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2097377Z     securityContext:          
2025-08-19T12:26:49.2097626Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2097883Z           411┆ spec:
2025-08-19T12:26:49.2098239Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2098579Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2098813Z     securityContext:          
2025-08-19T12:26:49.2099076Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2099330Z           486┆ spec:
2025-08-19T12:26:49.2099695Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2100482Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2100978Z   m-container                                                                   
2025-08-19T12:26:49.2101535Z           Container discovery is running with a writable root filesystem. This  
2025-08-19T12:26:49.2101967Z   may allow malicious                                                           
2025-08-19T12:26:49.2102551Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2102981Z   container files. If an                                                        
2025-08-19T12:26:49.2103553Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2104238Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2104865Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2105451Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2106466Z                                                                                 
2025-08-19T12:26:49.2106866Z           255┆ - name: discovery
2025-08-19T12:26:49.2107266Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2107784Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2108446Z   m-container                                                                   
2025-08-19T12:26:49.2109039Z           Container tensorflow-serving is running with a writable root          
2025-08-19T12:26:49.2109501Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.2110087Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2110675Z   modify container files.                                                       
2025-08-19T12:26:49.2111244Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2111671Z   consider using a                                                              
2025-08-19T12:26:49.2112234Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2112629Z   this.                                                                         
2025-08-19T12:26:49.2113140Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2114264Z                                                                                 
2025-08-19T12:26:49.2114662Z           330┆ - name: tensorflow-serving
2025-08-19T12:26:49.2115098Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2115622Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2116100Z   m-container                                                                   
2025-08-19T12:26:49.2116660Z           Container pytorch-serve is running with a writable root filesystem.   
2025-08-19T12:26:49.2117111Z   This may allow malicious                                                      
2025-08-19T12:26:49.2117688Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2118125Z   container files. If an                                                        
2025-08-19T12:26:49.2118707Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2119153Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2119743Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2120319Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2121335Z                                                                                 
2025-08-19T12:26:49.2121704Z           357┆ - name: pytorch-serve
2025-08-19T12:26:49.2122118Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2122640Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2123104Z   m-container                                                                   
2025-08-19T12:26:49.2123651Z           Container redis-cache is running with a writable root filesystem. This
2025-08-19T12:26:49.2124344Z   may allow malicious                                                           
2025-08-19T12:26:49.2124925Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2125360Z   container files. If an                                                        
2025-08-19T12:26:49.2125924Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2126385Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2126968Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2127553Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2128557Z                                                                                 
2025-08-19T12:26:49.2128920Z           414┆ - name: redis-cache
2025-08-19T12:26:49.2129327Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2130007Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2130481Z   m-container                                                                   
2025-08-19T12:26:49.2131028Z           Container cache-manager is running with a writable root filesystem.   
2025-08-19T12:26:49.2131475Z   This may allow malicious                                                      
2025-08-19T12:26:49.2132193Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2132623Z   container files. If an                                                        
2025-08-19T12:26:49.2133189Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2133633Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2134350Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2134935Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2135940Z                                                                                 
2025-08-19T12:26:49.2136310Z           434┆ - name: cache-manager
2025-08-19T12:26:49.2136717Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2137231Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2137705Z   m-container                                                                   
2025-08-19T12:26:49.2138250Z           Container near-rt-ric is running with a writable root filesystem. This
2025-08-19T12:26:49.2138678Z   may allow malicious                                                           
2025-08-19T12:26:49.2139248Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2139681Z   container files. If an                                                        
2025-08-19T12:26:49.2140253Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2140705Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2141286Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2141866Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2142882Z                                                                                 
2025-08-19T12:26:49.2143235Z           493┆ - name: near-rt-ric
2025-08-19T12:26:49.2143882Z                                               
2025-08-19T12:26:49.2144206Z     deployments/edge/edge-node-lifecycle.yaml 
2025-08-19T12:26:49.2144737Z        yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escal
2025-08-19T12:26:49.2145190Z   ation                                                                         
2025-08-19T12:26:49.2145721Z           In Kubernetes, each pod runs in its own isolated environment with its 
2025-08-19T12:26:49.2146142Z   own set of security                                                           
2025-08-19T12:26:49.2146695Z           policies. However, certain container images may contain `setuid` or   
2025-08-19T12:26:49.2147136Z   `setgid` binaries that                                                        
2025-08-19T12:26:49.2147703Z           could allow an attacker to perform privilege escalation and gain      
2025-08-19T12:26:49.2148131Z   access to sensitive                                                           
2025-08-19T12:26:49.2148686Z           resources. To mitigate this risk, it's recommended to add a           
2025-08-19T12:26:49.2149118Z   `securityContext` to the                                                      
2025-08-19T12:26:49.2149688Z           container in the pod, with the parameter `allowPrivilegeEscalation`   
2025-08-19T12:26:49.2150107Z   set to `false`. This                                                          
2025-08-19T12:26:49.2150803Z           will prevent the container from running any privileged processes and  
2025-08-19T12:26:49.2151230Z   limit the impact of any                                                       
2025-08-19T12:26:49.2151804Z           potential attacks. By adding the `allowPrivilegeEscalation` parameter 
2025-08-19T12:26:49.2152216Z   to your the                                                                   
2025-08-19T12:26:49.2152877Z           `securityContext`, you can help to ensure that your containerized     
2025-08-19T12:26:49.2153319Z   applications are more                                                         
2025-08-19T12:26:49.2154174Z           secure and less vulnerable to privilege escalation attacks.           
2025-08-19T12:26:49.2154754Z           Details: https://sg.run/ljp6                                          
2025-08-19T12:26:49.2155761Z                                                                                 
2025-08-19T12:26:49.2156185Z            ▶▶┆ Autofix ▶ securityContext:
2025-08-19T12:26:49.2156491Z     allowPrivilegeEscalation: false #    
2025-08-19T12:26:49.2156828Z           478┆ securityContext:
2025-08-19T12:26:49.2157236Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2157744Z        yaml.kubernetes.security.hostnetwork-pod.hostnetwork-pod                 
2025-08-19T12:26:49.2158380Z           Pod may use the node network namespace. This gives the pod access to  
2025-08-19T12:26:49.2158809Z   the loopback device,                                                          
2025-08-19T12:26:49.2159376Z           services listening on localhost, and could be used to snoop on network
2025-08-19T12:26:49.2159805Z   activity of other                                                             
2025-08-19T12:26:49.2160350Z           pods on the same node. Remove the 'hostNetwork' key to disable this   
2025-08-19T12:26:49.2160764Z   functionality.                                                                
2025-08-19T12:26:49.2161295Z           Details: https://sg.run/E51A                                          
2025-08-19T12:26:49.2162299Z                                                                                 
2025-08-19T12:26:49.2162648Z           442┆ hostNetwork: true
2025-08-19T12:26:49.2163046Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2163552Z        yaml.kubernetes.security.hostpid-pod.hostpid-pod                         
2025-08-19T12:26:49.2164464Z           Pod is sharing the host process ID namespace. When paired with ptrace 
2025-08-19T12:26:49.2164881Z   this can be used to                                                           
2025-08-19T12:26:49.2165433Z           escalate privileges outside of the container. Remove the 'hostPID' key
2025-08-19T12:26:49.2165856Z   to disable this                                                               
2025-08-19T12:26:49.2166357Z           functionality.                                                        
2025-08-19T12:26:49.2166887Z           Details: https://sg.run/708R                                          
2025-08-19T12:26:49.2167890Z                                                                                 
2025-08-19T12:26:49.2168228Z           443┆ hostPID: true
2025-08-19T12:26:49.2168624Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2169145Z        yaml.kubernetes.security.privileged-container.privileged-container       
2025-08-19T12:26:49.2169783Z           Container or pod is running in privileged mode. This grants the       
2025-08-19T12:26:49.2170235Z   container the equivalent of                                                   
2025-08-19T12:26:49.2170815Z           root capabilities on the host machine. This can lead to container     
2025-08-19T12:26:49.2171249Z   escapes, privilege                                                            
2025-08-19T12:26:49.2171811Z           escalation, and other security concerns. Remove the 'privileged' key  
2025-08-19T12:26:49.2172439Z   to disable this                                                               
2025-08-19T12:26:49.2172942Z           capability.                                                           
2025-08-19T12:26:49.2173454Z           Details: https://sg.run/Ygr5                                          
2025-08-19T12:26:49.2174605Z                                                                                 
2025-08-19T12:26:49.2175200Z           445┆ - name: health-monitor
2025-08-19T12:26:49.2175654Z           446┆   image: nephoran/edge-health-monitor:latest
2025-08-19T12:26:49.2175993Z           447┆   ports:
2025-08-19T12:26:49.2176315Z           448┆   - containerPort: 8080
2025-08-19T12:26:49.2176643Z           449┆     name: metrics
2025-08-19T12:26:49.2176904Z           450┆   env:
2025-08-19T12:26:49.2177192Z           451┆   - name: NODE_NAME
2025-08-19T12:26:49.2177493Z           452┆     valueFrom:
2025-08-19T12:26:49.2177822Z           453┆       fieldRef:
2025-08-19T12:26:49.2178180Z           454┆         fieldPath: spec.nodeName
2025-08-19T12:26:49.2178713Z              [hid 25 additional lines, adjust with --max-lines-per-finding] 
2025-08-19T12:26:49.2179285Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2179925Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2180376Z   they  are properly                                                            
2025-08-19T12:26:49.2180940Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2181384Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2181955Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2182395Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2182969Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2183391Z   recommended to  add a                                                         
2025-08-19T12:26:49.2184078Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2184502Z   set to `true`. This                                                           
2025-08-19T12:26:49.2185060Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2209412Z   damage that could be                                                          
2025-08-19T12:26:49.2210534Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2211254Z   container in your                                                             
2025-08-19T12:26:49.2212352Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2212856Z   applications are more secure                                                  
2025-08-19T12:26:49.2213455Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2214245Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2215237Z                                                                                 
2025-08-19T12:26:49.2215657Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2215917Z     securityContext:          
2025-08-19T12:26:49.2216173Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2216434Z            64┆ spec:
2025-08-19T12:26:49.2216829Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2217176Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2217411Z     securityContext:          
2025-08-19T12:26:49.2217652Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2217905Z           438┆ spec:
2025-08-19T12:26:49.2218259Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2219040Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2219528Z   m-container                                                                   
2025-08-19T12:26:49.2220071Z           Container node-manager is running with a writable root filesystem.    
2025-08-19T12:26:49.2220515Z   This may allow malicious                                                      
2025-08-19T12:26:49.2221233Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2221675Z   container files. If an                                                        
2025-08-19T12:26:49.2222235Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2222673Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2223262Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2224044Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2225073Z                                                                                 
2025-08-19T12:26:49.2225474Z            67┆ - name: node-manager
2025-08-19T12:26:49.2225895Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2226419Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2226911Z   m-container                                                                   
2025-08-19T12:26:49.2227472Z           Container health-monitor is running with a writable root filesystem.  
2025-08-19T12:26:49.2227889Z   This may allow                                                                
2025-08-19T12:26:49.2228454Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2228893Z   modify container files.                                                       
2025-08-19T12:26:49.2229473Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2229904Z   consider using a                                                              
2025-08-19T12:26:49.2230462Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2230856Z   this.                                                                         
2025-08-19T12:26:49.2231355Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2232356Z                                                                                 
2025-08-19T12:26:49.2232721Z           445┆ - name: health-monitor
2025-08-19T12:26:49.2233272Z                                                       
2025-08-19T12:26:49.2233609Z     deployments/examples/llm-processor-corrected.yaml 
2025-08-19T12:26:49.2234370Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2234993Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2235417Z   they  are properly                                                            
2025-08-19T12:26:49.2235965Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2236390Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2236943Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2237383Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2237931Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2238346Z   recommended to  add a                                                         
2025-08-19T12:26:49.2238899Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2239305Z   set to `true`. This                                                           
2025-08-19T12:26:49.2240294Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2240716Z   damage that could be                                                          
2025-08-19T12:26:49.2241268Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2241694Z   container in your                                                             
2025-08-19T12:26:49.2242406Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2242857Z   applications are more secure                                                  
2025-08-19T12:26:49.2243425Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2244208Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2245210Z                                                                                 
2025-08-19T12:26:49.2245596Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2245845Z     securityContext:          
2025-08-19T12:26:49.2246092Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2246356Z            18┆ spec:
2025-08-19T12:26:49.2246727Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2247246Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2247952Z   m-container                                                                   
2025-08-19T12:26:49.2248514Z           Container llm-processor is running with a writable root filesystem.   
2025-08-19T12:26:49.2248953Z   This may allow malicious                                                      
2025-08-19T12:26:49.2249530Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2249954Z   container files. If an                                                        
2025-08-19T12:26:49.2250632Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2251204Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2251800Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2252384Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2253382Z                                                                                 
2025-08-19T12:26:49.2253950Z            20┆ - name: llm-processor
2025-08-19T12:26:49.2254591Z                                                            
2025-08-19T12:26:49.2254964Z     deployments/kubernetes/disaster-recovery-cronjobs.yaml 
2025-08-19T12:26:49.2255517Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2256137Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2256568Z   they  are properly                                                            
2025-08-19T12:26:49.2257132Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2257569Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2258130Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2258559Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2259126Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2259545Z   recommended to  add a                                                         
2025-08-19T12:26:49.2260098Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2260519Z   set to `true`. This                                                           
2025-08-19T12:26:49.2261056Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2261666Z   damage that could be                                                          
2025-08-19T12:26:49.2262210Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2262637Z   container in your                                                             
2025-08-19T12:26:49.2263186Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2263951Z   applications are more secure                                                  
2025-08-19T12:26:49.2264542Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2265102Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2266112Z                                                                                 
2025-08-19T12:26:49.2266474Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2266718Z     securityContext:          
2025-08-19T12:26:49.2266974Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2267240Z           200┆ spec:
2025-08-19T12:26:49.2267622Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2267965Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2268200Z     securityContext:          
2025-08-19T12:26:49.2268447Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2268705Z           308┆ spec:
2025-08-19T12:26:49.2269067Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2269414Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2269647Z     securityContext:          
2025-08-19T12:26:49.2269886Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2270141Z           386┆ spec:
2025-08-19T12:26:49.2270497Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2270830Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2271057Z     securityContext:          
2025-08-19T12:26:49.2271305Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2271557Z           464┆ spec:
2025-08-19T12:26:49.2271925Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2272256Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2272484Z     securityContext:          
2025-08-19T12:26:49.2272731Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2272984Z           542┆ spec:
2025-08-19T12:26:49.2273339Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2274089Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2274600Z   m-container                                                                   
2025-08-19T12:26:49.2275151Z           Container dr-backup is running with a writable root filesystem. This  
2025-08-19T12:26:49.2275595Z   may allow malicious                                                           
2025-08-19T12:26:49.2276165Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2276608Z   container files. If an                                                        
2025-08-19T12:26:49.2277176Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2277627Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2278212Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2278794Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2279808Z                                                                                 
2025-08-19T12:26:49.2280167Z           204┆ - name: dr-backup
2025-08-19T12:26:49.2280574Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2281090Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2281559Z   m-container                                                                   
2025-08-19T12:26:49.2282108Z           Container dr-incremental-backup is running with a writable root       
2025-08-19T12:26:49.2282796Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.2283388Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2284055Z   modify container files.                                                       
2025-08-19T12:26:49.2284633Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2285203Z   consider using a                                                              
2025-08-19T12:26:49.2285765Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2286154Z   this.                                                                         
2025-08-19T12:26:49.2286652Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2287658Z                                                                                 
2025-08-19T12:26:49.2288074Z           312┆ - name: dr-incremental-backup
2025-08-19T12:26:49.2288508Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2289022Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2289492Z   m-container                                                                   
2025-08-19T12:26:49.2290032Z           Container dr-test is running with a writable root filesystem. This may
2025-08-19T12:26:49.2290457Z   allow malicious                                                               
2025-08-19T12:26:49.2291018Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2291443Z   container files. If an                                                        
2025-08-19T12:26:49.2292008Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2292450Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2293044Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2293623Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2294821Z                                                                                 
2025-08-19T12:26:49.2295168Z           390┆ - name: dr-test
2025-08-19T12:26:49.2295568Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2296089Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2296550Z   m-container                                                                   
2025-08-19T12:26:49.2297103Z           Container backup-verification is running with a writable root         
2025-08-19T12:26:49.2297558Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.2298144Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2298602Z   modify container files.                                                       
2025-08-19T12:26:49.2299163Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2299581Z   consider using a                                                              
2025-08-19T12:26:49.2300137Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2300536Z   this.                                                                         
2025-08-19T12:26:49.2301042Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2302039Z                                                                                 
2025-08-19T12:26:49.2302429Z           468┆ - name: backup-verification
2025-08-19T12:26:49.2302855Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2303370Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2304239Z   m-container                                                                   
2025-08-19T12:26:49.2304797Z           Container backup-cleanup is running with a writable root filesystem.  
2025-08-19T12:26:49.2305219Z   This may allow                                                                
2025-08-19T12:26:49.2305771Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2306374Z   modify container files.                                                       
2025-08-19T12:26:49.2306946Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2307364Z   consider using a                                                              
2025-08-19T12:26:49.2307935Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2308339Z   this.                                                                         
2025-08-19T12:26:49.2308848Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2309889Z                                                                                 
2025-08-19T12:26:49.2310273Z           546┆ - name: backup-cleanup
2025-08-19T12:26:49.2310795Z                                                   
2025-08-19T12:26:49.2311118Z     deployments/kubernetes/docker-loader-pod.yaml 
2025-08-19T12:26:49.2311672Z        yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escal
2025-08-19T12:26:49.2312119Z   ation                                                                         
2025-08-19T12:26:49.2312645Z           In Kubernetes, each pod runs in its own isolated environment with its 
2025-08-19T12:26:49.2313061Z   own set of security                                                           
2025-08-19T12:26:49.2313615Z           policies. However, certain container images may contain `setuid` or   
2025-08-19T12:26:49.2314277Z   `setgid` binaries that                                                        
2025-08-19T12:26:49.2314849Z           could allow an attacker to perform privilege escalation and gain      
2025-08-19T12:26:49.2315276Z   access to sensitive                                                           
2025-08-19T12:26:49.2315825Z           resources. To mitigate this risk, it's recommended to add a           
2025-08-19T12:26:49.2316276Z   `securityContext` to the                                                      
2025-08-19T12:26:49.2316845Z           container in the pod, with the parameter `allowPrivilegeEscalation`   
2025-08-19T12:26:49.2317261Z   set to `false`. This                                                          
2025-08-19T12:26:49.2317807Z           will prevent the container from running any privileged processes and  
2025-08-19T12:26:49.2318236Z   limit the impact of any                                                       
2025-08-19T12:26:49.2318805Z           potential attacks. By adding the `allowPrivilegeEscalation` parameter 
2025-08-19T12:26:49.2319222Z   to your the                                                                   
2025-08-19T12:26:49.2319758Z           `securityContext`, you can help to ensure that your containerized     
2025-08-19T12:26:49.2320200Z   applications are more                                                         
2025-08-19T12:26:49.2320759Z           secure and less vulnerable to privilege escalation attacks.           
2025-08-19T12:26:49.2321327Z           Details: https://sg.run/ljp6                                          
2025-08-19T12:26:49.2322326Z                                                                                 
2025-08-19T12:26:49.2322737Z            ▶▶┆ Autofix ▶ securityContext:
2025-08-19T12:26:49.2323046Z     allowPrivilegeEscalation: false #    
2025-08-19T12:26:49.2323392Z            10┆ securityContext:
2025-08-19T12:26:49.2324010Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2324542Z        yaml.kubernetes.security.exposing-docker-socket-hostpath.exposing-docker-
2025-08-19T12:26:49.2325216Z   socket-hostpath                                                               
2025-08-19T12:26:49.2325794Z           Exposing host's Docker socket to containers via a volume. The owner of
2025-08-19T12:26:49.2326219Z   this socket is root.                                                          
2025-08-19T12:26:49.2326914Z           Giving someone access to it is equivalent to giving unrestricted root 
2025-08-19T12:26:49.2327338Z   access to your host.                                                          
2025-08-19T12:26:49.2327891Z           Remove 'docker.sock' from hostpath to prevent this.                   
2025-08-19T12:26:49.2328452Z           Details: https://sg.run/v0pR                                          
2025-08-19T12:26:49.2329460Z                                                                                 
2025-08-19T12:26:49.2329801Z            19┆ hostPath:
2025-08-19T12:26:49.2330160Z            20┆   path: /var/run/docker.sock
2025-08-19T12:26:49.2330588Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2331188Z        yaml.kubernetes.security.privileged-container.privileged-container       
2025-08-19T12:26:49.2331836Z           Container or pod is running in privileged mode. This grants the       
2025-08-19T12:26:49.2332277Z   container the equivalent of                                                   
2025-08-19T12:26:49.2332873Z           root capabilities on the host machine. This can lead to container     
2025-08-19T12:26:49.2333314Z   escapes, privilege                                                            
2025-08-19T12:26:49.2334076Z           escalation, and other security concerns. Remove the 'privileged' key  
2025-08-19T12:26:49.2334512Z   to disable this                                                               
2025-08-19T12:26:49.2335004Z           capability.                                                           
2025-08-19T12:26:49.2335534Z           Details: https://sg.run/Ygr5                                          
2025-08-19T12:26:49.2336538Z                                                                                 
2025-08-19T12:26:49.2336924Z             7┆ - name: docker-loader
2025-08-19T12:26:49.2337285Z             8┆   image: docker:latest
2025-08-19T12:26:49.2337724Z             9┆   command: ["/bin/sh", "-c", "sleep 3600"]
2025-08-19T12:26:49.2338110Z            10┆   securityContext:
2025-08-19T12:26:49.2338443Z            11┆     privileged: true
2025-08-19T12:26:49.2338768Z            12┆   volumeMounts:
2025-08-19T12:26:49.2339096Z            13┆   - name: docker-sock
2025-08-19T12:26:49.2339501Z            14┆     mountPath: /var/run/docker.sock
2025-08-19T12:26:49.2339856Z            15┆   - name: host-tmp
2025-08-19T12:26:49.2340207Z            16┆     mountPath: /host-tmp
2025-08-19T12:26:49.2340629Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2341133Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2341771Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2342197Z   they  are properly                                                            
2025-08-19T12:26:49.2342760Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2343211Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2343938Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2344387Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2344945Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2345365Z   recommended to  add a                                                         
2025-08-19T12:26:49.2345925Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2346521Z   set to `true`. This                                                           
2025-08-19T12:26:49.2347064Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2347482Z   damage that could be                                                          
2025-08-19T12:26:49.2348033Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2348774Z   container in your                                                             
2025-08-19T12:26:49.2349343Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2349798Z   applications are more secure                                                  
2025-08-19T12:26:49.2350367Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2350930Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2351936Z                                                                                 
2025-08-19T12:26:49.2352308Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2352552Z     securityContext:          
2025-08-19T12:26:49.2352809Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2353078Z             5┆ spec:
2025-08-19T12:26:49.2353448Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2354221Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2354702Z   m-container                                                                   
2025-08-19T12:26:49.2355258Z           Container docker-loader is running with a writable root filesystem.   
2025-08-19T12:26:49.2355701Z   This may allow malicious                                                      
2025-08-19T12:26:49.2356285Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2356720Z   container files. If an                                                        
2025-08-19T12:26:49.2357294Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2357750Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2358333Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2358914Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2359915Z                                                                                 
2025-08-19T12:26:49.2360304Z             7┆ - name: docker-loader
2025-08-19T12:26:49.2360807Z                                                  
2025-08-19T12:26:49.2361124Z     deployments/kubernetes/image-loader-pod.yaml 
2025-08-19T12:26:49.2361648Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2362268Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2362883Z   they  are properly                                                            
2025-08-19T12:26:49.2363440Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2363636Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2364355Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2364767Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2365108Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2365285Z   recommended to  add a                                                         
2025-08-19T12:26:49.2365634Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2365804Z   set to `true`. This                                                           
2025-08-19T12:26:49.2366154Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2366334Z   damage that could be                                                          
2025-08-19T12:26:49.2366677Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2366853Z   container in your                                                             
2025-08-19T12:26:49.2367197Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2367407Z   applications are more secure                                                  
2025-08-19T12:26:49.2367737Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2368052Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2368818Z                                                                                 
2025-08-19T12:26:49.2369021Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2369138Z     securityContext:          
2025-08-19T12:26:49.2369257Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2369396Z             5┆ spec:
2025-08-19T12:26:49.2369662Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2370013Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2370184Z   m-container                                                                   
2025-08-19T12:26:49.2370543Z           Container image-loader is running with a writable root filesystem.    
2025-08-19T12:26:49.2370735Z   This may allow malicious                                                      
2025-08-19T12:26:49.2371090Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2371270Z   container files. If an                                                        
2025-08-19T12:26:49.2371618Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2371820Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2372179Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2372493Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2373258Z                                                                                 
2025-08-19T12:26:49.2373466Z             7┆ - name: image-loader
2025-08-19T12:26:49.2374026Z                                                          
2025-08-19T12:26:49.2374226Z     deployments/kubernetes/nephio-bridge-deployment.yaml 
2025-08-19T12:26:49.2374561Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2374905Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2375083Z   they  are properly                                                            
2025-08-19T12:26:49.2375580Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2375771Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2376112Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2376310Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2376768Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2376946Z   recommended to  add a                                                         
2025-08-19T12:26:49.2377293Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2377464Z   set to `true`. This                                                           
2025-08-19T12:26:49.2377802Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2377984Z   damage that could be                                                          
2025-08-19T12:26:49.2378328Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2378505Z   container in your                                                             
2025-08-19T12:26:49.2378844Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2379059Z   applications are more secure                                                  
2025-08-19T12:26:49.2379391Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2379707Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2380476Z                                                                                 
2025-08-19T12:26:49.2380660Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2380774Z     securityContext:          
2025-08-19T12:26:49.2380893Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2381039Z            15┆ spec:
2025-08-19T12:26:49.2381301Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2381649Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2381821Z   m-container                                                                   
2025-08-19T12:26:49.2382168Z           Container nephio-bridge is running with a writable root filesystem.   
2025-08-19T12:26:49.2382370Z   This may allow malicious                                                      
2025-08-19T12:26:49.2382729Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2382912Z   container files. If an                                                        
2025-08-19T12:26:49.2383260Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2383460Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2383931Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2384249Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2385021Z                                                                                 
2025-08-19T12:26:49.2385225Z            18┆ - name: nephio-bridge
2025-08-19T12:26:49.2385645Z                                                        
2025-08-19T12:26:49.2385828Z     deployments/kustomize/base/keda/scaledobjects.yaml 
2025-08-19T12:26:49.2386175Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2386519Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2386696Z   they  are properly                                                            
2025-08-19T12:26:49.2387044Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2387388Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2387741Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2387939Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2388274Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2388576Z   recommended to  add a                                                         
2025-08-19T12:26:49.2388929Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2389095Z   set to `true`. This                                                           
2025-08-19T12:26:49.2389431Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2389613Z   damage that could be                                                          
2025-08-19T12:26:49.2389954Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2390135Z   container in your                                                             
2025-08-19T12:26:49.2390480Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2390686Z   applications are more secure                                                  
2025-08-19T12:26:49.2391016Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2391340Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2392111Z                                                                                 
2025-08-19T12:26:49.2392290Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2392399Z     securityContext:          
2025-08-19T12:26:49.2392524Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2392653Z           167┆ spec:
2025-08-19T12:26:49.2392913Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2393276Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2393444Z   m-container                                                                   
2025-08-19T12:26:49.2394103Z           Container indexer is running with a writable root filesystem. This may
2025-08-19T12:26:49.2394321Z   allow malicious                                                               
2025-08-19T12:26:49.2394696Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2394878Z   container files. If an                                                        
2025-08-19T12:26:49.2395227Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2395429Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2395784Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2396109Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2396879Z                                                                                 
2025-08-19T12:26:49.2397065Z           169┆ - name: indexer
2025-08-19T12:26:49.2397556Z                                                              
2025-08-19T12:26:49.2397774Z     deployments/kustomize/base/nephio-bridge/deployment.yaml 
2025-08-19T12:26:49.2398116Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2398462Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2398645Z   they  are properly                                                            
2025-08-19T12:26:49.2398984Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2399173Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2399511Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2399884Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2400216Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2400394Z   recommended to  add a                                                         
2025-08-19T12:26:49.2400941Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2401109Z   set to `true`. This                                                           
2025-08-19T12:26:49.2401444Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2401627Z   damage that could be                                                          
2025-08-19T12:26:49.2401967Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2402139Z   container in your                                                             
2025-08-19T12:26:49.2402488Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2402692Z   applications are more secure                                                  
2025-08-19T12:26:49.2403022Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2403344Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2404245Z                                                                                 
2025-08-19T12:26:49.2404431Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2404541Z     securityContext:          
2025-08-19T12:26:49.2404667Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2404799Z            16┆ spec:
2025-08-19T12:26:49.2405062Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2405417Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2405592Z   m-container                                                                   
2025-08-19T12:26:49.2405938Z           Container nephio-bridge is running with a writable root filesystem.   
2025-08-19T12:26:49.2406139Z   This may allow malicious                                                      
2025-08-19T12:26:49.2406488Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2406676Z   container files. If an                                                        
2025-08-19T12:26:49.2407030Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2407224Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2407577Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2407890Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2408658Z                                                                                 
2025-08-19T12:26:49.2408865Z            19┆ - name: nephio-bridge
2025-08-19T12:26:49.2409544Z                                                                         
2025-08-19T12:26:49.2409811Z     deployments/kustomize/base/optimized-hpa/enhanced-keda-scaling.yaml 
2025-08-19T12:26:49.2410143Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2410489Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2410672Z   they  are properly                                                            
2025-08-19T12:26:49.2411013Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2411201Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2411548Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2411902Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2412253Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2412443Z   recommended to  add a                                                         
2025-08-19T12:26:49.2412789Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2413076Z   set to `true`. This                                                           
2025-08-19T12:26:49.2413412Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2413596Z   damage that could be                                                          
2025-08-19T12:26:49.2414045Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2414220Z   container in your                                                             
2025-08-19T12:26:49.2414564Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2414776Z   applications are more secure                                                  
2025-08-19T12:26:49.2415110Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2415432Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2416196Z                                                                                 
2025-08-19T12:26:49.2416387Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2416500Z     securityContext:          
2025-08-19T12:26:49.2416619Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2416749Z           253┆ spec:
2025-08-19T12:26:49.2417011Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2417369Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2417545Z   m-container                                                                   
2025-08-19T12:26:49.2417910Z           Container optimizer is running with a writable root filesystem. This  
2025-08-19T12:26:49.2418101Z   may allow malicious                                                           
2025-08-19T12:26:49.2418456Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2418638Z   container files. If an                                                        
2025-08-19T12:26:49.2419006Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2419203Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2419561Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2419879Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2420666Z                                                                                 
2025-08-19T12:26:49.2420850Z           255┆ - name: optimizer
2025-08-19T12:26:49.2421276Z                                                        
2025-08-19T12:26:49.2421458Z     deployments/kustomize/base/rag-api/deployment.yaml 
2025-08-19T12:26:49.2421799Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2422141Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2422327Z   they  are properly                                                            
2025-08-19T12:26:49.2422673Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2422862Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2423206Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2423402Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2423877Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2424229Z   recommended to  add a                                                         
2025-08-19T12:26:49.2424584Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2424752Z   set to `true`. This                                                           
2025-08-19T12:26:49.2425090Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2425390Z   damage that could be                                                          
2025-08-19T12:26:49.2425734Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2425909Z   container in your                                                             
2025-08-19T12:26:49.2426248Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2426462Z   applications are more secure                                                  
2025-08-19T12:26:49.2426803Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2427121Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2427895Z                                                                                 
2025-08-19T12:26:49.2428084Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2428202Z     securityContext:          
2025-08-19T12:26:49.2428333Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2428465Z            16┆ spec:
2025-08-19T12:26:49.2428733Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2429086Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2429257Z   m-container                                                                   
2025-08-19T12:26:49.2429598Z           Container rag-api is running with a writable root filesystem. This may
2025-08-19T12:26:49.2429773Z   allow malicious                                                               
2025-08-19T12:26:49.2430140Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2430321Z   container files. If an                                                        
2025-08-19T12:26:49.2430670Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2430880Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2431237Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2431552Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2432323Z                                                                                 
2025-08-19T12:26:49.2432495Z            18┆ - name: rag-api
2025-08-19T12:26:49.2432986Z                                                              
2025-08-19T12:26:49.2433211Z     deployments/kustomize/llm-processor/base/deployment.yaml 
2025-08-19T12:26:49.2433542Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2434130Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2434333Z   they  are properly                                                            
2025-08-19T12:26:49.2434692Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2434881Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2435223Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2435418Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2435750Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2435927Z   recommended to  add a                                                         
2025-08-19T12:26:49.2436442Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2436609Z   set to `true`. This                                                           
2025-08-19T12:26:49.2436949Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2437131Z   damage that could be                                                          
2025-08-19T12:26:49.2437590Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2437765Z   container in your                                                             
2025-08-19T12:26:49.2438108Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2438314Z   applications are more secure                                                  
2025-08-19T12:26:49.2438646Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2438973Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2439745Z                                                                                 
2025-08-19T12:26:49.2439943Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2440054Z     securityContext:          
2025-08-19T12:26:49.2440180Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2440323Z            14┆ spec:
2025-08-19T12:26:49.2440590Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2440948Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2441239Z   m-container                                                                   
2025-08-19T12:26:49.2441814Z           Container llm-processor is running with a writable root filesystem.   
2025-08-19T12:26:49.2442129Z   This may allow malicious                                                      
2025-08-19T12:26:49.2442757Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2443223Z   container files. If an                                                        
2025-08-19T12:26:49.2444024Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2444492Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2445080Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2445672Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2446993Z                                                                                 
2025-08-19T12:26:49.2447553Z            16┆ - name: llm-processor
2025-08-19T12:26:49.2448389Z                                                                          
2025-08-19T12:26:49.2448839Z     deployments/kustomize/overlays/production/pod-security-policies.yaml 
2025-08-19T12:26:49.2449470Z        yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file   
2025-08-19T12:26:49.2450148Z           Secrets (LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t) should not be stored in
2025-08-19T12:26:49.2450594Z   infrastructure as                                                             
2025-08-19T12:26:49.2451148Z           code files. Use an alternative such as Bitnami Sealed Secrets or KSOPS
2025-08-19T12:26:49.2451585Z   to encrypt Kubernetes                                                         
2025-08-19T12:26:49.2452107Z           Secrets.                                                              
2025-08-19T12:26:49.2452636Z           Details: https://sg.run/KyL6                                          
2025-08-19T12:26:49.2453630Z                                                                                 
2025-08-19T12:26:49.2454246Z            59┆ tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t
2025-08-19T12:26:49.2454721Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2455440Z        yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file   
2025-08-19T12:26:49.2456107Z           Secrets (LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t) should not be stored in
2025-08-19T12:26:49.2456555Z   infrastructure as                                                             
2025-08-19T12:26:49.2457106Z           code files. Use an alternative such as Bitnami Sealed Secrets or KSOPS
2025-08-19T12:26:49.2457667Z   to encrypt Kubernetes                                                         
2025-08-19T12:26:49.2458163Z           Secrets.                                                              
2025-08-19T12:26:49.2458673Z           Details: https://sg.run/KyL6                                          
2025-08-19T12:26:49.2459665Z                                                                                 
2025-08-19T12:26:49.2460152Z            60┆ tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t
2025-08-19T12:26:49.2460765Z                                                        
2025-08-19T12:26:49.2461116Z     deployments/kustomize/rag-api/base/deployment.yaml 
2025-08-19T12:26:49.2461649Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2462271Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2462703Z   they  are properly                                                            
2025-08-19T12:26:49.2463266Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2463864Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2464435Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2464877Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2465439Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2466294Z   recommended to  add a                                                         
2025-08-19T12:26:49.2466875Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2467294Z   set to `true`. This                                                           
2025-08-19T12:26:49.2467833Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2468265Z   damage that could be                                                          
2025-08-19T12:26:49.2468816Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2469238Z   container in your                                                             
2025-08-19T12:26:49.2469784Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2470237Z   applications are more secure                                                  
2025-08-19T12:26:49.2470811Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2471377Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2472379Z                                                                                 
2025-08-19T12:26:49.2472735Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2472987Z     securityContext:          
2025-08-19T12:26:49.2473242Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2473527Z            14┆ spec:
2025-08-19T12:26:49.2474044Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2474567Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2475044Z   m-container                                                                   
2025-08-19T12:26:49.2475587Z           Container rag-api is running with a writable root filesystem. This may
2025-08-19T12:26:49.2476016Z   allow malicious                                                               
2025-08-19T12:26:49.2476734Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2477169Z   container files. If an                                                        
2025-08-19T12:26:49.2477738Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2478187Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2478923Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2479504Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2480506Z                                                                                 
2025-08-19T12:26:49.2480855Z            16┆ - name: rag-api
2025-08-19T12:26:49.2481446Z                                                           
2025-08-19T12:26:49.2481817Z     deployments/monitoring/centralized-logging-stack.yaml 
2025-08-19T12:26:49.2482378Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2483006Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2483431Z   they  are properly                                                            
2025-08-19T12:26:49.2484344Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2484848Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2485422Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2485864Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2486416Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2486837Z   recommended to  add a                                                         
2025-08-19T12:26:49.2487394Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2487822Z   set to `true`. This                                                           
2025-08-19T12:26:49.2488357Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2488773Z   damage that could be                                                          
2025-08-19T12:26:49.2489327Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2489749Z   container in your                                                             
2025-08-19T12:26:49.2490299Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2490745Z   applications are more secure                                                  
2025-08-19T12:26:49.2491317Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2491879Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2492877Z                                                                                 
2025-08-19T12:26:49.2493286Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2493533Z     securityContext:          
2025-08-19T12:26:49.2493940Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2494208Z            67┆ spec:
2025-08-19T12:26:49.2494586Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2494940Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2495174Z     securityContext:          
2025-08-19T12:26:49.2495427Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2495682Z           198┆ spec:
2025-08-19T12:26:49.2496044Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2496374Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2496608Z     securityContext:          
2025-08-19T12:26:49.2496853Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2497116Z           322┆ spec:
2025-08-19T12:26:49.2497475Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2497984Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2498221Z     securityContext:          
2025-08-19T12:26:49.2498464Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2498723Z           852┆ spec:
2025-08-19T12:26:49.2499075Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2499588Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2500199Z   m-container                                                                   
2025-08-19T12:26:49.2500759Z           Container elasticsearch is running with a writable root filesystem.   
2025-08-19T12:26:49.2501207Z   This may allow malicious                                                      
2025-08-19T12:26:49.2501781Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2502215Z   container files. If an                                                        
2025-08-19T12:26:49.2502787Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2503241Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2503972Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2504551Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2505558Z                                                                                 
2025-08-19T12:26:49.2505929Z            81┆ - name: elasticsearch
2025-08-19T12:26:49.2506346Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2506854Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2507324Z   m-container                                                                   
2025-08-19T12:26:49.2507865Z           Container kibana is running with a writable root filesystem. This may 
2025-08-19T12:26:49.2508287Z   allow malicious                                                               
2025-08-19T12:26:49.2508851Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2509317Z   container files. If an                                                        
2025-08-19T12:26:49.2509881Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2510338Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2510923Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2511500Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2512493Z                                                                                 
2025-08-19T12:26:49.2512834Z           200┆ - name: kibana
2025-08-19T12:26:49.2513220Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2513869Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2514345Z   m-container                                                                   
2025-08-19T12:26:49.2514883Z           Container fluentd is running with a writable root filesystem. This may
2025-08-19T12:26:49.2515310Z   allow malicious                                                               
2025-08-19T12:26:49.2515875Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2516306Z   container files. If an                                                        
2025-08-19T12:26:49.2516865Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2517333Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2517919Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2518491Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2519714Z                                                                                 
2025-08-19T12:26:49.2520066Z           330┆ - name: fluentd
2025-08-19T12:26:49.2520455Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2520963Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2521577Z   m-container                                                                   
2025-08-19T12:26:49.2522137Z           Container kibana-setup is running with a writable root filesystem.    
2025-08-19T12:26:49.2522587Z   This may allow malicious                                                      
2025-08-19T12:26:49.2523172Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2523602Z   container files. If an                                                        
2025-08-19T12:26:49.2524316Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2524779Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2525358Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2525931Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2526927Z                                                                                 
2025-08-19T12:26:49.2527301Z           855┆ - name: kibana-setup
2025-08-19T12:26:49.2527905Z                                                           
2025-08-19T12:26:49.2528271Z     deployments/monitoring/complete-monitoring-stack.yaml 
2025-08-19T12:26:49.2528824Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2529446Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2529873Z   they  are properly                                                            
2025-08-19T12:26:49.2530432Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2530874Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2531432Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2531869Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2532436Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2532855Z   recommended to  add a                                                         
2025-08-19T12:26:49.2533421Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2534206Z   set to `true`. This                                                           
2025-08-19T12:26:49.2534781Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2535213Z   damage that could be                                                          
2025-08-19T12:26:49.2535760Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2536185Z   container in your                                                             
2025-08-19T12:26:49.2536730Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2537193Z   applications are more secure                                                  
2025-08-19T12:26:49.2537761Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2538321Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2539320Z                                                                                 
2025-08-19T12:26:49.2539678Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2539923Z     securityContext:          
2025-08-19T12:26:49.2540349Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2540619Z            74┆ spec:
2025-08-19T12:26:49.2540988Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2541332Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2541571Z     securityContext:          
2025-08-19T12:26:49.2541817Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2542081Z           159┆ spec:
2025-08-19T12:26:49.2542622Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2542959Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2543192Z     securityContext:          
2025-08-19T12:26:49.2543442Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2543838Z           295┆ spec:
2025-08-19T12:26:49.2544208Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2544537Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2544773Z     securityContext:          
2025-08-19T12:26:49.2545025Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2545293Z           392┆ spec:
2025-08-19T12:26:49.2545651Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2546160Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2546642Z   m-container                                                                   
2025-08-19T12:26:49.2547196Z           Container prometheus is running with a writable root filesystem. This 
2025-08-19T12:26:49.2547646Z   may allow malicious                                                           
2025-08-19T12:26:49.2548219Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2548647Z   container files. If an                                                        
2025-08-19T12:26:49.2549213Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2549663Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2550260Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2550838Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2551830Z                                                                                 
2025-08-19T12:26:49.2552191Z            77┆ - name: prometheus
2025-08-19T12:26:49.2552591Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2553113Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2553578Z   m-container                                                                   
2025-08-19T12:26:49.2554276Z           Container grafana is running with a writable root filesystem. This may
2025-08-19T12:26:49.2554706Z   allow malicious                                                               
2025-08-19T12:26:49.2555263Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2555708Z   container files. If an                                                        
2025-08-19T12:26:49.2556267Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2556716Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2557293Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2557876Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2558870Z                                                                                 
2025-08-19T12:26:49.2559208Z           161┆ - name: grafana
2025-08-19T12:26:49.2559597Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2560106Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2560575Z   m-container                                                                   
2025-08-19T12:26:49.2561274Z           Container jaeger is running with a writable root filesystem. This may 
2025-08-19T12:26:49.2561695Z   allow malicious                                                               
2025-08-19T12:26:49.2562257Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2562685Z   container files. If an                                                        
2025-08-19T12:26:49.2563383Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2563938Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2564525Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2565101Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2566091Z                                                                                 
2025-08-19T12:26:49.2566433Z           297┆ - name: jaeger
2025-08-19T12:26:49.2566827Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2567339Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2567803Z   m-container                                                                   
2025-08-19T12:26:49.2568356Z           Container alertmanager is running with a writable root filesystem.    
2025-08-19T12:26:49.2568812Z   This may allow malicious                                                      
2025-08-19T12:26:49.2569386Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2569819Z   container files. If an                                                        
2025-08-19T12:26:49.2570378Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2570830Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2571413Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2571993Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2572990Z                                                                                 
2025-08-19T12:26:49.2573345Z           394┆ - name: alertmanager
2025-08-19T12:26:49.2574029Z                                                       
2025-08-19T12:26:49.2574375Z     deployments/monitoring/custom-metrics-config.yaml 
2025-08-19T12:26:49.2574908Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2575527Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2575951Z   they  are properly                                                            
2025-08-19T12:26:49.2576505Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2576944Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2577517Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2577953Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2578507Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2578927Z   recommended to  add a                                                         
2025-08-19T12:26:49.2579493Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2579914Z   set to `true`. This                                                           
2025-08-19T12:26:49.2580448Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2580870Z   damage that could be                                                          
2025-08-19T12:26:49.2581425Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2581993Z   container in your                                                             
2025-08-19T12:26:49.2582540Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2582987Z   applications are more secure                                                  
2025-08-19T12:26:49.2583558Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2584384Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2585377Z                                                                                 
2025-08-19T12:26:49.2585732Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2585969Z     securityContext:          
2025-08-19T12:26:49.2586220Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2586476Z           267┆ spec:
2025-08-19T12:26:49.2586843Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2587354Z        yaml.kubernetes.security.skip-tls-verify-service.skip-tls-verify-service 
2025-08-19T12:26:49.2588014Z           Service is disabling TLS certificate verification when communicating  
2025-08-19T12:26:49.2588446Z   with the server. This                                                         
2025-08-19T12:26:49.2588997Z           makes your HTTPS connections insecure. Remove the                     
2025-08-19T12:26:49.2589462Z   'insecureSkipTLSVerify: true' key to                                          
2025-08-19T12:26:49.2590037Z           secure communication.                                                 
2025-08-19T12:26:49.2590577Z           Details: https://sg.run/zk10                                          
2025-08-19T12:26:49.2591570Z                                                                                 
2025-08-19T12:26:49.2591865Z           329┆ spec:
2025-08-19T12:26:49.2592126Z           330┆   service:
2025-08-19T12:26:49.2592490Z           331┆     name: custom-metrics-apiserver
2025-08-19T12:26:49.2592901Z           332┆     namespace: nephoran-system
2025-08-19T12:26:49.2593289Z           333┆   group: custom.metrics.k8s.io
2025-08-19T12:26:49.2593633Z           334┆   version: v1beta1
2025-08-19T12:26:49.2594123Z           335┆   insecureSkipTLSVerify: true
2025-08-19T12:26:49.2594515Z           336┆   groupPriorityMinimum: 100
2025-08-19T12:26:49.2594877Z           337┆   versionPriority: 100
2025-08-19T12:26:49.2595300Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2595821Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2596290Z   m-container                                                                   
2025-08-19T12:26:49.2596854Z           Container custom-metrics-apiserver is running with a writable root    
2025-08-19T12:26:49.2597293Z   filesystem. This may                                                          
2025-08-19T12:26:49.2597877Z           allow malicious applications to download and run additional payloads, 
2025-08-19T12:26:49.2598324Z   or modify container                                                           
2025-08-19T12:26:49.2598872Z           files. If an application inside a container has to save something     
2025-08-19T12:26:49.2599321Z   temporarily consider using                                                    
2025-08-19T12:26:49.2599901Z           a tmpfs. Add 'readOnlyRootFilesystem: true' to this container to      
2025-08-19T12:26:49.2600342Z   prevent this.                                                                 
2025-08-19T12:26:49.2600894Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2601917Z                                                                                 
2025-08-19T12:26:49.2602347Z           270┆ - name: custom-metrics-apiserver
2025-08-19T12:26:49.2602967Z                                                          
2025-08-19T12:26:49.2603336Z     deployments/monitoring/elasticsearch-deployment.yaml 
2025-08-19T12:26:49.2604203Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2604845Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2605283Z   they  are properly                                                            
2025-08-19T12:26:49.2605838Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2606427Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2606996Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2607436Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2607998Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2608432Z   recommended to  add a                                                         
2025-08-19T12:26:49.2609003Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2609463Z   set to `true`. This                                                           
2025-08-19T12:26:49.2610006Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2610423Z   damage that could be                                                          
2025-08-19T12:26:49.2610985Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2611410Z   container in your                                                             
2025-08-19T12:26:49.2611958Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2612413Z   applications are more secure                                                  
2025-08-19T12:26:49.2612981Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2613543Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2614703Z                                                                                 
2025-08-19T12:26:49.2615071Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2615329Z     securityContext:          
2025-08-19T12:26:49.2615583Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2615847Z           471┆ spec:
2025-08-19T12:26:49.2616235Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2616759Z        yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file   
2025-08-19T12:26:49.2617417Z           Secrets (bmVwaG9yYW4tZWxhc3RpYy0yMDI0) should not be stored in        
2025-08-19T12:26:49.2627683Z   infrastructure as code files.                                                 
2025-08-19T12:26:49.2628418Z           Use an alternative such as Bitnami Sealed Secrets or KSOPS to encrypt 
2025-08-19T12:26:49.2628871Z   Kubernetes Secrets.                                                           
2025-08-19T12:26:49.2629440Z           Details: https://sg.run/KyL6                                          
2025-08-19T12:26:49.2630438Z                                                                                 
2025-08-19T12:26:49.2630959Z           204┆ password: bmVwaG9yYW4tZWxhc3RpYy0yMDI0
2025-08-19T12:26:49.2631435Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2631983Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2632480Z   m-container                                                                   
2025-08-19T12:26:49.2633039Z           Container elasticsearch is running with a writable root filesystem.   
2025-08-19T12:26:49.2633492Z   This may allow malicious                                                      
2025-08-19T12:26:49.2634231Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2634679Z   container files. If an                                                        
2025-08-19T12:26:49.2635489Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2635947Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2636541Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2637125Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2638261Z                                                                                 
2025-08-19T12:26:49.2638656Z            79┆ - name: elasticsearch
2025-08-19T12:26:49.2639084Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2639610Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2640083Z   m-container                                                                   
2025-08-19T12:26:49.2640641Z           Container elasticsearch-exporter is running with a writable root      
2025-08-19T12:26:49.2641107Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.2641704Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2642159Z   modify container files.                                                       
2025-08-19T12:26:49.2642734Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2643163Z   consider using a                                                              
2025-08-19T12:26:49.2643849Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2644253Z   this.                                                                         
2025-08-19T12:26:49.2644748Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2645740Z                                                                                 
2025-08-19T12:26:49.2646157Z           473┆ - name: elasticsearch-exporter
2025-08-19T12:26:49.2646693Z                                                    
2025-08-19T12:26:49.2647035Z     deployments/monitoring/grafana-deployment.yaml 
2025-08-19T12:26:49.2647579Z        yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file   
2025-08-19T12:26:49.2648230Z           Secrets (bmVwaG9yYW4tZ3JhZmFuYQ==) should not be stored in            
2025-08-19T12:26:49.2648700Z   infrastructure as code files. Use                                             
2025-08-19T12:26:49.2649281Z           an alternative such as Bitnami Sealed Secrets or KSOPS to encrypt     
2025-08-19T12:26:49.2649714Z   Kubernetes Secrets.                                                           
2025-08-19T12:26:49.2650258Z           Details: https://sg.run/KyL6                                          
2025-08-19T12:26:49.2651245Z                                                                                 
2025-08-19T12:26:49.2651834Z           151┆ admin-password: bmVwaG9yYW4tZ3JhZmFuYQ== # base64 encoded        
2025-08-19T12:26:49.2652282Z   "nephoran-grafana"                                                            
2025-08-19T12:26:49.2652762Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2653281Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2653912Z   m-container                                                                   
2025-08-19T12:26:49.2654452Z           Container grafana is running with a writable root filesystem. This may
2025-08-19T12:26:49.2654879Z   allow malicious                                                               
2025-08-19T12:26:49.2655443Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2655877Z   container files. If an                                                        
2025-08-19T12:26:49.2656441Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2657064Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2657652Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2658225Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2659216Z                                                                                 
2025-08-19T12:26:49.2659707Z            21┆ - name: grafana
2025-08-19T12:26:49.2660375Z                                                                 
2025-08-19T12:26:49.2660781Z     deployments/monitoring/health-checks-service-discovery.yaml 
2025-08-19T12:26:49.2661349Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2661973Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2662400Z   they  are properly                                                            
2025-08-19T12:26:49.2662965Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2663406Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2664133Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2664576Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2665140Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2665559Z   recommended to  add a                                                         
2025-08-19T12:26:49.2666119Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2666548Z   set to `true`. This                                                           
2025-08-19T12:26:49.2667084Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2667512Z   damage that could be                                                          
2025-08-19T12:26:49.2668065Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2668488Z   container in your                                                             
2025-08-19T12:26:49.2669037Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2669495Z   applications are more secure                                                  
2025-08-19T12:26:49.2670062Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2670898Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2672350Z                                                                                 
2025-08-19T12:26:49.2672879Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2673256Z     securityContext:          
2025-08-19T12:26:49.2673527Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2673942Z           218┆ spec:
2025-08-19T12:26:49.2674466Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2674996Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2675515Z   m-container                                                                   
2025-08-19T12:26:49.2676070Z           Container health-monitor is running with a writable root filesystem.  
2025-08-19T12:26:49.2676510Z   This may allow                                                                
2025-08-19T12:26:49.2677106Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2677790Z   modify container files.                                                       
2025-08-19T12:26:49.2678357Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2678774Z   consider using a                                                              
2025-08-19T12:26:49.2679534Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2679934Z   this.                                                                         
2025-08-19T12:26:49.2680427Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2681413Z                                                                                 
2025-08-19T12:26:49.2681940Z           221┆ - name: health-monitor
2025-08-19T12:26:49.2682419Z                                                
2025-08-19T12:26:49.2682733Z     deployments/monitoring/jaeger-tracing.yaml 
2025-08-19T12:26:49.2683237Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2684007Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2684444Z   they  are properly                                                            
2025-08-19T12:26:49.2685011Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2685451Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2686014Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2686453Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2687011Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2687441Z   recommended to  add a                                                         
2025-08-19T12:26:49.2688001Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2688414Z   set to `true`. This                                                           
2025-08-19T12:26:49.2688952Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2689369Z   damage that could be                                                          
2025-08-19T12:26:49.2689924Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2690348Z   container in your                                                             
2025-08-19T12:26:49.2690893Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2691350Z   applications are more secure                                                  
2025-08-19T12:26:49.2691914Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2692472Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2693446Z                                                                                 
2025-08-19T12:26:49.2693895Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2694150Z     securityContext:          
2025-08-19T12:26:49.2694400Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2694680Z            23┆ spec:
2025-08-19T12:26:49.2695051Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2695397Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2695628Z     securityContext:          
2025-08-19T12:26:49.2695879Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2696136Z           473┆ spec:
2025-08-19T12:26:49.2696495Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2697020Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2697492Z   m-container                                                                   
2025-08-19T12:26:49.2698039Z           Container jaeger is running with a writable root filesystem. This may 
2025-08-19T12:26:49.2698457Z   allow malicious                                                               
2025-08-19T12:26:49.2699016Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2699605Z   container files. If an                                                        
2025-08-19T12:26:49.2700169Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2700629Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2701214Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2701913Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2702895Z                                                                                 
2025-08-19T12:26:49.2703237Z            25┆ - name: jaeger
2025-08-19T12:26:49.2703627Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2704286Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2704761Z   m-container                                                                   
2025-08-19T12:26:49.2705310Z           Container otel-collector is running with a writable root filesystem.  
2025-08-19T12:26:49.2705735Z   This may allow                                                                
2025-08-19T12:26:49.2706292Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2706736Z   modify container files.                                                       
2025-08-19T12:26:49.2707306Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2707723Z   consider using a                                                              
2025-08-19T12:26:49.2708271Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2708666Z   this.                                                                         
2025-08-19T12:26:49.2709191Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2710170Z                                                                                 
2025-08-19T12:26:49.2710550Z           475┆ - name: otel-collector
2025-08-19T12:26:49.2711059Z                                                   
2025-08-19T12:26:49.2711385Z     deployments/monitoring/kibana-deployment.yaml 
2025-08-19T12:26:49.2711917Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2712384Z   m-container                                                                   
2025-08-19T12:26:49.2712931Z           Container kibana is running with a writable root filesystem. This may 
2025-08-19T12:26:49.2713110Z   allow malicious                                                               
2025-08-19T12:26:49.2713461Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2713641Z   container files. If an                                                        
2025-08-19T12:26:49.2714117Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2714321Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2714672Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2714984Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2715731Z                                                                                 
2025-08-19T12:26:49.2715904Z           298┆ - name: kibana
2025-08-19T12:26:49.2716161Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2716517Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2716681Z   m-container                                                                   
2025-08-19T12:26:49.2717015Z           Container setup is running with a writable root filesystem. This may  
2025-08-19T12:26:49.2717195Z   allow malicious                                                               
2025-08-19T12:26:49.2717782Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2717967Z   container files. If an                                                        
2025-08-19T12:26:49.2718321Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2718516Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2719010Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2719330Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2720076Z                                                                                 
2025-08-19T12:26:49.2720246Z           448┆ - name: setup
2025-08-19T12:26:49.2720616Z                                                     
2025-08-19T12:26:49.2720800Z     deployments/monitoring/logstash-deployment.yaml 
2025-08-19T12:26:49.2721151Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2721315Z   m-container                                                                   
2025-08-19T12:26:49.2721657Z           Container logstash is running with a writable root filesystem. This   
2025-08-19T12:26:49.2721838Z   may allow malicious                                                           
2025-08-19T12:26:49.2722193Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2722378Z   container files. If an                                                        
2025-08-19T12:26:49.2722722Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2722914Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2723267Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2723579Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2724461Z                                                                                 
2025-08-19T12:26:49.2724644Z           566┆ - name: logstash
2025-08-19T12:26:49.2725114Z                                                             
2025-08-19T12:26:49.2725331Z     deployments/monitoring/opentelemetry-configuration.yaml 
2025-08-19T12:26:49.2725669Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2726010Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2726188Z   they  are properly                                                            
2025-08-19T12:26:49.2726525Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2726720Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2727057Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2727253Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2727585Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2727763Z   recommended to  add a                                                         
2025-08-19T12:26:49.2728108Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2728283Z   set to `true`. This                                                           
2025-08-19T12:26:49.2728612Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2728789Z   damage that could be                                                          
2025-08-19T12:26:49.2729127Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2729299Z   container in your                                                             
2025-08-19T12:26:49.2729782Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2729990Z   applications are more secure                                                  
2025-08-19T12:26:49.2730322Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2730632Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2731502Z                                                                                 
2025-08-19T12:26:49.2731691Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2731802Z     securityContext:          
2025-08-19T12:26:49.2731922Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2732058Z           185┆ spec:
2025-08-19T12:26:49.2732322Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2732671Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2732836Z   m-container                                                                   
2025-08-19T12:26:49.2733197Z           Container otel-collector is running with a writable root filesystem.  
2025-08-19T12:26:49.2733360Z   This may allow                                                                
2025-08-19T12:26:49.2733828Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2734037Z   modify container files.                                                       
2025-08-19T12:26:49.2734377Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2734551Z   consider using a                                                              
2025-08-19T12:26:49.2734906Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2735052Z   this.                                                                         
2025-08-19T12:26:49.2735361Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2736118Z                                                                                 
2025-08-19T12:26:49.2736320Z           188┆ - name: otel-collector
2025-08-19T12:26:49.2736841Z                                                                 
2025-08-19T12:26:49.2737081Z     deployments/monitoring/operational-runbooks-automation.yaml 
2025-08-19T12:26:49.2737418Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2737753Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2737929Z   they  are properly                                                            
2025-08-19T12:26:49.2738271Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2738460Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2738794Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2738996Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2739324Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2739502Z   recommended to  add a                                                         
2025-08-19T12:26:49.2739850Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2740020Z   set to `true`. This                                                           
2025-08-19T12:26:49.2740352Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2740532Z   damage that could be                                                          
2025-08-19T12:26:49.2740866Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2741039Z   container in your                                                             
2025-08-19T12:26:49.2741529Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2741734Z   applications are more secure                                                  
2025-08-19T12:26:49.2742060Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2742378Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2743252Z                                                                                 
2025-08-19T12:26:49.2743430Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2743539Z     securityContext:          
2025-08-19T12:26:49.2743664Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2743956Z           757┆ spec:
2025-08-19T12:26:49.2744221Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2744400Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2744511Z     securityContext:          
2025-08-19T12:26:49.2744629Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2744780Z           884┆ spec:
2025-08-19T12:26:49.2745044Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2745214Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2745322Z     securityContext:          
2025-08-19T12:26:49.2745443Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2745571Z           920┆ spec:
2025-08-19T12:26:49.2745822Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2746184Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2746349Z   m-container                                                                   
2025-08-19T12:26:49.2746696Z           Container incident-responder is running with a writable root          
2025-08-19T12:26:49.2746893Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.2747251Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2747450Z   modify container files.                                                       
2025-08-19T12:26:49.2747784Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2747963Z   consider using a                                                              
2025-08-19T12:26:49.2748312Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2748462Z   this.                                                                         
2025-08-19T12:26:49.2748782Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2749530Z                                                                                 
2025-08-19T12:26:49.2749744Z           760┆ - name: incident-responder
2025-08-19T12:26:49.2750006Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2750353Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2750526Z   m-container                                                                   
2025-08-19T12:26:49.2750875Z           Container health-check is running with a writable root filesystem.    
2025-08-19T12:26:49.2751067Z   This may allow malicious                                                      
2025-08-19T12:26:49.2751417Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2751604Z   container files. If an                                                        
2025-08-19T12:26:49.2751953Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2752148Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2752500Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2752818Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2753863Z                                                                                 
2025-08-19T12:26:49.2754073Z           887┆ - name: health-check
2025-08-19T12:26:49.2754334Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2754682Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2754847Z   m-container                                                                   
2025-08-19T12:26:49.2755337Z           Container weekly-maintenance is running with a writable root          
2025-08-19T12:26:49.2755532Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.2755885Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2756085Z   modify container files.                                                       
2025-08-19T12:26:49.2756419Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2756598Z   consider using a                                                              
2025-08-19T12:26:49.2756944Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2757091Z   this.                                                                         
2025-08-19T12:26:49.2757400Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2758152Z                                                                                 
2025-08-19T12:26:49.2758368Z           923┆ - name: weekly-maintenance
2025-08-19T12:26:49.2758902Z                                                                  
2025-08-19T12:26:49.2759139Z     deployments/monitoring/performance-benchmarking-grafana.yaml 
2025-08-19T12:26:49.2759490Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2759656Z   m-container                                                                   
2025-08-19T12:26:49.2760000Z           Container grafana is running with a writable root filesystem. This may
2025-08-19T12:26:49.2760179Z   allow malicious                                                               
2025-08-19T12:26:49.2760530Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2760716Z   container files. If an                                                        
2025-08-19T12:26:49.2761075Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2761270Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2761622Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2761935Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2762688Z                                                                                 
2025-08-19T12:26:49.2762857Z           790┆ - name: grafana
2025-08-19T12:26:49.2763435Z                                                                     
2025-08-19T12:26:49.2763867Z     deployments/monitoring/performance-benchmarking-prometheus.yaml 
2025-08-19T12:26:49.2764231Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2764571Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2764760Z   they  are properly                                                            
2025-08-19T12:26:49.2765096Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2765284Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2765627Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2765816Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2766144Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2766489Z   recommended to  add a                                                         
2025-08-19T12:26:49.2766838Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2767005Z   set to `true`. This                                                           
2025-08-19T12:26:49.2767460Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2767646Z   damage that could be                                                          
2025-08-19T12:26:49.2767980Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2768153Z   container in your                                                             
2025-08-19T12:26:49.2768491Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2768696Z   applications are more secure                                                  
2025-08-19T12:26:49.2769028Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2769346Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2770096Z                                                                                 
2025-08-19T12:26:49.2770282Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2770403Z     securityContext:          
2025-08-19T12:26:49.2770524Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2770655Z           475┆ spec:
2025-08-19T12:26:49.2770919Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2771271Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2771437Z   m-container                                                                   
2025-08-19T12:26:49.2771782Z           Container prometheus is running with a writable root filesystem. This 
2025-08-19T12:26:49.2771982Z   may allow malicious                                                           
2025-08-19T12:26:49.2772331Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2772514Z   container files. If an                                                        
2025-08-19T12:26:49.2772862Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2773062Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2773414Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2773934Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2774907Z                                                                                 
2025-08-19T12:26:49.2775110Z           478┆ - name: prometheus
2025-08-19T12:26:49.2775507Z                                                       
2025-08-19T12:26:49.2775738Z     deployments/monitoring/prometheus-deployment.yaml 
2025-08-19T12:26:49.2776088Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2776254Z   m-container                                                                   
2025-08-19T12:26:49.2776605Z           Container prometheus is running with a writable root filesystem. This 
2025-08-19T12:26:49.2776794Z   may allow malicious                                                           
2025-08-19T12:26:49.2777144Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2777333Z   container files. If an                                                        
2025-08-19T12:26:49.2777677Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2777872Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2778230Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2778701Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2779451Z                                                                                 
2025-08-19T12:26:49.2779648Z            26┆ - name: prometheus
2025-08-19T12:26:49.2780090Z                                                           
2025-08-19T12:26:49.2780421Z     deployments/monitoring/sla-monitoring-deployment.yaml 
2025-08-19T12:26:49.2780752Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2781099Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2781278Z   they  are properly                                                            
2025-08-19T12:26:49.2781616Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2781810Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2782156Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2782347Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2782679Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2782858Z   recommended to  add a                                                         
2025-08-19T12:26:49.2783205Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2783375Z   set to `true`. This                                                           
2025-08-19T12:26:49.2783879Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2784065Z   damage that could be                                                          
2025-08-19T12:26:49.2784406Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2784589Z   container in your                                                             
2025-08-19T12:26:49.2784927Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2785141Z   applications are more secure                                                  
2025-08-19T12:26:49.2785479Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2785800Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2786560Z                                                                                 
2025-08-19T12:26:49.2786758Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2786870Z     securityContext:          
2025-08-19T12:26:49.2786990Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2787125Z           128┆ spec:
2025-08-19T12:26:49.2787395Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2787566Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2787683Z     securityContext:          
2025-08-19T12:26:49.2787808Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2787939Z           227┆ spec:
2025-08-19T12:26:49.2788195Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2788369Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2788478Z     securityContext:          
2025-08-19T12:26:49.2788598Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2788741Z           300┆ spec:
2025-08-19T12:26:49.2788994Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2789166Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2789273Z     securityContext:          
2025-08-19T12:26:49.2789403Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2789534Z           378┆ spec:
2025-08-19T12:26:49.2789788Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2789964Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2790072Z     securityContext:          
2025-08-19T12:26:49.2790347Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2790493Z           456┆ spec:
2025-08-19T12:26:49.2790765Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2791119Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2791288Z   m-container                                                                   
2025-08-19T12:26:49.2791645Z           Container sla-controller is running with a writable root filesystem.  
2025-08-19T12:26:49.2791943Z   This may allow                                                                
2025-08-19T12:26:49.2792304Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2792503Z   modify container files.                                                       
2025-08-19T12:26:49.2792841Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2793013Z   consider using a                                                              
2025-08-19T12:26:49.2793377Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2793522Z   this.                                                                         
2025-08-19T12:26:49.2794003Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2794766Z                                                                                 
2025-08-19T12:26:49.2794989Z           131┆ - name: sla-controller
2025-08-19T12:26:49.2795244Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2795593Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2795766Z   m-container                                                                   
2025-08-19T12:26:49.2796112Z           Container metrics-collector is running with a writable root           
2025-08-19T12:26:49.2796309Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.2796673Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2796865Z   modify container files.                                                       
2025-08-19T12:26:49.2797203Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2797381Z   consider using a                                                              
2025-08-19T12:26:49.2797734Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2797878Z   this.                                                                         
2025-08-19T12:26:49.2798197Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2798956Z                                                                                 
2025-08-19T12:26:49.2799168Z           230┆ - name: metrics-collector
2025-08-19T12:26:49.2799425Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2799796Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2799964Z   m-container                                                                   
2025-08-19T12:26:49.2800312Z           Container predictive-analyzer is running with a writable root         
2025-08-19T12:26:49.2800514Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.2800878Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2801071Z   modify container files.                                                       
2025-08-19T12:26:49.2801412Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2801584Z   consider using a                                                              
2025-08-19T12:26:49.2801932Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2802234Z   this.                                                                         
2025-08-19T12:26:49.2802546Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2803306Z                                                                                 
2025-08-19T12:26:49.2803533Z           303┆ - name: predictive-analyzer
2025-08-19T12:26:49.2804038Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2804393Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2804558Z   m-container                                                                   
2025-08-19T12:26:49.2804912Z           Container synthetic-monitor is running with a writable root           
2025-08-19T12:26:49.2805109Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.2805465Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2805677Z   modify container files.                                                       
2025-08-19T12:26:49.2806014Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2806186Z   consider using a                                                              
2025-08-19T12:26:49.2806540Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2806694Z   this.                                                                         
2025-08-19T12:26:49.2807006Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2807767Z                                                                                 
2025-08-19T12:26:49.2807982Z           381┆ - name: synthetic-monitor
2025-08-19T12:26:49.2808237Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2808584Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2808761Z   m-container                                                                   
2025-08-19T12:26:49.2809142Z           Container storage-manager is running with a writable root filesystem. 
2025-08-19T12:26:49.2809308Z   This may allow                                                                
2025-08-19T12:26:49.2809669Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2809871Z   modify container files.                                                       
2025-08-19T12:26:49.2810209Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2810385Z   consider using a                                                              
2025-08-19T12:26:49.2810737Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2810880Z   this.                                                                         
2025-08-19T12:26:49.2811197Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2811964Z                                                                                 
2025-08-19T12:26:49.2812166Z           459┆ - name: storage-manager
2025-08-19T12:26:49.2812612Z                                                           
2025-08-19T12:26:49.2812819Z     deployments/monitoring/structured-logging-config.yaml 
2025-08-19T12:26:49.2813156Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2813498Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2813684Z   they  are properly                                                            
2025-08-19T12:26:49.2814123Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2814318Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2814862Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2815056Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2815386Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2815570Z   recommended to  add a                                                         
2025-08-19T12:26:49.2816038Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2816208Z   set to `true`. This                                                           
2025-08-19T12:26:49.2816546Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2816730Z   damage that could be                                                          
2025-08-19T12:26:49.2817066Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2817240Z   container in your                                                             
2025-08-19T12:26:49.2817591Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2817799Z   applications are more secure                                                  
2025-08-19T12:26:49.2818128Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2818452Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2819223Z                                                                                 
2025-08-19T12:26:49.2819424Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2819541Z     securityContext:          
2025-08-19T12:26:49.2819660Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2819790Z           381┆ spec:
2025-08-19T12:26:49.2820053Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2820408Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2820583Z   m-container                                                                   
2025-08-19T12:26:49.2820923Z           Container fluentd is running with a writable root filesystem. This may
2025-08-19T12:26:49.2821103Z   allow malicious                                                               
2025-08-19T12:26:49.2821453Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2821642Z   container files. If an                                                        
2025-08-19T12:26:49.2821994Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2822190Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2822545Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2822862Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2823623Z                                                                                 
2025-08-19T12:26:49.2824092Z           384┆ - name: fluentd
2025-08-19T12:26:49.2824680Z                                                                 
2025-08-19T12:26:49.2824927Z     deployments/monitoring/validation-dashboard-deployment.yaml 
2025-08-19T12:26:49.2825260Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2825616Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2825803Z   they  are properly                                                            
2025-08-19T12:26:49.2826143Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2826332Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2826680Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2827135Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2827469Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2827654Z   recommended to  add a                                                         
2025-08-19T12:26:49.2828003Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2828292Z   set to `true`. This                                                           
2025-08-19T12:26:49.2828633Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2828810Z   damage that could be                                                          
2025-08-19T12:26:49.2829146Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2829322Z   container in your                                                             
2025-08-19T12:26:49.2829665Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2829877Z   applications are more secure                                                  
2025-08-19T12:26:49.2830209Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2830530Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2831285Z                                                                                 
2025-08-19T12:26:49.2831488Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2831602Z     securityContext:          
2025-08-19T12:26:49.2831721Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2831853Z            19┆ spec:
2025-08-19T12:26:49.2832120Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2832468Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2832635Z   m-container                                                                   
2025-08-19T12:26:49.2833000Z           Container dashboard-provisioner is running with a writable root       
2025-08-19T12:26:49.2833203Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.2833557Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2833899Z   modify container files.                                                       
2025-08-19T12:26:49.2834254Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2834425Z   consider using a                                                              
2025-08-19T12:26:49.2834779Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2834926Z   this.                                                                         
2025-08-19T12:26:49.2835243Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2836001Z                                                                                 
2025-08-19T12:26:49.2836254Z            22┆ - name: dashboard-provisioner
2025-08-19T12:26:49.2836727Z                                                             
2025-08-19T12:26:49.2836944Z     deployments/monitoring/validation-dashboard-export.yaml 
2025-08-19T12:26:49.2837278Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2837622Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2837799Z   they  are properly                                                            
2025-08-19T12:26:49.2838137Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2838331Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2838666Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2838857Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2839355Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2839536Z   recommended to  add a                                                         
2025-08-19T12:26:49.2839882Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2840286Z   set to `true`. This                                                           
2025-08-19T12:26:49.2840626Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2840805Z   damage that could be                                                          
2025-08-19T12:26:49.2841146Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2841320Z   container in your                                                             
2025-08-19T12:26:49.2841660Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2841876Z   applications are more secure                                                  
2025-08-19T12:26:49.2842205Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2842519Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2843277Z                                                                                 
2025-08-19T12:26:49.2843473Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2843585Z     securityContext:          
2025-08-19T12:26:49.2843839Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2843982Z           195┆ spec:
2025-08-19T12:26:49.2844246Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2844594Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2844765Z   m-container                                                                   
2025-08-19T12:26:49.2845123Z           Container dashboard-exporter is running with a writable root          
2025-08-19T12:26:49.2845322Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.2845683Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2845874Z   modify container files.                                                       
2025-08-19T12:26:49.2846220Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2846391Z   consider using a                                                              
2025-08-19T12:26:49.2846743Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2846889Z   this.                                                                         
2025-08-19T12:26:49.2847202Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2847963Z                                                                                 
2025-08-19T12:26:49.2848204Z           198┆ - name: dashboard-exporter
2025-08-19T12:26:49.2848581Z                                                     
2025-08-19T12:26:49.2848753Z     deployments/multi-region/global-state-sync.yaml 
2025-08-19T12:26:49.2849089Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2849434Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2849615Z   they  are properly                                                            
2025-08-19T12:26:49.2849956Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2850149Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2850487Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2850678Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2851173Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2851354Z   recommended to  add a                                                         
2025-08-19T12:26:49.2851702Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2851875Z   set to `true`. This                                                           
2025-08-19T12:26:49.2852336Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2852516Z   damage that could be                                                          
2025-08-19T12:26:49.2852855Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2853026Z   container in your                                                             
2025-08-19T12:26:49.2853363Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2853580Z   applications are more secure                                                  
2025-08-19T12:26:49.2854019Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2854332Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2855101Z                                                                                 
2025-08-19T12:26:49.2855325Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2855433Z     securityContext:          
2025-08-19T12:26:49.2855553Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2855689Z            64┆ spec:
2025-08-19T12:26:49.2855951Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2856298Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2856469Z   m-container                                                                   
2025-08-19T12:26:49.2856815Z           Container synchronizer is running with a writable root filesystem.    
2025-08-19T12:26:49.2857016Z   This may allow malicious                                                      
2025-08-19T12:26:49.2857370Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2857550Z   container files. If an                                                        
2025-08-19T12:26:49.2857905Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2858098Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2858455Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2858772Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2859704Z                                                                                 
2025-08-19T12:26:49.2860053Z            67┆ - name: synchronizer
2025-08-19T12:26:49.2861065Z                                                                 
2025-08-19T12:26:49.2861509Z     deployments/multi-region/kubernetes/base/llm-processor.yaml 
2025-08-19T12:26:49.2862149Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2862463Z   m-container                                                                   
2025-08-19T12:26:49.2863128Z           Container cloud-sql-proxy is running with a writable root filesystem. 
2025-08-19T12:26:49.2863431Z   This may allow                                                                
2025-08-19T12:26:49.2864244Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2864617Z   modify container files.                                                       
2025-08-19T12:26:49.2865265Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2865573Z   consider using a                                                              
2025-08-19T12:26:49.2866262Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2866410Z   this.                                                                         
2025-08-19T12:26:49.2866741Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2867502Z                                                                                 
2025-08-19T12:26:49.2867928Z           397┆ - name: cloud-sql-proxy
2025-08-19T12:26:49.2868695Z                                                                                 
2025-08-19T12:26:49.2868992Z     deployments/multi-region/kubernetes/base/monitoring/multi-region-monitoring.
2025-08-19T12:26:49.2869134Z   yaml                                                                          
2025-08-19T12:26:49.2869469Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2869813Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2870000Z   they  are properly                                                            
2025-08-19T12:26:49.2870344Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2870534Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2870882Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2871079Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2871409Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2871592Z   recommended to  add a                                                         
2025-08-19T12:26:49.2871940Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2872115Z   set to `true`. This                                                           
2025-08-19T12:26:49.2872455Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2872634Z   damage that could be                                                          
2025-08-19T12:26:49.2872978Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2873153Z   container in your                                                             
2025-08-19T12:26:49.2873496Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2873904Z   applications are more secure                                                  
2025-08-19T12:26:49.2874258Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2874578Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2875340Z                                                                                 
2025-08-19T12:26:49.2875535Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2875644Z     securityContext:          
2025-08-19T12:26:49.2875767Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2875898Z           408┆ spec:
2025-08-19T12:26:49.2876166Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2876519Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2876700Z   m-container                                                                   
2025-08-19T12:26:49.2877046Z           Container thanos-query is running with a writable root filesystem.    
2025-08-19T12:26:49.2877238Z   This may allow malicious                                                      
2025-08-19T12:26:49.2877598Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2877781Z   container files. If an                                                        
2025-08-19T12:26:49.2878129Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2878592Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2878952Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2879268Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2880032Z                                                                                 
2025-08-19T12:26:49.2880375Z           411┆ - name: thanos-query
2025-08-19T12:26:49.2881017Z                                                                         
2025-08-19T12:26:49.2881277Z     deployments/multi-region/kubernetes/base/multi-region-services.yaml 
2025-08-19T12:26:49.2881614Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2881954Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2882141Z   they  are properly                                                            
2025-08-19T12:26:49.2882487Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2882677Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2883017Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2883222Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2883550Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2883854Z   recommended to  add a                                                         
2025-08-19T12:26:49.2884214Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2884381Z   set to `true`. This                                                           
2025-08-19T12:26:49.2884718Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2884909Z   damage that could be                                                          
2025-08-19T12:26:49.2885246Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2885420Z   container in your                                                             
2025-08-19T12:26:49.2885758Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2885973Z   applications are more secure                                                  
2025-08-19T12:26:49.2886302Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2886616Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2887378Z                                                                                 
2025-08-19T12:26:49.2887560Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2887672Z     securityContext:          
2025-08-19T12:26:49.2887805Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2887935Z           270┆ spec:
2025-08-19T12:26:49.2888198Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2888552Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2888718Z   m-container                                                                   
2025-08-19T12:26:49.2889068Z           Container health-checker is running with a writable root filesystem.  
2025-08-19T12:26:49.2889232Z   This may allow                                                                
2025-08-19T12:26:49.2889593Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.2889785Z   modify container files.                                                       
2025-08-19T12:26:49.2890122Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.2890297Z   consider using a                                                              
2025-08-19T12:26:49.2890800Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.2890944Z   this.                                                                         
2025-08-19T12:26:49.2891261Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2892140Z                                                                                 
2025-08-19T12:26:49.2892340Z           273┆ - name: health-checker
2025-08-19T12:26:49.2893101Z                                                                                 
2025-08-19T12:26:49.2893394Z     deployments/multi-region/kubernetes/base/weaviate/weaviate-multi-region.yaml
2025-08-19T12:26:49.2893874Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2894051Z   m-container                                                                   
2025-08-19T12:26:49.2894400Z           Container weaviate is running with a writable root filesystem. This   
2025-08-19T12:26:49.2894581Z   may allow malicious                                                           
2025-08-19T12:26:49.2894929Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2895114Z   container files. If an                                                        
2025-08-19T12:26:49.2895466Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2895808Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2896403Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2896872Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2897688Z                                                                                 
2025-08-19T12:26:49.2898017Z           148┆ - name: weaviate
2025-08-19T12:26:49.2898303Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2898764Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2898978Z   m-container                                                                   
2025-08-19T12:26:49.2899325Z           Container backup-agent is running with a writable root filesystem.    
2025-08-19T12:26:49.2899524Z   This may allow malicious                                                      
2025-08-19T12:26:49.2899887Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2900074Z   container files. If an                                                        
2025-08-19T12:26:49.2900422Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2900615Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2900973Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2901292Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2902049Z                                                                                 
2025-08-19T12:26:49.2902258Z           329┆ - name: backup-agent
2025-08-19T12:26:49.2902734Z                                                             
2025-08-19T12:26:49.2902949Z     deployments/multi-region/multi-region-architecture.yaml 
2025-08-19T12:26:49.2903288Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2903628Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2904070Z   they  are properly                                                            
2025-08-19T12:26:49.2904428Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2904620Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2905165Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2905358Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2905691Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2905870Z   recommended to  add a                                                         
2025-08-19T12:26:49.2906380Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2906554Z   set to `true`. This                                                           
2025-08-19T12:26:49.2906892Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2907072Z   damage that could be                                                          
2025-08-19T12:26:49.2907412Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2907592Z   container in your                                                             
2025-08-19T12:26:49.2907928Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2908143Z   applications are more secure                                                  
2025-08-19T12:26:49.2908471Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2908793Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2909595Z                                                                                 
2025-08-19T12:26:49.2909797Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2909908Z     securityContext:          
2025-08-19T12:26:49.2910029Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2910164Z           240┆ spec:
2025-08-19T12:26:49.2910432Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2910794Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2910968Z   m-container                                                                   
2025-08-19T12:26:49.2911316Z           Container cockroachdb is running with a writable root filesystem. This
2025-08-19T12:26:49.2911497Z   may allow malicious                                                           
2025-08-19T12:26:49.2911857Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2912041Z   container files. If an                                                        
2025-08-19T12:26:49.2912389Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2912592Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2912946Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2913257Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2914182Z                                                                                 
2025-08-19T12:26:49.2914380Z           249┆ - name: cockroachdb
2025-08-19T12:26:49.2914865Z                                                              
2025-08-19T12:26:49.2915081Z     deployments/multi-region/region-deployment-template.yaml 
2025-08-19T12:26:49.2915424Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2915763Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2915939Z   they  are properly                                                            
2025-08-19T12:26:49.2916282Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2916470Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2916811Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2917160Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2917491Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2917671Z   recommended to  add a                                                         
2025-08-19T12:26:49.2918023Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2918315Z   set to `true`. This                                                           
2025-08-19T12:26:49.2918654Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2918833Z   damage that could be                                                          
2025-08-19T12:26:49.2919174Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2919346Z   container in your                                                             
2025-08-19T12:26:49.2919686Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2919897Z   applications are more secure                                                  
2025-08-19T12:26:49.2920226Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2920537Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2921300Z                                                                                 
2025-08-19T12:26:49.2921479Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2921586Z     securityContext:          
2025-08-19T12:26:49.2921710Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2921841Z            75┆ spec:
2025-08-19T12:26:49.2922102Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2922273Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2922386Z     securityContext:          
2025-08-19T12:26:49.2922512Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2922640Z           164┆ spec:
2025-08-19T12:26:49.2922900Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2923249Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2923414Z   m-container                                                                   
2025-08-19T12:26:49.2923889Z           Container llm-processor is running with a writable root filesystem.   
2025-08-19T12:26:49.2924096Z   This may allow malicious                                                      
2025-08-19T12:26:49.2924447Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2924627Z   container files. If an                                                        
2025-08-19T12:26:49.2924979Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2925173Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2925532Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2925847Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2926606Z                                                                                 
2025-08-19T12:26:49.2926848Z            94┆ - name: llm-processor
2025-08-19T12:26:49.2927120Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2927467Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2927633Z   m-container                                                                   
2025-08-19T12:26:49.2927977Z           Container weaviate is running with a writable root filesystem. This   
2025-08-19T12:26:49.2928162Z   may allow malicious                                                           
2025-08-19T12:26:49.2928510Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2928838Z   container files. If an                                                        
2025-08-19T12:26:49.2929186Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2929381Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2929735Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2930182Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2930940Z                                                                                 
2025-08-19T12:26:49.2931116Z           173┆ - name: weaviate
2025-08-19T12:26:49.2931558Z                                                          
2025-08-19T12:26:49.2931759Z     deployments/production/oran-complete-deployment.yaml 
2025-08-19T12:26:49.2932107Z        yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file   
2025-08-19T12:26:49.2932473Z           Secrets (LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t) should not be stored in
2025-08-19T12:26:49.2932653Z   infrastructure as                                                             
2025-08-19T12:26:49.2932983Z           code files. Use an alternative such as Bitnami Sealed Secrets or KSOPS
2025-08-19T12:26:49.2933174Z   to encrypt Kubernetes                                                         
2025-08-19T12:26:49.2933452Z           Secrets.                                                              
2025-08-19T12:26:49.2933864Z           Details: https://sg.run/KyL6                                          
2025-08-19T12:26:49.2934627Z                                                                                 
2025-08-19T12:26:49.2935040Z           330┆ tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t  # Replace with    
2025-08-19T12:26:49.2935227Z   actual certificate                                                            
2025-08-19T12:26:49.2935493Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2935850Z        yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file   
2025-08-19T12:26:49.2936206Z           Secrets (LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t) should not be stored in
2025-08-19T12:26:49.2936388Z   infrastructure as                                                             
2025-08-19T12:26:49.2936721Z           code files. Use an alternative such as Bitnami Sealed Secrets or KSOPS
2025-08-19T12:26:49.2936915Z   to encrypt Kubernetes                                                         
2025-08-19T12:26:49.2937187Z           Secrets.                                                              
2025-08-19T12:26:49.2937503Z           Details: https://sg.run/KyL6                                          
2025-08-19T12:26:49.2938260Z                                                                                 
2025-08-19T12:26:49.2938661Z           331┆ tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t  # Replace with    
2025-08-19T12:26:49.2938855Z   actual private key                                                            
2025-08-19T12:26:49.2939108Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2939454Z        yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file   
2025-08-19T12:26:49.2939812Z           Secrets (LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t) should not be stored in
2025-08-19T12:26:49.2939998Z   infrastructure as                                                             
2025-08-19T12:26:49.2940330Z           code files. Use an alternative such as Bitnami Sealed Secrets or KSOPS
2025-08-19T12:26:49.2940515Z   to encrypt Kubernetes                                                         
2025-08-19T12:26:49.2940793Z           Secrets.                                                              
2025-08-19T12:26:49.2941108Z           Details: https://sg.run/KyL6                                          
2025-08-19T12:26:49.2941879Z                                                                                 
2025-08-19T12:26:49.2942435Z           332┆ ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t   # Replace with    
2025-08-19T12:26:49.2942626Z   actual CA certificate                                                         
2025-08-19T12:26:49.2942962Z                                                 
2025-08-19T12:26:49.2943124Z     deployments/security/mtls-certificates.yaml 
2025-08-19T12:26:49.2943583Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2944295Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2944494Z   they  are properly                                                            
2025-08-19T12:26:49.2944842Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2945037Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2945391Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2945582Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2945914Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2946094Z   recommended to  add a                                                         
2025-08-19T12:26:49.2946452Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2946620Z   set to `true`. This                                                           
2025-08-19T12:26:49.2946958Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2947141Z   damage that could be                                                          
2025-08-19T12:26:49.2947481Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2947654Z   container in your                                                             
2025-08-19T12:26:49.2948002Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2948207Z   applications are more secure                                                  
2025-08-19T12:26:49.2948536Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2948858Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2949632Z                                                                                 
2025-08-19T12:26:49.2949842Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2949958Z     securityContext:          
2025-08-19T12:26:49.2950078Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2950210Z           406┆ spec:
2025-08-19T12:26:49.2950481Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2950843Z        yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file   
2025-08-19T12:26:49.2951123Z           Secrets                                                               
2025-08-19T12:26:49.2951421Z   (LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t)
2025-08-19T12:26:49.2951765Z           should not be stored in infrastructure as code files. Use an          
2025-08-19T12:26:49.2951963Z   alternative such as Bitnami                                                   
2025-08-19T12:26:49.2952297Z           Sealed Secrets or KSOPS to encrypt Kubernetes Secrets.                
2025-08-19T12:26:49.2952622Z           Details: https://sg.run/KyL6                                          
2025-08-19T12:26:49.2953386Z                                                                                 
2025-08-19T12:26:49.2953907Z            28┆ tls.crt:                                                         
2025-08-19T12:26:49.2954221Z   LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t  
2025-08-19T12:26:49.2954682Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2955037Z        yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file   
2025-08-19T12:26:49.2955313Z           Secrets                                                               
2025-08-19T12:26:49.2955617Z   (LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCi4uLgotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0t)
2025-08-19T12:26:49.2955953Z           should not be stored in infrastructure as code files. Use an          
2025-08-19T12:26:49.2956343Z   alternative such as Bitnami                                                   
2025-08-19T12:26:49.2956677Z           Sealed Secrets or KSOPS to encrypt Kubernetes Secrets.                
2025-08-19T12:26:49.2956991Z           Details: https://sg.run/KyL6                                          
2025-08-19T12:26:49.2957757Z                                                                                 
2025-08-19T12:26:49.2958119Z            29┆ tls.key:                                                         
2025-08-19T12:26:49.2958436Z   LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCi4uLgotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0t  
2025-08-19T12:26:49.2958696Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2959048Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2959215Z   m-container                                                                   
2025-08-19T12:26:49.2959571Z           Container cert-checker is running with a writable root filesystem.    
2025-08-19T12:26:49.2959775Z   This may allow malicious                                                      
2025-08-19T12:26:49.2960155Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2960483Z   container files. If an                                                        
2025-08-19T12:26:49.2961057Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2961271Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2961637Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2961955Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2962727Z                                                                                 
2025-08-19T12:26:49.2962950Z           409┆ - name: cert-checker
2025-08-19T12:26:49.2963227Z                                           
2025-08-19T12:26:49.2963376Z     deployments/velero/velero-config.yaml 
2025-08-19T12:26:49.2963845Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2964020Z   m-container                                                                   
2025-08-19T12:26:49.2964369Z           Container velero is running with a writable root filesystem. This may 
2025-08-19T12:26:49.2964544Z   allow malicious                                                               
2025-08-19T12:26:49.2964904Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2965090Z   container files. If an                                                        
2025-08-19T12:26:49.2965443Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2965637Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2965998Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2966316Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2967081Z                                                                                 
2025-08-19T12:26:49.2967256Z           101┆ - name: velero
2025-08-19T12:26:49.2967524Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2967875Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2968249Z   m-container                                                                   
2025-08-19T12:26:49.2968603Z           Container aws-plugin is running with a writable root filesystem. This 
2025-08-19T12:26:49.2968790Z   may allow malicious                                                           
2025-08-19T12:26:49.2969143Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2969458Z   container files. If an                                                        
2025-08-19T12:26:49.2969811Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2970005Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2970360Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2970679Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2971448Z                                                                                 
2025-08-19T12:26:49.2971637Z           157┆ - name: aws-plugin
2025-08-19T12:26:49.2971900Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2972249Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2972417Z   m-container                                                                   
2025-08-19T12:26:49.2972773Z           Container csi-plugin is running with a writable root filesystem. This 
2025-08-19T12:26:49.2972955Z   may allow malicious                                                           
2025-08-19T12:26:49.2973304Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2973490Z   container files. If an                                                        
2025-08-19T12:26:49.2973970Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2974191Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2974553Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2974867Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2975631Z                                                                                 
2025-08-19T12:26:49.2975821Z           170┆ - name: csi-plugin
2025-08-19T12:26:49.2976131Z                                              
2025-08-19T12:26:49.2976279Z     deployments/weaviate/backup-cronjob.yaml 
2025-08-19T12:26:49.2976632Z        yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file   
2025-08-19T12:26:49.2976989Z           Secrets (QUtJQUlPU0ZPRE5ON0VYQU1QTEU=) should not be stored in        
2025-08-19T12:26:49.2977194Z   infrastructure as code files.                                                 
2025-08-19T12:26:49.2977526Z           Use an alternative such as Bitnami Sealed Secrets or KSOPS to encrypt 
2025-08-19T12:26:49.2977723Z   Kubernetes Secrets.                                                           
2025-08-19T12:26:49.2978036Z           Details: https://sg.run/KyL6                                          
2025-08-19T12:26:49.2978800Z                                                                                 
2025-08-19T12:26:49.2979203Z           249┆ aws-access-key-id: QUtJQUlPU0ZPRE5ON0VYQU1QTEU=  #               
2025-08-19T12:26:49.2979407Z   AKIAIOSFODNN7EXAMPLE                                                          
2025-08-19T12:26:49.2979664Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2980020Z        yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file   
2025-08-19T12:26:49.2980386Z           Secrets (d0phbHJYVXRuRkVNSS9LN01ERU5HL2JQeFJmaUNZRVhBTVBMRUtFWQ==)    
2025-08-19T12:26:49.2980567Z   should not be stored in                                                       
2025-08-19T12:26:49.2981053Z           infrastructure as code files. Use an alternative such as Bitnami      
2025-08-19T12:26:49.2981252Z   Sealed Secrets or KSOPS to                                                    
2025-08-19T12:26:49.2981571Z           encrypt Kubernetes Secrets.                                           
2025-08-19T12:26:49.2981882Z           Details: https://sg.run/KyL6                                          
2025-08-19T12:26:49.2982780Z                                                                                 
2025-08-19T12:26:49.2983159Z           250┆ aws-secret-access-key:                                           
2025-08-19T12:26:49.2983430Z   d0phbHJYVXRuRkVNSS9LN01ERU5HL2JQeFJmaUNZRVhBTVBMRUtFWQ==  #                   
2025-08-19T12:26:49.2983680Z   wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY                                      
2025-08-19T12:26:49.2984039Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2984388Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2984564Z   m-container                                                                   
2025-08-19T12:26:49.2984907Z           Container backup-test is running with a writable root filesystem. This
2025-08-19T12:26:49.2985091Z   may allow malicious                                                           
2025-08-19T12:26:49.2985449Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2985636Z   container files. If an                                                        
2025-08-19T12:26:49.2985984Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.2986179Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.2986538Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.2986850Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.2987617Z                                                                                 
2025-08-19T12:26:49.2987809Z           278┆ - name: backup-test
2025-08-19T12:26:49.2988108Z                                             
2025-08-19T12:26:49.2988253Z     deployments/weaviate/backup-system.yaml 
2025-08-19T12:26:49.2988585Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.2988931Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.2989109Z   they  are properly                                                            
2025-08-19T12:26:49.2989455Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.2989644Z   vulnerability is when a                                                       
2025-08-19T12:26:49.2989988Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.2990183Z   could allow an attacker to                                                    
2025-08-19T12:26:49.2990520Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.2990698Z   recommended to  add a                                                         
2025-08-19T12:26:49.2991043Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.2991222Z   set to `true`. This                                                           
2025-08-19T12:26:49.2991560Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.2991737Z   damage that could be                                                          
2025-08-19T12:26:49.2992082Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.2992256Z   container in your                                                             
2025-08-19T12:26:49.2992597Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.2992951Z   applications are more secure                                                  
2025-08-19T12:26:49.2993285Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.2993602Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.2994691Z                                                                                 
2025-08-19T12:26:49.2995064Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2995178Z     securityContext:          
2025-08-19T12:26:49.2995300Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2995442Z           496┆ spec:
2025-08-19T12:26:49.2995707Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2995881Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2995994Z     securityContext:          
2025-08-19T12:26:49.2996112Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2996241Z           572┆ spec:
2025-08-19T12:26:49.2996511Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2996682Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2996788Z     securityContext:          
2025-08-19T12:26:49.2996905Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2997038Z           660┆ spec:
2025-08-19T12:26:49.2997292Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2997472Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.2997587Z     securityContext:          
2025-08-19T12:26:49.2997703Z       runAsNonRoot: true #    
2025-08-19T12:26:49.2997830Z           753┆ spec:
2025-08-19T12:26:49.2998084Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.2998446Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.2998614Z   m-container                                                                   
2025-08-19T12:26:49.2998957Z           Container backup is running with a writable root filesystem. This may 
2025-08-19T12:26:49.2999143Z   allow malicious                                                               
2025-08-19T12:26:49.2999493Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.2999672Z   container files. If an                                                        
2025-08-19T12:26:49.3000025Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3000225Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3000578Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3000900Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3001666Z                                                                                 
2025-08-19T12:26:49.3001833Z           500┆ - name: backup
2025-08-19T12:26:49.3002089Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3002263Z           576┆ - name: backup
2025-08-19T12:26:49.3002516Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3002677Z           664┆ - name: backup
2025-08-19T12:26:49.3002935Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3003283Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3003456Z   m-container                                                                   
2025-08-19T12:26:49.3003921Z           Container validate is running with a writable root filesystem. This   
2025-08-19T12:26:49.3004106Z   may allow malicious                                                           
2025-08-19T12:26:49.3004455Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3004639Z   container files. If an                                                        
2025-08-19T12:26:49.3004986Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3005332Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3005692Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3006013Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3006780Z                                                                                 
2025-08-19T12:26:49.3007139Z           757┆ - name: validate
2025-08-19T12:26:49.3007494Z                                                  
2025-08-19T12:26:49.3007656Z     deployments/weaviate/integration-config.yaml 
2025-08-19T12:26:49.3007990Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3008335Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3008514Z   they  are properly                                                            
2025-08-19T12:26:49.3008861Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3009055Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3009429Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3009623Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3009963Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3010142Z   recommended to  add a                                                         
2025-08-19T12:26:49.3010488Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3010654Z   set to `true`. This                                                           
2025-08-19T12:26:49.3010995Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3011176Z   damage that could be                                                          
2025-08-19T12:26:49.3011512Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3011689Z   container in your                                                             
2025-08-19T12:26:49.3012025Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3012234Z   applications are more secure                                                  
2025-08-19T12:26:49.3012570Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3012884Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3013649Z                                                                                 
2025-08-19T12:26:49.3014018Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3014131Z     securityContext:          
2025-08-19T12:26:49.3014251Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3014390Z           277┆ spec:
2025-08-19T12:26:49.3014657Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3015006Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3015171Z   m-container                                                                   
2025-08-19T12:26:49.3015520Z           Container validator is running with a writable root filesystem. This  
2025-08-19T12:26:49.3015708Z   may allow malicious                                                           
2025-08-19T12:26:49.3016058Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3016243Z   container files. If an                                                        
2025-08-19T12:26:49.3016591Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3016787Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3017298Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3017612Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3018378Z                                                                                 
2025-08-19T12:26:49.3018574Z           281┆ - name: validator
2025-08-19T12:26:49.3019056Z                                                   
2025-08-19T12:26:49.3019226Z     deployments/weaviate/monitoring-enhanced.yaml 
2025-08-19T12:26:49.3019553Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3019898Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3020076Z   they  are properly                                                            
2025-08-19T12:26:49.3020416Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3020613Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3020956Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3021147Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3021483Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3021664Z   recommended to  add a                                                         
2025-08-19T12:26:49.3022009Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3022180Z   set to `true`. This                                                           
2025-08-19T12:26:49.3022516Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3022693Z   damage that could be                                                          
2025-08-19T12:26:49.3023028Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3023211Z   container in your                                                             
2025-08-19T12:26:49.3023547Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3023861Z   applications are more secure                                                  
2025-08-19T12:26:49.3024199Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3024516Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3025282Z                                                                                 
2025-08-19T12:26:49.3025471Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3025579Z     securityContext:          
2025-08-19T12:26:49.3025699Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3025834Z           703┆ spec:
2025-08-19T12:26:49.3026095Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3026449Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3026614Z   m-container                                                                   
2025-08-19T12:26:49.3026963Z           Container health-check is running with a writable root filesystem.    
2025-08-19T12:26:49.3027157Z   This may allow malicious                                                      
2025-08-19T12:26:49.3027514Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3027699Z   container files. If an                                                        
2025-08-19T12:26:49.3028046Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3028241Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3028601Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3029056Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3029935Z                                                                                 
2025-08-19T12:26:49.3030259Z           706┆ - name: health-check
2025-08-19T12:26:49.3030838Z                                                   
2025-08-19T12:26:49.3031012Z     deployments/weaviate/weaviate-deployment.yaml 
2025-08-19T12:26:49.3031639Z        yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file   
2025-08-19T12:26:49.3032016Z           Secrets (bmVwaG9yYW4tcmFnLWtleS1wcm9kdWN0aW9u) should not be stored in
2025-08-19T12:26:49.3032201Z   infrastructure as                                                             
2025-08-19T12:26:49.3032529Z           code files. Use an alternative such as Bitnami Sealed Secrets or KSOPS
2025-08-19T12:26:49.3032721Z   to encrypt Kubernetes                                                         
2025-08-19T12:26:49.3032995Z           Secrets.                                                              
2025-08-19T12:26:49.3033315Z           Details: https://sg.run/KyL6                                          
2025-08-19T12:26:49.3034231Z                                                                                 
2025-08-19T12:26:49.3034672Z           339┆ api-key: bmVwaG9yYW4tcmFnLWtleS1wcm9kdWN0aW9u  # Base64 encoded  
2025-08-19T12:26:49.3034895Z   "nephoran-rag-key-production"                                                 
2025-08-19T12:26:49.3035178Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3035529Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3035696Z   m-container                                                                   
2025-08-19T12:26:49.3036044Z           Container weaviate is running with a writable root filesystem. This   
2025-08-19T12:26:49.3036229Z   may allow malicious                                                           
2025-08-19T12:26:49.3036586Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3036771Z   container files. If an                                                        
2025-08-19T12:26:49.3037118Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3037311Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3037671Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3037992Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3038760Z                                                                                 
2025-08-19T12:26:49.3038947Z            45┆ - name: weaviate
2025-08-19T12:26:49.3039155Z                                  
2025-08-19T12:26:49.3039277Z     docs/dashboard-user-guide.md 
2025-08-19T12:26:49.3039614Z        generic.secrets.security.detected-slack-webhook.detected-slack-webhook
2025-08-19T12:26:49.3039928Z           Slack Webhook detected                                             
2025-08-19T12:26:49.3040232Z           Details: https://sg.run/weWX                                       
2025-08-19T12:26:49.3040946Z                                                                              
2025-08-19T12:26:49.3041291Z          1367┆ webhook_url:                                                     
2025-08-19T12:26:49.3041554Z   "https://hooks.slack.com/services/T00000000/B00000000/YYYYYYYYYYYYYYYYYYYYYYYY
2025-08-19T12:26:49.3041684Z   "                                                                             
2025-08-19T12:26:49.3042969Z                                                                                 
2025-08-19T12:26:49.3043534Z     examples/a1-policy-examples/consumer-examples/xapp-consumers/traffic-steerin
2025-08-19T12:26:49.3044029Z   g-xapp-consumer.yaml                                                          
2025-08-19T12:26:49.3044884Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3045539Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3045873Z   they  are properly                                                            
2025-08-19T12:26:49.3046498Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3046960Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3047305Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3047494Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3047828Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3048005Z   recommended to  add a                                                         
2025-08-19T12:26:49.3048351Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3048535Z   set to `true`. This                                                           
2025-08-19T12:26:49.3048870Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3049047Z   damage that could be                                                          
2025-08-19T12:26:49.3049385Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3049564Z   container in your                                                             
2025-08-19T12:26:49.3049901Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3050103Z   applications are more secure                                                  
2025-08-19T12:26:49.3050434Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3050754Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3051517Z                                                                                 
2025-08-19T12:26:49.3051751Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3051861Z     securityContext:          
2025-08-19T12:26:49.3051979Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3052116Z            33┆ spec:
2025-08-19T12:26:49.3052400Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3052583Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3052690Z     securityContext:          
2025-08-19T12:26:49.3052815Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3052943Z           667┆ spec:
2025-08-19T12:26:49.3053201Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3053564Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3053937Z   m-container                                                                   
2025-08-19T12:26:49.3054308Z           Container traffic-steering-xapp is running with a writable root       
2025-08-19T12:26:49.3054511Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.3054866Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.3055056Z   modify container files.                                                       
2025-08-19T12:26:49.3055398Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.3055573Z   consider using a                                                              
2025-08-19T12:26:49.3055921Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.3056062Z   this.                                                                         
2025-08-19T12:26:49.3056385Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3057142Z                                                                                 
2025-08-19T12:26:49.3057546Z            36┆ - name: traffic-steering-xapp
2025-08-19T12:26:49.3057811Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3058162Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3058330Z   m-container                                                                   
2025-08-19T12:26:49.3058803Z           Container register is running with a writable root filesystem. This   
2025-08-19T12:26:49.3058983Z   may allow malicious                                                           
2025-08-19T12:26:49.3059334Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3059520Z   container files. If an                                                        
2025-08-19T12:26:49.3059866Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3060061Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3060422Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3060739Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3061494Z                                                                                 
2025-08-19T12:26:49.3061668Z           671┆ - name: register
2025-08-19T12:26:49.3061990Z                                               
2025-08-19T12:26:49.3062139Z     examples/auth/ldap_integration_example.go 
2025-08-19T12:26:49.3062482Z        go.lang.security.audit.net.cookie-missing-secure.cookie-missing-secure   
2025-08-19T12:26:49.3062823Z           A session cookie was detected without setting the 'Secure' flag. The  
2025-08-19T12:26:49.3062991Z   'secure' flag for                                                             
2025-08-19T12:26:49.3063337Z           cookies prevents the client from transmitting the cookie over insecure
2025-08-19T12:26:49.3063517Z   channels such as                                                              
2025-08-19T12:26:49.3063961Z           HTTP. Set the 'Secure' flag by setting 'Secure' to 'true' in the      
2025-08-19T12:26:49.3064136Z   Options struct.                                                               
2025-08-19T12:26:49.3064453Z           Details: https://sg.run/N4G7                                          
2025-08-19T12:26:49.3065215Z                                                                                 
2025-08-19T12:26:49.3065508Z            ▶▶┆ Autofix ▶ s/(Secure\s*:\s+)false/\1true/g
2025-08-19T12:26:49.3065733Z           366┆ http.SetCookie(w, &http.Cookie{
2025-08-19T12:26:49.3065943Z           367┆    Name:                     
2025-08-19T12:26:49.3066054Z   "nephoran_session",                       
2025-08-19T12:26:49.3066211Z           368┆    Value:    
2025-08-19T12:26:49.3066303Z   "",                       
2025-08-19T12:26:49.3066471Z           369┆    Path:      
2025-08-19T12:26:49.3066555Z   "/",                       
2025-08-19T12:26:49.3066707Z           370┆    MaxAge:   
2025-08-19T12:26:49.3066797Z   -1,                       
2025-08-19T12:26:49.3066956Z           371┆    HttpOnly:   
2025-08-19T12:26:49.3067043Z   true,                       
2025-08-19T12:26:49.3067239Z           372┆    Secure:   r.TLS !=  
2025-08-19T12:26:49.3067333Z   nil,                                
2025-08-19T12:26:49.3067600Z           373┆ })
2025-08-19T12:26:49.3067948Z                                                  
2025-08-19T12:26:49.3068115Z     examples/availability-monitoring-config.yaml 
2025-08-19T12:26:49.3068446Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3068787Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3068969Z   they  are properly                                                            
2025-08-19T12:26:49.3069439Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3069628Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3069973Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3070162Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3070496Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3070678Z   recommended to  add a                                                         
2025-08-19T12:26:49.3071026Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3071194Z   set to `true`. This                                                           
2025-08-19T12:26:49.3071533Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3071708Z   damage that could be                                                          
2025-08-19T12:26:49.3072049Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3072226Z   container in your                                                             
2025-08-19T12:26:49.3072561Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3072763Z   applications are more secure                                                  
2025-08-19T12:26:49.3073092Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3073410Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3074310Z                                                                                 
2025-08-19T12:26:49.3074492Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3074610Z     securityContext:          
2025-08-19T12:26:49.3074728Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3074865Z           444┆ spec:
2025-08-19T12:26:49.3075132Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3075477Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3075643Z   m-container                                                                   
2025-08-19T12:26:49.3075997Z           Container availability-tracker is running with a writable root        
2025-08-19T12:26:49.3076199Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.3076551Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.3076740Z   modify container files.                                                       
2025-08-19T12:26:49.3077080Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.3077249Z   consider using a                                                              
2025-08-19T12:26:49.3077593Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.3077902Z   this.                                                                         
2025-08-19T12:26:49.3078217Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3078970Z                                                                                 
2025-08-19T12:26:49.3079316Z           447┆ - name: availability-tracker
2025-08-19T12:26:49.3079654Z                                                  
2025-08-19T12:26:49.3079812Z     examples/mvp-oran-sim/nf-sim-deployment.yaml 
2025-08-19T12:26:49.3080146Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3080483Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3080659Z   they  are properly                                                            
2025-08-19T12:26:49.3080996Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3081193Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3081527Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3081717Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3082052Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3082234Z   recommended to  add a                                                         
2025-08-19T12:26:49.3082579Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3082752Z   set to `true`. This                                                           
2025-08-19T12:26:49.3083085Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3083261Z   damage that could be                                                          
2025-08-19T12:26:49.3083605Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3084037Z   container in your                                                             
2025-08-19T12:26:49.3084438Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3084652Z   applications are more secure                                                  
2025-08-19T12:26:49.3084983Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3085295Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3086057Z                                                                                 
2025-08-19T12:26:49.3086242Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3086351Z     securityContext:          
2025-08-19T12:26:49.3086469Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3086604Z            20┆ spec:
2025-08-19T12:26:49.3086874Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3087222Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3087393Z   m-container                                                                   
2025-08-19T12:26:49.3087733Z           Container simulator is running with a writable root filesystem. This  
2025-08-19T12:26:49.3087918Z   may allow malicious                                                           
2025-08-19T12:26:49.3088270Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3088451Z   container files. If an                                                        
2025-08-19T12:26:49.3088792Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3088984Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3089341Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3089818Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3090574Z                                                                                 
2025-08-19T12:26:49.3090777Z            22┆ - name: simulator
2025-08-19T12:26:49.3091247Z                                                             
2025-08-19T12:26:49.3091578Z     examples/packages/direct/nf-sim-minimal/deployment.yaml 
2025-08-19T12:26:49.3091935Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3092275Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3092450Z   they  are properly                                                            
2025-08-19T12:26:49.3092795Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3092983Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3093326Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3093528Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3093999Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3094181Z   recommended to  add a                                                         
2025-08-19T12:26:49.3094531Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3094704Z   set to `true`. This                                                           
2025-08-19T12:26:49.3101794Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3102076Z   damage that could be                                                          
2025-08-19T12:26:49.3102435Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3102625Z   container in your                                                             
2025-08-19T12:26:49.3102974Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3103187Z   applications are more secure                                                  
2025-08-19T12:26:49.3103525Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3104031Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3104829Z                                                                                 
2025-08-19T12:26:49.3105071Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3105188Z     securityContext:          
2025-08-19T12:26:49.3105315Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3105454Z            33┆ spec:
2025-08-19T12:26:49.3105740Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3106110Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3106291Z   m-container                                                                   
2025-08-19T12:26:49.3106639Z           Container nf-sim is running with a writable root filesystem. This may 
2025-08-19T12:26:49.3106823Z   allow malicious                                                               
2025-08-19T12:26:49.3107191Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3107382Z   container files. If an                                                        
2025-08-19T12:26:49.3107736Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3107938Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3108298Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3108621Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3109717Z                                                                                 
2025-08-19T12:26:49.3109892Z            55┆ name: nf-sim
2025-08-19T12:26:49.3110380Z                                                             
2025-08-19T12:26:49.3110595Z     examples/packages/direct/nf-sim-scaling/deployment.yaml 
2025-08-19T12:26:49.3110940Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3111430Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3111619Z   they  are properly                                                            
2025-08-19T12:26:49.3111966Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3112156Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3112500Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3112705Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3113037Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3113216Z   recommended to  add a                                                         
2025-08-19T12:26:49.3113573Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3113868Z   set to `true`. This                                                           
2025-08-19T12:26:49.3114212Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3114398Z   damage that could be                                                          
2025-08-19T12:26:49.3114736Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3114910Z   container in your                                                             
2025-08-19T12:26:49.3115262Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3115474Z   applications are more secure                                                  
2025-08-19T12:26:49.3115808Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3116134Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3116914Z                                                                                 
2025-08-19T12:26:49.3117103Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3117214Z     securityContext:          
2025-08-19T12:26:49.3117341Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3117475Z            31┆ spec:
2025-08-19T12:26:49.3117746Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3118104Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3118274Z   m-container                                                                   
2025-08-19T12:26:49.3118619Z           Container nf-sim is running with a writable root filesystem. This may 
2025-08-19T12:26:49.3118798Z   allow malicious                                                               
2025-08-19T12:26:49.3119150Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3119333Z   container files. If an                                                        
2025-08-19T12:26:49.3119695Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3119892Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3120283Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3120815Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3121607Z                                                                                 
2025-08-19T12:26:49.3121979Z            53┆ name: nf-sim
2025-08-19T12:26:49.3122272Z                                            
2025-08-19T12:26:49.3122434Z     examples/service-mesh-integration.yaml 
2025-08-19T12:26:49.3122783Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3123134Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3123453Z   they  are properly                                                            
2025-08-19T12:26:49.3124122Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3124333Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3124690Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3124882Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3125216Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3125404Z   recommended to  add a                                                         
2025-08-19T12:26:49.3125756Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3125936Z   set to `true`. This                                                           
2025-08-19T12:26:49.3126283Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3126473Z   damage that could be                                                          
2025-08-19T12:26:49.3126814Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3126989Z   container in your                                                             
2025-08-19T12:26:49.3127335Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3127542Z   applications are more secure                                                  
2025-08-19T12:26:49.3127878Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3128206Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3128983Z                                                                                 
2025-08-19T12:26:49.3129184Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3129309Z     securityContext:          
2025-08-19T12:26:49.3129431Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3129565Z           246┆ spec:
2025-08-19T12:26:49.3129840Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3130208Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3130375Z   m-container                                                                   
2025-08-19T12:26:49.3130730Z           Container llm-processor is running with a writable root filesystem.   
2025-08-19T12:26:49.3130941Z   This may allow malicious                                                      
2025-08-19T12:26:49.3131293Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3131476Z   container files. If an                                                        
2025-08-19T12:26:49.3131831Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3132035Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3132392Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3132717Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3133493Z                                                                                 
2025-08-19T12:26:49.3133866Z           249┆ - name: llm-processor
2025-08-19T12:26:49.3134227Z                                                  
2025-08-19T12:26:49.3134569Z     infrastructure/terraform/modules/aws/main.tf 
2025-08-19T12:26:49.3134937Z        terraform.lang.security.eks-public-endpoint-enabled.eks-public-endpoint-e
2025-08-19T12:26:49.3135090Z   nabled                                                                        
2025-08-19T12:26:49.3135440Z           The vpc_config resource inside the eks cluster has not explicitly     
2025-08-19T12:26:49.3135640Z   disabled public endpoint                                                      
2025-08-19T12:26:49.3136038Z           access                                                                
2025-08-19T12:26:49.3136364Z           Details: https://sg.run/Albg                                          
2025-08-19T12:26:49.3137142Z                                                                                 
2025-08-19T12:26:49.3137404Z           492┆ resource "aws_eks_cluster" "main" {
2025-08-19T12:26:49.3137596Z                                
2025-08-19T12:26:49.3137714Z     internal/ingest/handler.go 
2025-08-19T12:26:49.3138054Z        go.lang.security.injection.raw-html-format.raw-html-format               
2025-08-19T12:26:49.3138398Z           Detected user input flowing into a manually constructed HTML string.  
2025-08-19T12:26:49.3138597Z   You may be accidentally                                                       
2025-08-19T12:26:49.3138943Z           bypassing secure methods of rendering HTML by manually constructing   
2025-08-19T12:26:49.3139127Z   HTML and this could                                                           
2025-08-19T12:26:49.3139478Z           create a cross-site scripting vulnerability, which could let attackers
2025-08-19T12:26:49.3139663Z   steal sensitive user                                                          
2025-08-19T12:26:49.3139998Z           data. Use the `html/template` package which will safely render HTML   
2025-08-19T12:26:49.3140193Z   instead, or inspect that                                                      
2025-08-19T12:26:49.3140504Z           the HTML is rendered safely.                                          
2025-08-19T12:26:49.3140828Z           Details: https://sg.run/3r1G                                          
2025-08-19T12:26:49.3141608Z                                                                                 
2025-08-19T12:26:49.3142011Z            73┆  ... fmt.Sprintf("Invalid plain text format. Expected: 'scale    
2025-08-19T12:26:49.3142232Z   <target> to <replicas> in ns <namespace>'. Received: %q", string(body)),      
2025-08-19T12:26:49.3142506Z   http.StatusBadRequest) ... [0m                                                
2025-08-19T12:26:49.3142869Z             [shortened a long line from output, adjust with                     
2025-08-19T12:26:49.3143062Z   --max-chars-per-line]                                                         
2025-08-19T12:26:49.3143239Z                               
2025-08-19T12:26:49.3143361Z     internal/kpm/generator.go 
2025-08-19T12:26:49.3143625Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3144020Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3144287Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3144831Z                                                                  
2025-08-19T12:26:49.3145037Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3145203Z             8┆ "math/rand"
2025-08-19T12:26:49.3145641Z                                                         
2025-08-19T12:26:49.3145831Z     kpt-packages/nephio/coredns-caching/deployment.yaml 
2025-08-19T12:26:49.3146171Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3146520Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3146697Z   they  are properly                                                            
2025-08-19T12:26:49.3147041Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3147394Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3147741Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3147941Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3148280Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3148584Z   recommended to  add a                                                         
2025-08-19T12:26:49.3148934Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3149109Z   set to `true`. This                                                           
2025-08-19T12:26:49.3149449Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3149627Z   damage that could be                                                          
2025-08-19T12:26:49.3149975Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3150149Z   container in your                                                             
2025-08-19T12:26:49.3150490Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3150693Z   applications are more secure                                                  
2025-08-19T12:26:49.3151035Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3151352Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3152129Z                                                                                 
2025-08-19T12:26:49.3152321Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3152433Z     securityContext:          
2025-08-19T12:26:49.3152553Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3152692Z            22┆ spec:
2025-08-19T12:26:49.3153224Z                                                                
2025-08-19T12:26:49.3153447Z     kpt-packages/nephio/coredns-caching-scaled/deployment.yaml 
2025-08-19T12:26:49.3153955Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3154305Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3154490Z   they  are properly                                                            
2025-08-19T12:26:49.3154845Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3155041Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3155386Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3155578Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3155918Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3156101Z   recommended to  add a                                                         
2025-08-19T12:26:49.3156454Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3156625Z   set to `true`. This                                                           
2025-08-19T12:26:49.3156968Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3157149Z   damage that could be                                                          
2025-08-19T12:26:49.3157496Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3157669Z   container in your                                                             
2025-08-19T12:26:49.3158007Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3158217Z   applications are more secure                                                  
2025-08-19T12:26:49.3158692Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3159014Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3159790Z                                                                                 
2025-08-19T12:26:49.3159979Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3160089Z     securityContext:          
2025-08-19T12:26:49.3160332Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3160474Z            22┆ spec:
2025-08-19T12:26:49.3161250Z                                                                                 
2025-08-19T12:26:49.3161543Z     kpt-packages/nephio/nephio-system/ipam/app/controller/deployment-controller.
2025-08-19T12:26:49.3161695Z   yaml                                                                          
2025-08-19T12:26:49.3162028Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3162368Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3162560Z   they  are properly                                                            
2025-08-19T12:26:49.3162907Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3163097Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3163449Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3163648Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3164311Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3164500Z   recommended to  add a                                                         
2025-08-19T12:26:49.3164860Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3165031Z   set to `true`. This                                                           
2025-08-19T12:26:49.3165377Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3165560Z   damage that could be                                                          
2025-08-19T12:26:49.3165900Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3166073Z   container in your                                                             
2025-08-19T12:26:49.3166421Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3166625Z   applications are more secure                                                  
2025-08-19T12:26:49.3166955Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3167281Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3168057Z                                                                                 
2025-08-19T12:26:49.3168251Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3168361Z     securityContext:          
2025-08-19T12:26:49.3168487Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3168619Z            28┆ spec:
2025-08-19T12:26:49.3168893Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3169254Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3169427Z   m-container                                                                   
2025-08-19T12:26:49.3169775Z           Container kube-rbac-proxy is running with a writable root filesystem. 
2025-08-19T12:26:49.3169945Z   This may allow                                                                
2025-08-19T12:26:49.3170304Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.3170498Z   modify container files.                                                       
2025-08-19T12:26:49.3170846Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.3171272Z   consider using a                                                              
2025-08-19T12:26:49.3171624Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.3171767Z   this.                                                                         
2025-08-19T12:26:49.3172093Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3172992Z                                                                                 
2025-08-19T12:26:49.3173195Z            36┆ name: kube-rbac-proxy
2025-08-19T12:26:49.3173465Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3173964Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3174134Z   m-container                                                                   
2025-08-19T12:26:49.3174493Z           Container controller is running with a writable root filesystem. This 
2025-08-19T12:26:49.3174682Z   may allow malicious                                                           
2025-08-19T12:26:49.3175036Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3175227Z   container files. If an                                                        
2025-08-19T12:26:49.3175588Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3175784Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3176151Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3176472Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3177247Z                                                                                 
2025-08-19T12:26:49.3177428Z            80┆ name: controller
2025-08-19T12:26:49.3178214Z                                                                                 
2025-08-19T12:26:49.3178507Z     kpt-packages/nephio/nephio-system/nephio-5gc/app/controller/deployment-contr
2025-08-19T12:26:49.3178665Z   oller.yaml                                                                    
2025-08-19T12:26:49.3179001Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3179348Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3179523Z   they  are properly                                                            
2025-08-19T12:26:49.3179871Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3180060Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3180402Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3180597Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3180932Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3181110Z   recommended to  add a                                                         
2025-08-19T12:26:49.3181463Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3181629Z   set to `true`. This                                                           
2025-08-19T12:26:49.3181970Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3182147Z   damage that could be                                                          
2025-08-19T12:26:49.3182495Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3182669Z   container in your                                                             
2025-08-19T12:26:49.3183015Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3183374Z   applications are more secure                                                  
2025-08-19T12:26:49.3183819Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3184148Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3184924Z                                                                                 
2025-08-19T12:26:49.3185239Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3185357Z     securityContext:          
2025-08-19T12:26:49.3185478Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3185609Z            27┆ spec:
2025-08-19T12:26:49.3185878Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3186228Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3186397Z   m-container                                                                   
2025-08-19T12:26:49.3186752Z           Container kube-rbac-proxy is running with a writable root filesystem. 
2025-08-19T12:26:49.3186920Z   This may allow                                                                
2025-08-19T12:26:49.3187276Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.3187469Z   modify container files.                                                       
2025-08-19T12:26:49.3187823Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.3187995Z   consider using a                                                              
2025-08-19T12:26:49.3188345Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.3188491Z   this.                                                                         
2025-08-19T12:26:49.3188807Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3189579Z                                                                                 
2025-08-19T12:26:49.3189785Z            35┆ name: kube-rbac-proxy
2025-08-19T12:26:49.3190045Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3190396Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3190568Z   m-container                                                                   
2025-08-19T12:26:49.3190926Z           Container controller is running with a writable root filesystem. This 
2025-08-19T12:26:49.3191107Z   may allow malicious                                                           
2025-08-19T12:26:49.3191459Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3191646Z   container files. If an                                                        
2025-08-19T12:26:49.3191996Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3192190Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3192559Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3192876Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3193650Z                                                                                 
2025-08-19T12:26:49.3193955Z            59┆ name: controller
2025-08-19T12:26:49.3194736Z                                                                                 
2025-08-19T12:26:49.3195024Z     kpt-packages/nephio/nephio-system/nf-injector/app/controller/deployment-cont
2025-08-19T12:26:49.3195191Z   roller.yaml                                                                   
2025-08-19T12:26:49.3195522Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3195862Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3196187Z   they  are properly                                                            
2025-08-19T12:26:49.3196529Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3196717Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3197057Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3197376Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3197709Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3197885Z   recommended to  add a                                                         
2025-08-19T12:26:49.3198238Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3198405Z   set to `true`. This                                                           
2025-08-19T12:26:49.3198744Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3198934Z   damage that could be                                                          
2025-08-19T12:26:49.3199273Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3199444Z   container in your                                                             
2025-08-19T12:26:49.3199789Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3199996Z   applications are more secure                                                  
2025-08-19T12:26:49.3200327Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3200648Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3201422Z                                                                                 
2025-08-19T12:26:49.3201607Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3201723Z     securityContext:          
2025-08-19T12:26:49.3201852Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3201987Z            28┆ spec:
2025-08-19T12:26:49.3202250Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3202610Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3202777Z   m-container                                                                   
2025-08-19T12:26:49.3203131Z           Container kube-rbac-proxy is running with a writable root filesystem. 
2025-08-19T12:26:49.3203302Z   This may allow                                                                
2025-08-19T12:26:49.3203660Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.3204169Z   modify container files.                                                       
2025-08-19T12:26:49.3204527Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.3204708Z   consider using a                                                              
2025-08-19T12:26:49.3205059Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.3205202Z   this.                                                                         
2025-08-19T12:26:49.3205522Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3206301Z                                                                                 
2025-08-19T12:26:49.3206509Z            36┆ name: kube-rbac-proxy
2025-08-19T12:26:49.3206777Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3207129Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3207294Z   m-container                                                                   
2025-08-19T12:26:49.3207647Z           Container controller is running with a writable root filesystem. This 
2025-08-19T12:26:49.3208035Z   may allow malicious                                                           
2025-08-19T12:26:49.3208387Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3208574Z   container files. If an                                                        
2025-08-19T12:26:49.3208923Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3209283Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3209647Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3209962Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3210737Z                                                                                 
2025-08-19T12:26:49.3210919Z            80┆ name: controller
2025-08-19T12:26:49.3211701Z                                                                                 
2025-08-19T12:26:49.3212001Z     kpt-packages/nephio/nephio-system/package-deployment-controller/app/controll
2025-08-19T12:26:49.3212224Z   er/deployment-controller.yaml                                                 
2025-08-19T12:26:49.3212562Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3212902Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3213085Z   they  are properly                                                            
2025-08-19T12:26:49.3213433Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3213621Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3214101Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3214300Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3214634Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3214817Z   recommended to  add a                                                         
2025-08-19T12:26:49.3215170Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3215334Z   set to `true`. This                                                           
2025-08-19T12:26:49.3215678Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3215854Z   damage that could be                                                          
2025-08-19T12:26:49.3216196Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3216369Z   container in your                                                             
2025-08-19T12:26:49.3216709Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3216923Z   applications are more secure                                                  
2025-08-19T12:26:49.3217259Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3217575Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3218355Z                                                                                 
2025-08-19T12:26:49.3218535Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3218648Z     securityContext:          
2025-08-19T12:26:49.3218772Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3218903Z            27┆ spec:
2025-08-19T12:26:49.3219163Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3219513Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3219682Z   m-container                                                                   
2025-08-19T12:26:49.3220030Z           Container kube-rbac-proxy is running with a writable root filesystem. 
2025-08-19T12:26:49.3220339Z   This may allow                                                                
2025-08-19T12:26:49.3220702Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.3220891Z   modify container files.                                                       
2025-08-19T12:26:49.3221235Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.3221532Z   consider using a                                                              
2025-08-19T12:26:49.3221881Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.3222025Z   this.                                                                         
2025-08-19T12:26:49.3222346Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3223120Z                                                                                 
2025-08-19T12:26:49.3223320Z            35┆ name: kube-rbac-proxy
2025-08-19T12:26:49.3223582Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3224071Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3224239Z   m-container                                                                   
2025-08-19T12:26:49.3224595Z           Container controller is running with a writable root filesystem. This 
2025-08-19T12:26:49.3224788Z   may allow malicious                                                           
2025-08-19T12:26:49.3225146Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3225327Z   container files. If an                                                        
2025-08-19T12:26:49.3225686Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3225881Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3226239Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3226572Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3227347Z                                                                                 
2025-08-19T12:26:49.3227526Z            59┆ name: controller
2025-08-19T12:26:49.3228111Z                                                                    
2025-08-19T12:26:49.3228355Z     kpt-packages/nephio/nephio-system/porch/2-function-runner.yaml 
2025-08-19T12:26:49.3228690Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3229031Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3229214Z   they  are properly                                                            
2025-08-19T12:26:49.3229556Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3229743Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3230105Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3230295Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3230629Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3230817Z   recommended to  add a                                                         
2025-08-19T12:26:49.3231166Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3231332Z   set to `true`. This                                                           
2025-08-19T12:26:49.3231674Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3231855Z   damage that could be                                                          
2025-08-19T12:26:49.3232194Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3232523Z   container in your                                                             
2025-08-19T12:26:49.3232863Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3233066Z   applications are more secure                                                  
2025-08-19T12:26:49.3233408Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3233977Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3234761Z                                                                                 
2025-08-19T12:26:49.3234944Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3235059Z     securityContext:          
2025-08-19T12:26:49.3235179Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3235312Z            38┆ spec:
2025-08-19T12:26:49.3235580Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3235940Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3236106Z   m-container                                                                   
2025-08-19T12:26:49.3236462Z           Container function-runner is running with a writable root filesystem. 
2025-08-19T12:26:49.3236628Z   This may allow                                                                
2025-08-19T12:26:49.3236994Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.3237187Z   modify container files.                                                       
2025-08-19T12:26:49.3237534Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.3237706Z   consider using a                                                              
2025-08-19T12:26:49.3238058Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.3238207Z   this.                                                                         
2025-08-19T12:26:49.3238528Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3239303Z                                                                                 
2025-08-19T12:26:49.3239523Z            41┆ - name: function-runner
2025-08-19T12:26:49.3240061Z                                                                 
2025-08-19T12:26:49.3240292Z     kpt-packages/nephio/nephio-system/porch/3-porch-server.yaml 
2025-08-19T12:26:49.3240631Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3240974Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3241154Z   they  are properly                                                            
2025-08-19T12:26:49.3241502Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3241690Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3242035Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3242225Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3242566Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3242747Z   recommended to  add a                                                         
2025-08-19T12:26:49.3243094Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3243264Z   set to `true`. This                                                           
2025-08-19T12:26:49.3243603Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3244091Z   damage that could be                                                          
2025-08-19T12:26:49.3244464Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3244809Z   container in your                                                             
2025-08-19T12:26:49.3245163Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3245376Z   applications are more secure                                                  
2025-08-19T12:26:49.3245709Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3246154Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3246938Z                                                                                 
2025-08-19T12:26:49.3247136Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3247249Z     securityContext:          
2025-08-19T12:26:49.3247369Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3247505Z            38┆ spec:
2025-08-19T12:26:49.3247771Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3248133Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3248305Z   m-container                                                                   
2025-08-19T12:26:49.3248656Z           Container porch-server is running with a writable root filesystem.    
2025-08-19T12:26:49.3248849Z   This may allow malicious                                                      
2025-08-19T12:26:49.3249213Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3249396Z   container files. If an                                                        
2025-08-19T12:26:49.3249744Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3249943Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3250301Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3250624Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3251408Z                                                                                 
2025-08-19T12:26:49.3251612Z            44┆ - name: porch-server
2025-08-19T12:26:49.3252120Z                                                               
2025-08-19T12:26:49.3252333Z     kpt-packages/nephio/nephio-system/porch/4-apiservice.yaml 
2025-08-19T12:26:49.3252692Z        yaml.kubernetes.security.skip-tls-verify-service.skip-tls-verify-service 
2025-08-19T12:26:49.3253036Z           Service is disabling TLS certificate verification when communicating  
2025-08-19T12:26:49.3253215Z   with the server. This                                                         
2025-08-19T12:26:49.3253554Z           makes your HTTPS connections insecure. Remove the                     
2025-08-19T12:26:49.3253910Z   'insecureSkipTLSVerify: true' key to                                          
2025-08-19T12:26:49.3254229Z           secure communication.                                                 
2025-08-19T12:26:49.3254556Z           Details: https://sg.run/zk10                                          
2025-08-19T12:26:49.3255332Z                                                                                 
2025-08-19T12:26:49.3255468Z            20┆ spec:
2025-08-19T12:26:49.3255701Z            21┆   insecureSkipTLSVerify: true
2025-08-19T12:26:49.3255916Z            22┆   group: porch.kpt.dev
2025-08-19T12:26:49.3256146Z            23┆   groupPriorityMinimum: 1000
2025-08-19T12:26:49.3256342Z            24┆   versionPriority: 15
2025-08-19T12:26:49.3256497Z            25┆   service:
2025-08-19T12:26:49.3256658Z            26┆     name: api
2025-08-19T12:26:49.3256880Z            27┆     namespace: porch-system
2025-08-19T12:26:49.3257074Z            28┆   version: v1alpha1
2025-08-19T12:26:49.3257598Z                                                                
2025-08-19T12:26:49.3257820Z     kpt-packages/nephio/nephio-system/porch/9-controllers.yaml 
2025-08-19T12:26:49.3258304Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3258654Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3258831Z   they  are properly                                                            
2025-08-19T12:26:49.3259173Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3259489Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3259831Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3260025Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3260364Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3260545Z   recommended to  add a                                                         
2025-08-19T12:26:49.3260901Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3261076Z   set to `true`. This                                                           
2025-08-19T12:26:49.3261415Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3261593Z   damage that could be                                                          
2025-08-19T12:26:49.3261941Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3262114Z   container in your                                                             
2025-08-19T12:26:49.3262454Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3262659Z   applications are more secure                                                  
2025-08-19T12:26:49.3262997Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3263317Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3264248Z                                                                                 
2025-08-19T12:26:49.3264458Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3264567Z     securityContext:          
2025-08-19T12:26:49.3264686Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3264828Z            40┆ spec:
2025-08-19T12:26:49.3265103Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3265454Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3265632Z   m-container                                                                   
2025-08-19T12:26:49.3266006Z           Container porch-controllers is running with a writable root           
2025-08-19T12:26:49.3266206Z   filesystem. This may allow                                                    
2025-08-19T12:26:49.3266567Z           malicious applications to download and run additional payloads, or    
2025-08-19T12:26:49.3266778Z   modify container files.                                                       
2025-08-19T12:26:49.3267120Z           If an application inside a container has to save something temporarily
2025-08-19T12:26:49.3267292Z   consider using a                                                              
2025-08-19T12:26:49.3267650Z           tmpfs. Add 'readOnlyRootFilesystem: true' to this container to prevent
2025-08-19T12:26:49.3267798Z   this.                                                                         
2025-08-19T12:26:49.3268115Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3268896Z                                                                                 
2025-08-19T12:26:49.3269123Z            43┆ - name: porch-controllers
2025-08-19T12:26:49.3269521Z                                                      
2025-08-19T12:26:49.3269702Z     kpt-packages/nephio/nephio-webui/deployment.yaml 
2025-08-19T12:26:49.3270198Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3270542Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3270720Z   they  are properly                                                            
2025-08-19T12:26:49.3271068Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3271382Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3271725Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3271927Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3272262Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3272443Z   recommended to  add a                                                         
2025-08-19T12:26:49.3272800Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3272970Z   set to `true`. This                                                           
2025-08-19T12:26:49.3273310Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3273496Z   damage that could be                                                          
2025-08-19T12:26:49.3273979Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3274156Z   container in your                                                             
2025-08-19T12:26:49.3274501Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3274706Z   applications are more secure                                                  
2025-08-19T12:26:49.3275039Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3275362Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3276142Z                                                                                 
2025-08-19T12:26:49.3276332Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3276442Z     securityContext:          
2025-08-19T12:26:49.3276568Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3276701Z            17┆ spec:
2025-08-19T12:26:49.3276965Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3277327Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3277500Z   m-container                                                                   
2025-08-19T12:26:49.3277842Z           Container main is running with a writable root filesystem. This may   
2025-08-19T12:26:49.3278030Z   allow malicious                                                               
2025-08-19T12:26:49.3278385Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3278572Z   container files. If an                                                        
2025-08-19T12:26:49.3278924Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3279124Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3279481Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3279804Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3280583Z                                                                                 
2025-08-19T12:26:49.3280746Z            21┆ - name: main
2025-08-19T12:26:49.3280987Z                                       
2025-08-19T12:26:49.3281120Z     kpt-packages/ric-sim/ric-sim.yaml 
2025-08-19T12:26:49.3281453Z        yaml.kubernetes.security.run-as-non-root.run-as-non-root                 
2025-08-19T12:26:49.3281795Z           When running containers in Kubernetes, it's important to ensure that  
2025-08-19T12:26:49.3282127Z   they  are properly                                                            
2025-08-19T12:26:49.3282470Z           secured to prevent privilege escalation attacks.  One potential       
2025-08-19T12:26:49.3282658Z   vulnerability is when a                                                       
2025-08-19T12:26:49.3283001Z           container is allowed to run  applications as the root user, which     
2025-08-19T12:26:49.3283322Z   could allow an attacker to                                                    
2025-08-19T12:26:49.3283655Z           gain  access to sensitive resources. To mitigate this risk, it's      
2025-08-19T12:26:49.3284151Z   recommended to  add a                                                         
2025-08-19T12:26:49.3284524Z           `securityContext` to the container, with the parameter `runAsNonRoot` 
2025-08-19T12:26:49.3284692Z   set to `true`. This                                                           
2025-08-19T12:26:49.3285038Z           will ensure that the container runs as a non-root user,  limiting the 
2025-08-19T12:26:49.3285222Z   damage that could be                                                          
2025-08-19T12:26:49.3285562Z           caused by any potential attacks. By  adding a `securityContext` to the
2025-08-19T12:26:49.3285735Z   container in your                                                             
2025-08-19T12:26:49.3286084Z           Kubernetes pod, you can  help to ensure that your containerized       
2025-08-19T12:26:49.3286290Z   applications are more secure                                                  
2025-08-19T12:26:49.3286622Z           and  less vulnerable to privilege escalation attacks.                 
2025-08-19T12:26:49.3286945Z           Details: https://sg.run/dgP5                                          
2025-08-19T12:26:49.3287721Z                                                                                 
2025-08-19T12:26:49.3287918Z            ▶▶┆ Autofix ▶ spec:
2025-08-19T12:26:49.3288037Z     securityContext:          
2025-08-19T12:26:49.3288157Z       runAsNonRoot: true #    
2025-08-19T12:26:49.3288290Z            19┆ spec:
2025-08-19T12:26:49.3288556Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3288916Z        yaml.kubernetes.security.writable-filesystem-container.writable-filesyste
2025-08-19T12:26:49.3289082Z   m-container                                                                   
2025-08-19T12:26:49.3289431Z           Container ric-sim is running with a writable root filesystem. This may
2025-08-19T12:26:49.3289610Z   allow malicious                                                               
2025-08-19T12:26:49.3289961Z           applications to download and run additional payloads, or modify       
2025-08-19T12:26:49.3290143Z   container files. If an                                                        
2025-08-19T12:26:49.3290498Z           application inside a container has to save something temporarily      
2025-08-19T12:26:49.3290698Z   consider using a tmpfs. Add                                                   
2025-08-19T12:26:49.3291055Z           'readOnlyRootFilesystem: true' to this container to prevent this.     
2025-08-19T12:26:49.3291373Z           Details: https://sg.run/ZePL                                          
2025-08-19T12:26:49.3292151Z                                                                                 
2025-08-19T12:26:49.3292329Z            21┆ - name: ric-sim
2025-08-19T12:26:49.3292587Z                                         
2025-08-19T12:26:49.3292729Z     pkg/audit/backends/elasticsearch.go 
2025-08-19T12:26:49.3293072Z        go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversi
2025-08-19T12:26:49.3293207Z   on                                                                            
2025-08-19T12:26:49.3293551Z           `MinVersion` is missing from this TLS configuration.  By default, as  
2025-08-19T12:26:49.3294092Z   of Go 1.22, TLS 1.2 is                                                        
2025-08-19T12:26:49.3294435Z           currently used as the minimum. General purpose web applications should
2025-08-19T12:26:49.3294609Z   default to TLS 1.3                                                            
2025-08-19T12:26:49.3294949Z           with all other protocols disabled.  Only where it is known that a web 
2025-08-19T12:26:49.3295303Z   server must support                                                           
2025-08-19T12:26:49.3295647Z           legacy clients with unsupported an insecure browsers (such as Internet
2025-08-19T12:26:49.3295822Z   Explorer 10), it may                                                          
2025-08-19T12:26:49.3296160Z           be necessary to enable TLS 1.0 to provide support. Add `MinVersion:   
2025-08-19T12:26:49.3296352Z   tls.VersionTLS13' to the                                                      
2025-08-19T12:26:49.3296694Z           TLS configuration to bump the minimum version to TLS 1.3.             
2025-08-19T12:26:49.3297015Z           Details: https://sg.run/oxEN                                          
2025-08-19T12:26:49.3297784Z                                                                                 
2025-08-19T12:26:49.3298214Z            ▶▶┆ Autofix ▶ tls.Config{ InsecureSkipVerify: !esConfig.VerifyTLS,   
2025-08-19T12:26:49.3298425Z   MinVersion: tls.VersionTLS13 }                                                
2025-08-19T12:26:49.3298644Z           121┆ tlsConfig := &tls.Config{
2025-08-19T12:26:49.3298906Z           122┆    InsecureSkipVerify:                  
2025-08-19T12:26:49.3299052Z   !esConfig.VerifyTLS,                                 
2025-08-19T12:26:49.3299172Z           123┆ }
2025-08-19T12:26:49.3299379Z                                  
2025-08-19T12:26:49.3299503Z     pkg/audit/backends/splunk.go 
2025-08-19T12:26:49.3299849Z        go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversi
2025-08-19T12:26:49.3299998Z   on                                                                            
2025-08-19T12:26:49.3300339Z           `MinVersion` is missing from this TLS configuration.  By default, as  
2025-08-19T12:26:49.3300496Z   of Go 1.22, TLS 1.2 is                                                        
2025-08-19T12:26:49.3300841Z           currently used as the minimum. General purpose web applications should
2025-08-19T12:26:49.3301017Z   default to TLS 1.3                                                            
2025-08-19T12:26:49.3301358Z           with all other protocols disabled.  Only where it is known that a web 
2025-08-19T12:26:49.3301540Z   server must support                                                           
2025-08-19T12:26:49.3301883Z           legacy clients with unsupported an insecure browsers (such as Internet
2025-08-19T12:26:49.3302051Z   Explorer 10), it may                                                          
2025-08-19T12:26:49.3302387Z           be necessary to enable TLS 1.0 to provide support. Add `MinVersion:   
2025-08-19T12:26:49.3302586Z   tls.VersionTLS13' to the                                                      
2025-08-19T12:26:49.3302922Z           TLS configuration to bump the minimum version to TLS 1.3.             
2025-08-19T12:26:49.3303240Z           Details: https://sg.run/oxEN                                          
2025-08-19T12:26:49.3304126Z                                                                                 
2025-08-19T12:26:49.3304529Z            ▶▶┆ Autofix ▶ tls.Config{ InsecureSkipVerify:                        
2025-08-19T12:26:49.3304772Z   !splunkConfig.VerifyTLS, MinVersion: tls.VersionTLS13 }                       
2025-08-19T12:26:49.3304982Z           142┆ tlsConfig := &tls.Config{
2025-08-19T12:26:49.3305257Z           143┆    InsecureSkipVerify:                      
2025-08-19T12:26:49.3305418Z   !splunkConfig.VerifyTLS,                                 
2025-08-19T12:26:49.3305540Z           144┆ }
2025-08-19T12:26:49.3305837Z                          
2025-08-19T12:26:49.3305943Z     pkg/auth/handlers.go 
2025-08-19T12:26:49.3306269Z        go.lang.security.injection.open-redirect.open-redirect                   
2025-08-19T12:26:49.3306605Z           An HTTP redirect was found to be crafted from user-input `r`. This can
2025-08-19T12:26:49.3306788Z   lead to open redirect                                                         
2025-08-19T12:26:49.3307260Z           vulnerabilities, potentially allowing attackers to redirect users to  
2025-08-19T12:26:49.3307451Z   malicious web sites. It                                                       
2025-08-19T12:26:49.3307793Z           is recommend where possible to not allow user-input to craft the      
2025-08-19T12:26:49.3307981Z   redirect URL. When user-                                                      
2025-08-19T12:26:49.3308326Z           input is necessary to craft the request, it is recommended to follow  
2025-08-19T12:26:49.3308513Z   OWASP best practices to                                                       
2025-08-19T12:26:49.3308843Z           restrict the URL to domains in an allowlist.                          
2025-08-19T12:26:49.3309163Z           Details: https://sg.run/2ZW45                                         
2025-08-19T12:26:49.3309963Z                                                                                 
2025-08-19T12:26:49.3310301Z           200┆ http.Redirect(w, r, redirectURL, http.StatusFound)
2025-08-19T12:26:49.3310493Z                                 
2025-08-19T12:26:49.3310616Z     pkg/auth/ldap_middleware.go 
2025-08-19T12:26:49.3310957Z        go.lang.security.audit.net.cookie-missing-secure.cookie-missing-secure   
2025-08-19T12:26:49.3311295Z           A session cookie was detected without setting the 'Secure' flag. The  
2025-08-19T12:26:49.3311468Z   'secure' flag for                                                             
2025-08-19T12:26:49.3311817Z           cookies prevents the client from transmitting the cookie over insecure
2025-08-19T12:26:49.3311994Z   channels such as                                                              
2025-08-19T12:26:49.3312322Z           HTTP. Set the 'Secure' flag by setting 'Secure' to 'true' in the      
2025-08-19T12:26:49.3312495Z   Options struct.                                                               
2025-08-19T12:26:49.3312807Z           Details: https://sg.run/N4G7                                          
2025-08-19T12:26:49.3313586Z                                                                                 
2025-08-19T12:26:49.3313999Z            ▶▶┆ Autofix ▶ s/(Secure\s*:\s+)false/\1true/g
2025-08-19T12:26:49.3314237Z           219┆ http.SetCookie(w, &http.Cookie{
2025-08-19T12:26:49.3314445Z           220┆    Name:                     
2025-08-19T12:26:49.3314563Z   "nephoran_session",                       
2025-08-19T12:26:49.3314757Z           221┆    Value:                
2025-08-19T12:26:49.3314864Z   sessionInfo.ID,                       
2025-08-19T12:26:49.3315042Z           222┆    Path:      
2025-08-19T12:26:49.3315128Z   "/",                       
2025-08-19T12:26:49.3315294Z           223┆    HttpOnly:   
2025-08-19T12:26:49.3315389Z   true,                       
2025-08-19T12:26:49.3315580Z           224┆    Secure:   r.TLS !=  
2025-08-19T12:26:49.3315676Z   nil,                                
2025-08-19T12:26:49.3315891Z           225┆    SameSite:                   
2025-08-19T12:26:49.3316029Z   http.SameSiteLaxMode,                       
2025-08-19T12:26:49.3316247Z           226┆    Expires:                     
2025-08-19T12:26:49.3316376Z   sessionInfo.ExpiresAt,                       
2025-08-19T12:26:49.3316501Z           227┆ })
2025-08-19T12:26:49.3316767Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3317039Z            ▶▶┆ Autofix ▶ s/(Secure\s*:\s+)false/\1true/g
2025-08-19T12:26:49.3317266Z           291┆ http.SetCookie(w, &http.Cookie{
2025-08-19T12:26:49.3317474Z           292┆    Name:                     
2025-08-19T12:26:49.3317736Z   "nephoran_session",                       
2025-08-19T12:26:49.3317898Z           293┆    Value:    
2025-08-19T12:26:49.3317990Z   "",                       
2025-08-19T12:26:49.3318150Z           294┆    Path:      
2025-08-19T12:26:49.3318235Z   "/",                       
2025-08-19T12:26:49.3318402Z           295┆    HttpOnly:   
2025-08-19T12:26:49.3318618Z   true,                       
2025-08-19T12:26:49.3318810Z           296┆    Secure:   r.TLS !=  
2025-08-19T12:26:49.3318906Z   nil,                                
2025-08-19T12:26:49.3319127Z           297┆    SameSite:                   
2025-08-19T12:26:49.3319250Z   http.SameSiteLaxMode,                       
2025-08-19T12:26:49.3319404Z           298┆    MaxAge:   
2025-08-19T12:26:49.3319498Z   -1,                       
2025-08-19T12:26:49.3319619Z           299┆ })
2025-08-19T12:26:49.3319802Z                                
2025-08-19T12:26:49.3319921Z     pkg/auth/providers/ldap.go 
2025-08-19T12:26:49.3320288Z        go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversi
2025-08-19T12:26:49.3320429Z   on                                                                            
2025-08-19T12:26:49.3320772Z           `MinVersion` is missing from this TLS configuration.  By default, as  
2025-08-19T12:26:49.3320934Z   of Go 1.22, TLS 1.2 is                                                        
2025-08-19T12:26:49.3321280Z           currently used as the minimum. General purpose web applications should
2025-08-19T12:26:49.3321445Z   default to TLS 1.3                                                            
2025-08-19T12:26:49.3321792Z           with all other protocols disabled.  Only where it is known that a web 
2025-08-19T12:26:49.3321976Z   server must support                                                           
2025-08-19T12:26:49.3322313Z           legacy clients with unsupported an insecure browsers (such as Internet
2025-08-19T12:26:49.3322490Z   Explorer 10), it may                                                          
2025-08-19T12:26:49.3322829Z           be necessary to enable TLS 1.0 to provide support. Add `MinVersion:   
2025-08-19T12:26:49.3323021Z   tls.VersionTLS13' to the                                                      
2025-08-19T12:26:49.3323363Z           TLS configuration to bump the minimum version to TLS 1.3.             
2025-08-19T12:26:49.3323686Z           Details: https://sg.run/oxEN                                          
2025-08-19T12:26:49.3324771Z                                                                                 
2025-08-19T12:26:49.3325182Z            ▶▶┆ Autofix ▶ tls.Config{ ServerName:         p.config.Host,  
2025-08-19T12:26:49.3325655Z                           InsecureSkipVerify: p.config.SkipVerify,       
2025-08-19T12:26:49.3325850Z   MinVersion: tls.VersionTLS13 }                                         
2025-08-19T12:26:49.3326057Z           198┆ tlsConfig := &tls.Config{
2025-08-19T12:26:49.3326302Z           199┆    ServerName:                    
2025-08-19T12:26:49.3326429Z   p.config.Host,                                 
2025-08-19T12:26:49.3326689Z           200┆    InsecureSkipVerify:                  
2025-08-19T12:26:49.3326840Z   p.config.SkipVerify,                                 
2025-08-19T12:26:49.3326957Z           201┆ }
2025-08-19T12:26:49.3327224Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3327600Z            ▶▶┆ Autofix ▶ tls.Config{ ServerName:         p.config.Host,  
2025-08-19T12:26:49.3328111Z                                   InsecureSkipVerify:                    
2025-08-19T12:26:49.3328320Z   p.config.SkipVerify, MinVersion: tls.VersionTLS13 }                    
2025-08-19T12:26:49.3328523Z           208┆ tlsConfig := &tls.Config{
2025-08-19T12:26:49.3328751Z           209┆    ServerName:                    
2025-08-19T12:26:49.3328877Z   p.config.Host,                                 
2025-08-19T12:26:49.3329130Z           210┆    InsecureSkipVerify:                  
2025-08-19T12:26:49.3329441Z   p.config.SkipVerify,                                 
2025-08-19T12:26:49.3329580Z           211┆ }
2025-08-19T12:26:49.3329803Z                                     
2025-08-19T12:26:49.3329931Z     pkg/auth/providers/ldap_pool.go 
2025-08-19T12:26:49.3330279Z        go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversi
2025-08-19T12:26:49.3330556Z   on                                                                            
2025-08-19T12:26:49.3330896Z           `MinVersion` is missing from this TLS configuration.  By default, as  
2025-08-19T12:26:49.3331054Z   of Go 1.22, TLS 1.2 is                                                        
2025-08-19T12:26:49.3331402Z           currently used as the minimum. General purpose web applications should
2025-08-19T12:26:49.3331573Z   default to TLS 1.3                                                            
2025-08-19T12:26:49.3331917Z           with all other protocols disabled.  Only where it is known that a web 
2025-08-19T12:26:49.3332117Z   server must support                                                           
2025-08-19T12:26:49.3332455Z           legacy clients with unsupported an insecure browsers (such as Internet
2025-08-19T12:26:49.3332626Z   Explorer 10), it may                                                          
2025-08-19T12:26:49.3332971Z           be necessary to enable TLS 1.0 to provide support. Add `MinVersion:   
2025-08-19T12:26:49.3333166Z   tls.VersionTLS13' to the                                                      
2025-08-19T12:26:49.3333506Z           TLS configuration to bump the minimum version to TLS 1.3.             
2025-08-19T12:26:49.3333953Z           Details: https://sg.run/oxEN                                          
2025-08-19T12:26:49.3334729Z                                                                                 
2025-08-19T12:26:49.3335145Z            ▶▶┆ Autofix ▶ tls.Config{ InsecureSkipVerify: p.config.SkipVerify,   
2025-08-19T12:26:49.3335364Z   MinVersion: tls.VersionTLS13 }                                                
2025-08-19T12:26:49.3335575Z           333┆ tlsConfig := &tls.Config{
2025-08-19T12:26:49.3335830Z           334┆    InsecureSkipVerify:                  
2025-08-19T12:26:49.3335974Z   p.config.SkipVerify,                                 
2025-08-19T12:26:49.3336101Z           335┆ }
2025-08-19T12:26:49.3336370Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3336736Z            ▶▶┆ Autofix ▶ tls.Config{ ServerName:         p.config.Host,  
2025-08-19T12:26:49.3337249Z                                   InsecureSkipVerify:                    
2025-08-19T12:26:49.3337459Z   p.config.SkipVerify, MinVersion: tls.VersionTLS13 }                    
2025-08-19T12:26:49.3337691Z           341┆ err = conn.StartTLS(&tls.Config{
2025-08-19T12:26:49.3337917Z           342┆    ServerName:                    
2025-08-19T12:26:49.3338045Z   p.config.Host,                                 
2025-08-19T12:26:49.3338308Z           343┆    InsecureSkipVerify:                  
2025-08-19T12:26:49.3338449Z   p.config.SkipVerify,                                 
2025-08-19T12:26:49.3338575Z           344┆ })
2025-08-19T12:26:49.3338834Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3339240Z            ▶▶┆ Autofix ▶ tls.Config{ InsecureSkipVerify: h.config.SkipVerify,   
2025-08-19T12:26:49.3339461Z   MinVersion: tls.VersionTLS13 }                                                
2025-08-19T12:26:49.3339663Z           537┆ tlsConfig := &tls.Config{
2025-08-19T12:26:49.3339914Z           538┆    InsecureSkipVerify:                  
2025-08-19T12:26:49.3340052Z   h.config.SkipVerify,                                 
2025-08-19T12:26:49.3340174Z           539┆ }
2025-08-19T12:26:49.3340431Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3340795Z            ▶▶┆ Autofix ▶ tls.Config{ ServerName:         h.config.Host,  
2025-08-19T12:26:49.3341484Z                                   InsecureSkipVerify:                    
2025-08-19T12:26:49.3341695Z   h.config.SkipVerify, MinVersion: tls.VersionTLS13 }                    
2025-08-19T12:26:49.3341929Z           544┆ err = conn.StartTLS(&tls.Config{
2025-08-19T12:26:49.3342158Z           545┆    ServerName:                    
2025-08-19T12:26:49.3342279Z   h.config.Host,                                 
2025-08-19T12:26:49.3342662Z           546┆    InsecureSkipVerify:                  
2025-08-19T12:26:49.3342806Z   h.config.SkipVerify,                                 
2025-08-19T12:26:49.3342928Z           547┆ })
2025-08-19T12:26:49.3343075Z                          
2025-08-19T12:26:49.3343181Z     pkg/auth/security.go 
2025-08-19T12:26:49.3343538Z        go.lang.security.audit.net.cookie-missing-httponly.cookie-missing-httponl
2025-08-19T12:26:49.3343674Z   y                                                                             
2025-08-19T12:26:49.3344126Z           A session cookie was detected without setting the 'HttpOnly' flag. The
2025-08-19T12:26:49.3344317Z   'HttpOnly' flag for                                                           
2025-08-19T12:26:49.3344669Z           cookies instructs the browser to forbid client-side scripts from      
2025-08-19T12:26:49.3344863Z   reading the cookie which                                                      
2025-08-19T12:26:49.3345211Z           mitigates XSS attacks. Set the 'HttpOnly' flag by setting 'HttpOnly'  
2025-08-19T12:26:49.3345372Z   to 'true' in the                                                              
2025-08-19T12:26:49.3345645Z           Cookie.                                                               
2025-08-19T12:26:49.3345963Z           Details: https://sg.run/b73e                                          
2025-08-19T12:26:49.3346729Z                                                                                 
2025-08-19T12:26:49.3347019Z            ▶▶┆ Autofix ▶ s/(HttpOnly\s*:\s+)false/\1true/g
2025-08-19T12:26:49.3347255Z           406┆ http.SetCookie(w, &http.Cookie{
2025-08-19T12:26:49.3347472Z           407┆    Name:                       
2025-08-19T12:26:49.3347594Z   cm.config.CookieName,                       
2025-08-19T12:26:49.3347761Z           408┆    Value:       
2025-08-19T12:26:49.3347858Z   token,                       
2025-08-19T12:26:49.3348018Z           409┆    Path:      
2025-08-19T12:26:49.3348110Z   "/",                       
2025-08-19T12:26:49.3348316Z           410┆    MaxAge:                 
2025-08-19T12:26:49.3348429Z   cm.config.MaxAge,                       
2025-08-19T12:26:49.3348651Z           411┆    Secure:                       
2025-08-19T12:26:49.3348780Z   cm.config.CookieSecure,                       
2025-08-19T12:26:49.3349014Z           412┆    HttpOnly:                       
2025-08-19T12:26:49.3349152Z   cm.config.CookieHTTPOnly,                       
2025-08-19T12:26:49.3349377Z           413┆    SameSite:                       
2025-08-19T12:26:49.3349523Z   cm.config.CookieSameSite,                       
2025-08-19T12:26:49.3349641Z           414┆ })
2025-08-19T12:26:49.3349905Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3350194Z            ▶▶┆ Autofix ▶ s/(HttpOnly\s*:\s+)false/\1true/g
2025-08-19T12:26:49.3350431Z           469┆ http.SetCookie(w, &http.Cookie{
2025-08-19T12:26:49.3350645Z           470┆    Name:                       
2025-08-19T12:26:49.3350774Z   cm.config.CookieName,                       
2025-08-19T12:26:49.3350948Z           471┆    Value:       
2025-08-19T12:26:49.3351042Z   token,                       
2025-08-19T12:26:49.3351205Z           472┆    Path:      
2025-08-19T12:26:49.3351296Z   "/",                       
2025-08-19T12:26:49.3351500Z           473┆    MaxAge:                 
2025-08-19T12:26:49.3351612Z   cm.config.MaxAge,                       
2025-08-19T12:26:49.3351833Z           474┆    Secure:                       
2025-08-19T12:26:49.3351967Z   cm.config.CookieSecure,                       
2025-08-19T12:26:49.3352348Z           475┆    HttpOnly:                       
2025-08-19T12:26:49.3352485Z   cm.config.CookieHTTPOnly,                       
2025-08-19T12:26:49.3352719Z           476┆    SameSite:                       
2025-08-19T12:26:49.3352852Z   cm.config.CookieSameSite,                       
2025-08-19T12:26:49.3352972Z           477┆ })
2025-08-19T12:26:49.3353375Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3353851Z        go.lang.security.audit.net.cookie-missing-secure.cookie-missing-secure   
2025-08-19T12:26:49.3354201Z           A session cookie was detected without setting the 'Secure' flag. The  
2025-08-19T12:26:49.3354376Z   'secure' flag for                                                             
2025-08-19T12:26:49.3354731Z           cookies prevents the client from transmitting the cookie over insecure
2025-08-19T12:26:49.3354903Z   channels such as                                                              
2025-08-19T12:26:49.3355233Z           HTTP. Set the 'Secure' flag by setting 'Secure' to 'true' in the      
2025-08-19T12:26:49.3355414Z   Options struct.                                                               
2025-08-19T12:26:49.3355731Z           Details: https://sg.run/N4G7                                          
2025-08-19T12:26:49.3356500Z                                                                                 
2025-08-19T12:26:49.3356793Z            ▶▶┆ Autofix ▶ s/(Secure\s*:\s+)false/\1true/g
2025-08-19T12:26:49.3357022Z           406┆ http.SetCookie(w, &http.Cookie{
2025-08-19T12:26:49.3357233Z           407┆    Name:                       
2025-08-19T12:26:49.3357360Z   cm.config.CookieName,                       
2025-08-19T12:26:49.3357527Z           408┆    Value:       
2025-08-19T12:26:49.3357619Z   token,                       
2025-08-19T12:26:49.3357779Z           409┆    Path:      
2025-08-19T12:26:49.3357873Z   "/",                       
2025-08-19T12:26:49.3358082Z           410┆    MaxAge:                 
2025-08-19T12:26:49.3358194Z   cm.config.MaxAge,                       
2025-08-19T12:26:49.3358419Z           411┆    Secure:                       
2025-08-19T12:26:49.3358547Z   cm.config.CookieSecure,                       
2025-08-19T12:26:49.3358775Z           412┆    HttpOnly:                       
2025-08-19T12:26:49.3358917Z   cm.config.CookieHTTPOnly,                       
2025-08-19T12:26:49.3359150Z           413┆    SameSite:                       
2025-08-19T12:26:49.3359284Z   cm.config.CookieSameSite,                       
2025-08-19T12:26:49.3359403Z           414┆ })
2025-08-19T12:26:49.3359669Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3359940Z            ▶▶┆ Autofix ▶ s/(Secure\s*:\s+)false/\1true/g
2025-08-19T12:26:49.3360166Z           469┆ http.SetCookie(w, &http.Cookie{
2025-08-19T12:26:49.3360380Z           470┆    Name:                       
2025-08-19T12:26:49.3360503Z   cm.config.CookieName,                       
2025-08-19T12:26:49.3360673Z           471┆    Value:       
2025-08-19T12:26:49.3360763Z   token,                       
2025-08-19T12:26:49.3360929Z           472┆    Path:      
2025-08-19T12:26:49.3361013Z   "/",                       
2025-08-19T12:26:49.3361211Z           473┆    MaxAge:                 
2025-08-19T12:26:49.3361328Z   cm.config.MaxAge,                       
2025-08-19T12:26:49.3361552Z           474┆    Secure:                       
2025-08-19T12:26:49.3361678Z   cm.config.CookieSecure,                       
2025-08-19T12:26:49.3361907Z           475┆    HttpOnly:                       
2025-08-19T12:26:49.3362042Z   cm.config.CookieHTTPOnly,                       
2025-08-19T12:26:49.3362266Z           476┆    SameSite:                       
2025-08-19T12:26:49.3362399Z   cm.config.CookieSameSite,                       
2025-08-19T12:26:49.3362522Z           477┆ })
2025-08-19T12:26:49.3362717Z                                 
2025-08-19T12:26:49.3362996Z     pkg/auth/session_manager.go 
2025-08-19T12:26:49.3363350Z        go.lang.security.audit.net.cookie-missing-secure.cookie-missing-secure   
2025-08-19T12:26:49.3363867Z           A session cookie was detected without setting the 'Secure' flag. The  
2025-08-19T12:26:49.3364173Z   'secure' flag for                                                             
2025-08-19T12:26:49.3364539Z           cookies prevents the client from transmitting the cookie over insecure
2025-08-19T12:26:49.3364878Z   channels such as                                                              
2025-08-19T12:26:49.3365204Z           HTTP. Set the 'Secure' flag by setting 'Secure' to 'true' in the      
2025-08-19T12:26:49.3365377Z   Options struct.                                                               
2025-08-19T12:26:49.3365701Z           Details: https://sg.run/N4G7                                          
2025-08-19T12:26:49.3366468Z                                                                                 
2025-08-19T12:26:49.3366772Z            ▶▶┆ Autofix ▶ s/(Secure\s*:\s+)false/\1true/g
2025-08-19T12:26:49.3366980Z           760┆ cookie := &http.Cookie{
2025-08-19T12:26:49.3367189Z           761┆    Name:                     
2025-08-19T12:26:49.3367303Z   "nephoran_session",                       
2025-08-19T12:26:49.3367488Z           762┆    Value:           
2025-08-19T12:26:49.3367591Z   sessionID,                       
2025-08-19T12:26:49.3367810Z           763┆    Path:                       
2025-08-19T12:26:49.3367940Z   sm.config.CookiePath,                       
2025-08-19T12:26:49.3368162Z           764┆    Domain:                       
2025-08-19T12:26:49.3368292Z   sm.config.CookieDomain,                       
2025-08-19T12:26:49.3368518Z           765┆    Secure:                        
2025-08-19T12:26:49.3368661Z   sm.config.SecureCookies,                       
2025-08-19T12:26:49.3368828Z           766┆    HttpOnly:   
2025-08-19T12:26:49.3368918Z   true,                       
2025-08-19T12:26:49.3369228Z           767┆    MaxAge:                                        
2025-08-19T12:26:49.3369416Z   int(sm.config.SessionTimeout.Seconds()),                       
2025-08-19T12:26:49.3369535Z           768┆ }
2025-08-19T12:26:49.3369806Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3370082Z            ▶▶┆ Autofix ▶ s/(Secure\s*:\s+)false/\1true/g
2025-08-19T12:26:49.3370289Z           784┆ cookie := &http.Cookie{
2025-08-19T12:26:49.3370496Z           785┆    Name:                     
2025-08-19T12:26:49.3370617Z   "nephoran_session",                       
2025-08-19T12:26:49.3370774Z           786┆    Value:    
2025-08-19T12:26:49.3370860Z   "",                       
2025-08-19T12:26:49.3371076Z           787┆    Path:                       
2025-08-19T12:26:49.3371199Z   sm.config.CookiePath,                       
2025-08-19T12:26:49.3371419Z           788┆    Domain:                       
2025-08-19T12:26:49.3371547Z   sm.config.CookieDomain,                       
2025-08-19T12:26:49.3371762Z           789┆    Expires:  time.Unix(0, 
2025-08-19T12:26:49.3371860Z   0),                                    
2025-08-19T12:26:49.3372016Z           790┆    MaxAge:   
2025-08-19T12:26:49.3372112Z   -1,                       
2025-08-19T12:26:49.3372275Z           791┆    HttpOnly:   
2025-08-19T12:26:49.3372367Z   true,                       
2025-08-19T12:26:49.3372490Z           792┆ }
2025-08-19T12:26:49.3372702Z                                   
2025-08-19T12:26:49.3372823Z     pkg/auth/testutil/fixtures.go 
2025-08-19T12:26:49.3373077Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3373342Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3373598Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3374280Z                                                                  
2025-08-19T12:26:49.3374490Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3374809Z             5┆ "math/rand"
2025-08-19T12:26:49.3374993Z                                
2025-08-19T12:26:49.3375115Z     pkg/auth/testutil/mocks.go 
2025-08-19T12:26:49.3375469Z        go.lang.security.injection.open-redirect.open-redirect                   
2025-08-19T12:26:49.3375810Z           An HTTP redirect was found to be crafted from user-input `r`. This can
2025-08-19T12:26:49.3375996Z   lead to open redirect                                                         
2025-08-19T12:26:49.3376494Z           vulnerabilities, potentially allowing attackers to redirect users to  
2025-08-19T12:26:49.3376686Z   malicious web sites. It                                                       
2025-08-19T12:26:49.3377032Z           is recommend where possible to not allow user-input to craft the      
2025-08-19T12:26:49.3377228Z   redirect URL. When user-                                                      
2025-08-19T12:26:49.3377567Z           input is necessary to craft the request, it is recommended to follow  
2025-08-19T12:26:49.3377766Z   OWASP best practices to                                                       
2025-08-19T12:26:49.3378100Z           restrict the URL to domains in an allowlist.                          
2025-08-19T12:26:49.3378425Z           Details: https://sg.run/2ZW45                                         
2025-08-19T12:26:49.3379199Z                                                                                 
2025-08-19T12:26:49.3379587Z           456┆ http.Redirect(w, r, redirectURL.String(), http.StatusFound)
2025-08-19T12:26:49.3379791Z                                  
2025-08-19T12:26:49.3379911Z     pkg/auth/testutil/testing.go 
2025-08-19T12:26:49.3380256Z        go.lang.security.audit.net.cookie-missing-secure.cookie-missing-secure   
2025-08-19T12:26:49.3380601Z           A session cookie was detected without setting the 'Secure' flag. The  
2025-08-19T12:26:49.3380771Z   'secure' flag for                                                             
2025-08-19T12:26:49.3381132Z           cookies prevents the client from transmitting the cookie over insecure
2025-08-19T12:26:49.3381307Z   channels such as                                                              
2025-08-19T12:26:49.3381631Z           HTTP. Set the 'Secure' flag by setting 'Secure' to 'true' in the      
2025-08-19T12:26:49.3381806Z   Options struct.                                                               
2025-08-19T12:26:49.3382133Z           Details: https://sg.run/N4G7                                          
2025-08-19T12:26:49.3382899Z                                                                                 
2025-08-19T12:26:49.3383180Z            ▶▶┆ Autofix ▶ s/(Secure\s*:\s+)false/\1true/g
2025-08-19T12:26:49.3383419Z           191┆ http.SetCookie(w, &http.Cookie{
2025-08-19T12:26:49.3383615Z           192┆    Name:                 
2025-08-19T12:26:49.3383840Z   "test-session",                       
2025-08-19T12:26:49.3384027Z           193┆    Value:           
2025-08-19T12:26:49.3384138Z   sessionID,                       
2025-08-19T12:26:49.3384301Z           194┆    Path:      
2025-08-19T12:26:49.3384388Z   "/",                       
2025-08-19T12:26:49.3384557Z           195┆    HttpOnly:   
2025-08-19T12:26:49.3384648Z   true,                       
2025-08-19T12:26:49.3384873Z           196┆    Secure:   false, // For     
2025-08-19T12:26:49.3384990Z   testing                                     
2025-08-19T12:26:49.3385119Z           197┆ })
2025-08-19T12:26:49.3385386Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3385716Z        go.lang.security.injection.open-redirect.open-redirect                   
2025-08-19T12:26:49.3386056Z           An HTTP redirect was found to be crafted from user-input `r`. This can
2025-08-19T12:26:49.3386241Z   lead to open redirect                                                         
2025-08-19T12:26:49.3386597Z           vulnerabilities, potentially allowing attackers to redirect users to  
2025-08-19T12:26:49.3386935Z   malicious web sites. It                                                       
2025-08-19T12:26:49.3387281Z           is recommend where possible to not allow user-input to craft the      
2025-08-19T12:26:49.3387472Z   redirect URL. When user-                                                      
2025-08-19T12:26:49.3387816Z           input is necessary to craft the request, it is recommended to follow  
2025-08-19T12:26:49.3388165Z   OWASP best practices to                                                       
2025-08-19T12:26:49.3388490Z           restrict the URL to domains in an allowlist.                          
2025-08-19T12:26:49.3388811Z           Details: https://sg.run/2ZW45                                         
2025-08-19T12:26:49.3389578Z                                                                                 
2025-08-19T12:26:49.3389953Z           435┆ http.Redirect(w, r, redirectURL.String(), http.StatusFound)
2025-08-19T12:26:49.3390167Z                                    
2025-08-19T12:26:49.3390303Z     pkg/chaos/failure_injection.go 
2025-08-19T12:26:49.3390562Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3390823Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3391081Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3391619Z                                                                  
2025-08-19T12:26:49.3391826Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3391989Z             7┆ "math/rand"
2025-08-19T12:26:49.3392285Z                                             
2025-08-19T12:26:49.3392434Z     pkg/controllers/e2nodeset_controller.go 
2025-08-19T12:26:49.3392685Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3392946Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3393197Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3393901Z                                                                  
2025-08-19T12:26:49.3394110Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3394269Z             8┆ "math/rand"
2025-08-19T12:26:49.3394604Z                                                 
2025-08-19T12:26:49.3394773Z     pkg/controllers/networkintent_controller.go 
2025-08-19T12:26:49.3395025Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3395288Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3395540Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3396452Z                                                                  
2025-08-19T12:26:49.3396825Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3397109Z             8┆ "math/rand"
2025-08-19T12:26:49.3397741Z                                                  
2025-08-19T12:26:49.3397925Z     pkg/controllers/optimized/backoff_manager.go 
2025-08-19T12:26:49.3398204Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3398469Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3398834Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3399375Z                                                                  
2025-08-19T12:26:49.3399600Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3399765Z             6┆ "math/rand"
2025-08-19T12:26:49.3400070Z                                              
2025-08-19T12:26:49.3400218Z     pkg/controllers/testutil/test_helpers.go 
2025-08-19T12:26:49.3400476Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3400731Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3400983Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3401525Z                                                                  
2025-08-19T12:26:49.3401934Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3402092Z             6┆ "math/rand"
2025-08-19T12:26:49.3402316Z                                     
2025-08-19T12:26:49.3402442Z     pkg/disaster/restore_manager.go 
2025-08-19T12:26:49.3402795Z        go.lang.security.decompression_bomb.potential-dos-via-decompression-bomb 
2025-08-19T12:26:49.3403150Z           Detected a possible denial-of-service via a zip bomb attack. By       
2025-08-19T12:26:49.3403484Z   limiting the max bytes read,                                                  
2025-08-19T12:26:49.3404098Z           you can mitigate this attack. `io.CopyN()` can specify a size.        
2025-08-19T12:26:49.3404430Z           Details: https://sg.run/RodK                                          
2025-08-19T12:26:49.3405204Z                                                                                 
2025-08-19T12:26:49.3405588Z            ▶▶┆ Autofix ▶                                                        
2025-08-19T12:26:49.3405805Z   s/(.*)(Copy|CopyBuffer)\((.*?),(.*?)(\)|,.*\))/\1CopyN(\3, \4,                
2025-08-19T12:26:49.3405979Z   1024*1024*256)/g                                                              
2025-08-19T12:26:49.3406179Z           995┆ _, err = io.Copy(f, tr)
2025-08-19T12:26:49.3406338Z                            
2025-08-19T12:26:49.3406454Z     pkg/errors/recovery.go 
2025-08-19T12:26:49.3406719Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3406977Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3407228Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3407770Z                                                                  
2025-08-19T12:26:49.3407968Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3408126Z             6┆ "math/rand"
2025-08-19T12:26:49.3408252Z                      
2025-08-19T12:26:49.3408348Z     pkg/llm/cache.go 
2025-08-19T12:26:49.3408669Z        go.lang.security.audit.crypto.use_of_weak_crypto.use-of-md5              
2025-08-19T12:26:49.3409021Z           Detected MD5 hash algorithm which is considered insecure. MD5 is not  
2025-08-19T12:26:49.3409250Z   collision resistant and                                                       
2025-08-19T12:26:49.3409593Z           is therefore not suitable as a cryptographic signature. Use SHA256 or 
2025-08-19T12:26:49.3409764Z   SHA3 instead.                                                                 
2025-08-19T12:26:49.3410082Z           Details: https://sg.run/2xB5                                          
2025-08-19T12:26:49.3410848Z                                                                                 
2025-08-19T12:26:49.3411084Z           711┆ hash := md5.Sum([]byte(combined))
2025-08-19T12:26:49.3411308Z                                     
2025-08-19T12:26:49.3411434Z     pkg/llm/optimized_controller.go 
2025-08-19T12:26:49.3411748Z        go.lang.security.audit.unsafe.use-of-unsafe-block                        
2025-08-19T12:26:49.3412100Z           Using the unsafe package in Go gives you low-level memory management  
2025-08-19T12:26:49.3412262Z   and many of the                                                               
2025-08-19T12:26:49.3412595Z           strengths of the C language, but also steps around the type safety of 
2025-08-19T12:26:49.3412769Z   Go and can lead to                                                            
2025-08-19T12:26:49.3413116Z           buffer overflows and possible arbitrary code execution by an attacker.
2025-08-19T12:26:49.3413299Z   Only use this package                                                         
2025-08-19T12:26:49.3413625Z           if you absolutely know what you're doing.                             
2025-08-19T12:26:49.3414063Z           Details: https://sg.run/qxEx                                          
2025-08-19T12:26:49.3414830Z                                                                                 
2025-08-19T12:26:49.3415354Z           476┆ dataBytes := *(*[]byte)(unsafe.Pointer(&responseData))
2025-08-19T12:26:49.3415643Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3415980Z           491┆ return *(*string)(unsafe.Pointer(&contentBytes)), nil
2025-08-19T12:26:49.3416214Z                                      
2025-08-19T12:26:49.3416348Z     pkg/llm/optimized_http_client.go 
2025-08-19T12:26:49.3416801Z        go.lang.security.audit.unsafe.use-of-unsafe-block                        
2025-08-19T12:26:49.3417144Z           Using the unsafe package in Go gives you low-level memory management  
2025-08-19T12:26:49.3417311Z   and many of the                                                               
2025-08-19T12:26:49.3417645Z           strengths of the C language, but also steps around the type safety of 
2025-08-19T12:26:49.3417808Z   Go and can lead to                                                            
2025-08-19T12:26:49.3418163Z           buffer overflows and possible arbitrary code execution by an attacker.
2025-08-19T12:26:49.3418350Z   Only use this package                                                         
2025-08-19T12:26:49.3418675Z           if you absolutely know what you're doing.                             
2025-08-19T12:26:49.3418991Z           Details: https://sg.run/qxEx                                          
2025-08-19T12:26:49.3419764Z                                                                                 
2025-08-19T12:26:49.3420094Z           486┆ content = *(*string)(unsafe.Pointer(&contentBytes))
2025-08-19T12:26:49.3420357Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3420677Z           493┆ content = *(*string)(unsafe.Pointer(&contentBytes))
2025-08-19T12:26:49.3420843Z                             
2025-08-19T12:26:49.3420952Z     pkg/llm/retry_engine.go 
2025-08-19T12:26:49.3421215Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3421480Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3421732Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3422268Z                                                                  
2025-08-19T12:26:49.3422471Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3422625Z            12┆ "math/rand"
2025-08-19T12:26:49.3422900Z                                          
2025-08-19T12:26:49.3423040Z     pkg/middleware/rate_limit_example.go 
2025-08-19T12:26:49.3423342Z        go.lang.security.audit.net.use-tls.use-tls                               
2025-08-19T12:26:49.3423683Z           Found an HTTP server without TLS. Use 'http.ListenAndServeTLS'        
2025-08-19T12:26:49.3423963Z   instead. See                                                                  
2025-08-19T12:26:49.3424320Z           https://golang.org/pkg/net/http/#ListenAndServeTLS for more           
2025-08-19T12:26:49.3424487Z   information.                                                                  
2025-08-19T12:26:49.3424815Z           Details: https://sg.run/dKbY                                          
2025-08-19T12:26:49.3425580Z                                                                                 
2025-08-19T12:26:49.3425989Z            ▶▶┆ Autofix ▶ http.ListenAndServeTLS(":8080", certFile, keyFile,     
2025-08-19T12:26:49.3426140Z   router)                                                                       
2025-08-19T12:26:49.3426408Z            44┆ http.ListenAndServe(":8080", router)
2025-08-19T12:26:49.3426669Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3427070Z            ▶▶┆ Autofix ▶ http.ListenAndServeTLS(":8080", certFile, keyFile,     
2025-08-19T12:26:49.3427225Z   router)                                                                       
2025-08-19T12:26:49.3427478Z            85┆ http.ListenAndServe(":8080", router)
2025-08-19T12:26:49.3427772Z                                             
2025-08-19T12:26:49.3428074Z     pkg/monitoring/alerting/alert_router.go 
2025-08-19T12:26:49.3428392Z        go.lang.security.audit.crypto.use_of_weak_crypto.use-of-md5              
2025-08-19T12:26:49.3428738Z           Detected MD5 hash algorithm which is considered insecure. MD5 is not  
2025-08-19T12:26:49.3428936Z   collision resistant and                                                       
2025-08-19T12:26:49.3429400Z           is therefore not suitable as a cryptographic signature. Use SHA256 or 
2025-08-19T12:26:49.3429566Z   SHA3 instead.                                                                 
2025-08-19T12:26:49.3429881Z           Details: https://sg.run/2xB5                                          
2025-08-19T12:26:49.3430651Z                                                                                 
2025-08-19T12:26:49.3431004Z           683┆ ID:             fmt.Sprintf("group-%x",                          
2025-08-19T12:26:49.3431199Z   md5.Sum([]byte(fingerprint))),                                                
2025-08-19T12:26:49.3431471Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3431817Z           709┆ ID:             fmt.Sprintf("group-%x",                          
2025-08-19T12:26:49.3432032Z   md5.Sum([]byte(fmt.Sprintf("%s-%d", fingerprint, time.Now().Unix())))),       
2025-08-19T12:26:49.3432296Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3432601Z           740┆ return fmt.Sprintf("%x", md5.Sum([]byte(data)))
2025-08-19T12:26:49.3432959Z                                                  
2025-08-19T12:26:49.3433122Z     pkg/monitoring/alerting/sla_alert_manager.go 
2025-08-19T12:26:49.3433447Z        go.lang.security.audit.crypto.use_of_weak_crypto.use-of-md5              
2025-08-19T12:26:49.3433946Z           Detected MD5 hash algorithm which is considered insecure. MD5 is not  
2025-08-19T12:26:49.3434160Z   collision resistant and                                                       
2025-08-19T12:26:49.3434515Z           is therefore not suitable as a cryptographic signature. Use SHA256 or 
2025-08-19T12:26:49.3434679Z   SHA3 instead.                                                                 
2025-08-19T12:26:49.3434994Z           Details: https://sg.run/2xB5                                          
2025-08-19T12:26:49.3435764Z                                                                                 
2025-08-19T12:26:49.3436073Z           836┆ return fmt.Sprintf("%x", md5.Sum([]byte(data)))
2025-08-19T12:26:49.3436337Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3436660Z           842┆ return fmt.Sprintf("%x", md5.Sum([]byte(data)))[:8]
2025-08-19T12:26:49.3436966Z                                              
2025-08-19T12:26:49.3437115Z     pkg/monitoring/availability/synthetic.go 
2025-08-19T12:26:49.3437379Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3437639Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3437898Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3438438Z                                                                  
2025-08-19T12:26:49.3438640Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3438794Z            10┆ "math/rand"
2025-08-19T12:26:49.3439055Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3439415Z        go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversi
2025-08-19T12:26:49.3439552Z   on                                                                            
2025-08-19T12:26:49.3439891Z           `MinVersion` is missing from this TLS configuration.  By default, as  
2025-08-19T12:26:49.3440054Z   of Go 1.22, TLS 1.2 is                                                        
2025-08-19T12:26:49.3440395Z           currently used as the minimum. General purpose web applications should
2025-08-19T12:26:49.3440562Z   default to TLS 1.3                                                            
2025-08-19T12:26:49.3441091Z           with all other protocols disabled.  Only where it is known that a web 
2025-08-19T12:26:49.3441276Z   server must support                                                           
2025-08-19T12:26:49.3441614Z           legacy clients with unsupported an insecure browsers (such as Internet
2025-08-19T12:26:49.3441789Z   Explorer 10), it may                                                          
2025-08-19T12:26:49.3442246Z           be necessary to enable TLS 1.0 to provide support. Add `MinVersion:   
2025-08-19T12:26:49.3442438Z   tls.VersionTLS13' to the                                                      
2025-08-19T12:26:49.3442774Z           TLS configuration to bump the minimum version to TLS 1.3.             
2025-08-19T12:26:49.3443098Z           Details: https://sg.run/oxEN                                          
2025-08-19T12:26:49.3444168Z                                                                                 
2025-08-19T12:26:49.3444618Z            ▶▶┆ Autofix ▶ tls.Config{ InsecureSkipVerify: config.HTTPSkipTLS,    
2025-08-19T12:26:49.3444835Z   MinVersion: tls.VersionTLS13 }                                                
2025-08-19T12:26:49.3445064Z           224┆ TLSClientConfig: &tls.Config{
2025-08-19T12:26:49.3445319Z           225┆    InsecureSkipVerify:                 
2025-08-19T12:26:49.3445477Z   config.HTTPSkipTLS,                                 
2025-08-19T12:26:49.3445602Z           226┆ },
2025-08-19T12:26:49.3445918Z                                               
2025-08-19T12:26:49.3446077Z     pkg/monitoring/predictive_sla_analyzer.go 
2025-08-19T12:26:49.3446335Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3446593Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3446846Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3447388Z                                                                  
2025-08-19T12:26:49.3447596Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3447755Z             8┆ "math/rand"
2025-08-19T12:26:49.3448063Z                                              
2025-08-19T12:26:49.3448212Z     pkg/monitoring/throughput/load_tester.go 
2025-08-19T12:26:49.3448465Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3448735Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3448988Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3449525Z                                                                  
2025-08-19T12:26:49.3449722Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3449885Z             6┆ "math/rand"
2025-08-19T12:26:49.3450158Z                                           
2025-08-19T12:26:49.3450298Z     pkg/nephio/testutil/porch_fixtures.go 
2025-08-19T12:26:49.3450553Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3450816Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3451069Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3451610Z                                                                  
2025-08-19T12:26:49.3451807Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3451959Z            22┆ "math/rand"
2025-08-19T12:26:49.3452171Z                                   
2025-08-19T12:26:49.3452300Z     pkg/nephio/webui/websocket.go 
2025-08-19T12:26:49.3452656Z        go.gorilla.security.audit.websocket-missing-origin-check.websocket-missin
2025-08-19T12:26:49.3452836Z   g-origin-check                                                                
2025-08-19T12:26:49.3453178Z           The Origin header in the HTTP WebSocket handshake is used to guarantee
2025-08-19T12:26:49.3453361Z   that the connection                                                           
2025-08-19T12:26:49.3454015Z           accepted by the WebSocket is from a trusted origin domain. Failure to 
2025-08-19T12:26:49.3454199Z   enforce can lead to                                                           
2025-08-19T12:26:49.3454537Z           Cross Site Request Forgery (CSRF). As per "gorilla/websocket"         
2025-08-19T12:26:49.3454757Z   documentation: "A CheckOrigin                                                 
2025-08-19T12:26:49.3455254Z           function should carefully validate the request origin to prevent      
2025-08-19T12:26:49.3455442Z   cross-site request                                                            
2025-08-19T12:26:49.3455723Z           forgery."                                                             
2025-08-19T12:26:49.3456052Z           Details: https://sg.run/xXpz                                          
2025-08-19T12:26:49.3456832Z                                                                                 
2025-08-19T12:26:49.3457140Z            56┆ conn, err := ws.upgrader.Upgrade(w, r, nil)
2025-08-19T12:26:49.3457476Z                                                
2025-08-19T12:26:49.3457638Z     pkg/optimization/ai_configuration_tuner.go 
2025-08-19T12:26:49.3457898Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3458157Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3458416Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3458963Z                                                                  
2025-08-19T12:26:49.3459163Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3459322Z            23┆ "math/rand"
2025-08-19T12:26:49.3459646Z                                                
2025-08-19T12:26:49.3459801Z     pkg/optimization/optimization_dashboard.go 
2025-08-19T12:26:49.3460158Z        go.gorilla.security.audit.websocket-missing-origin-check.websocket-missin
2025-08-19T12:26:49.3460342Z   g-origin-check                                                                
2025-08-19T12:26:49.3460689Z           The Origin header in the HTTP WebSocket handshake is used to guarantee
2025-08-19T12:26:49.3460873Z   that the connection                                                           
2025-08-19T12:26:49.3461219Z           accepted by the WebSocket is from a trusted origin domain. Failure to 
2025-08-19T12:26:49.3461398Z   enforce can lead to                                                           
2025-08-19T12:26:49.3461746Z           Cross Site Request Forgery (CSRF). As per "gorilla/websocket"         
2025-08-19T12:26:49.3461961Z   documentation: "A CheckOrigin                                                 
2025-08-19T12:26:49.3462314Z           function should carefully validate the request origin to prevent      
2025-08-19T12:26:49.3462496Z   cross-site request                                                            
2025-08-19T12:26:49.3462780Z           forgery."                                                             
2025-08-19T12:26:49.3463099Z           Details: https://sg.run/xXpz                                          
2025-08-19T12:26:49.3463985Z                                                                                 
2025-08-19T12:26:49.3464331Z           848┆ conn, err := dashboard.wsUpgrader.Upgrade(w, r, nil)
2025-08-19T12:26:49.3464511Z                               
2025-08-19T12:26:49.3464625Z     pkg/oran/a1/a1_adaptor.go 
2025-08-19T12:26:49.3464884Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3465152Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3465407Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3465952Z                                                                  
2025-08-19T12:26:49.3466155Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3466309Z            10┆ "math/rand"
2025-08-19T12:26:49.3466485Z                               
2025-08-19T12:26:49.3466751Z     pkg/oran/e2/e2_adaptor.go 
2025-08-19T12:26:49.3467004Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3467261Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3467514Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3468064Z                                                                  
2025-08-19T12:26:49.3468411Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3468565Z            10┆ "math/rand"
2025-08-19T12:26:49.3468772Z                                  
2025-08-19T12:26:49.3468892Z     pkg/oran/o1/fault_manager.go 
2025-08-19T12:26:49.3469251Z        go.gorilla.security.audit.websocket-missing-origin-check.websocket-missin
2025-08-19T12:26:49.3469434Z   g-origin-check                                                                
2025-08-19T12:26:49.3469774Z           The Origin header in the HTTP WebSocket handshake is used to guarantee
2025-08-19T12:26:49.3469962Z   that the connection                                                           
2025-08-19T12:26:49.3470301Z           accepted by the WebSocket is from a trusted origin domain. Failure to 
2025-08-19T12:26:49.3470480Z   enforce can lead to                                                           
2025-08-19T12:26:49.3470819Z           Cross Site Request Forgery (CSRF). As per "gorilla/websocket"         
2025-08-19T12:26:49.3471034Z   documentation: "A CheckOrigin                                                 
2025-08-19T12:26:49.3471390Z           function should carefully validate the request origin to prevent      
2025-08-19T12:26:49.3471572Z   cross-site request                                                            
2025-08-19T12:26:49.3471849Z           forgery."                                                             
2025-08-19T12:26:49.3472169Z           Details: https://sg.run/xXpz                                          
2025-08-19T12:26:49.3472945Z                                                                                 
2025-08-19T12:26:49.3473281Z           611┆ conn, err := fm.websocketUpgrader.Upgrade(w, r, nil)
2025-08-19T12:26:49.3473493Z                                   
2025-08-19T12:26:49.3473615Z     pkg/oran/o1/netconf_client.go 
2025-08-19T12:26:49.3474083Z        go.lang.security.audit.crypto.insecure_ssh.avoid-ssh-insecure-ignore-host
2025-08-19T12:26:49.3474238Z   -key                                                                          
2025-08-19T12:26:49.3474595Z           Disabled host key verification detected. This allows man-in-the-middle
2025-08-19T12:26:49.3474771Z   attacks. Use the                                                              
2025-08-19T12:26:49.3475138Z           'golang.org/x/crypto/ssh/knownhosts' package to do host key           
2025-08-19T12:26:49.3475323Z   verification. See                                                             
2025-08-19T12:26:49.3475685Z           https://skarlso.github.io/2019/02/17/go-ssh-with-host-key-verification
2025-08-19T12:26:49.3475871Z   / to learn more about                                                         
2025-08-19T12:26:49.3476193Z           the problem and how to fix it.                                        
2025-08-19T12:26:49.3476510Z           Details: https://sg.run/Yv6X                                          
2025-08-19T12:26:49.3477287Z                                                                                 
2025-08-19T12:26:49.3477715Z           152┆ HostKeyCallback: ssh.InsecureIgnoreHostKey(), // In production,  
2025-08-19T12:26:49.3477928Z   use proper host key verification                                              
2025-08-19T12:26:49.3478120Z                                 
2025-08-19T12:26:49.3478244Z     pkg/oran/o1/o1_streaming.go 
2025-08-19T12:26:49.3478600Z        go.gorilla.security.audit.websocket-missing-origin-check.websocket-missin
2025-08-19T12:26:49.3478776Z   g-origin-check                                                                
2025-08-19T12:26:49.3479264Z           The Origin header in the HTTP WebSocket handshake is used to guarantee
2025-08-19T12:26:49.3479446Z   that the connection                                                           
2025-08-19T12:26:49.3479787Z           accepted by the WebSocket is from a trusted origin domain. Failure to 
2025-08-19T12:26:49.3479962Z   enforce can lead to                                                           
2025-08-19T12:26:49.3480429Z           Cross Site Request Forgery (CSRF). As per "gorilla/websocket"         
2025-08-19T12:26:49.3480640Z   documentation: "A CheckOrigin                                                 
2025-08-19T12:26:49.3480989Z           function should carefully validate the request origin to prevent      
2025-08-19T12:26:49.3481180Z   cross-site request                                                            
2025-08-19T12:26:49.3481462Z           forgery."                                                             
2025-08-19T12:26:49.3481783Z           Details: https://sg.run/xXpz                                          
2025-08-19T12:26:49.3482566Z                                                                                 
2025-08-19T12:26:49.3482883Z           291┆ conn, err := s.upgrader.Upgrade(w, r, nil)
2025-08-19T12:26:49.3483139Z                                        
2025-08-19T12:26:49.3483286Z     pkg/performance/cache_optimized.go 
2025-08-19T12:26:49.3483608Z        go.lang.security.audit.unsafe.use-of-unsafe-block                        
2025-08-19T12:26:49.3484251Z           Using the unsafe package in Go gives you low-level memory management  
2025-08-19T12:26:49.3484423Z   and many of the                                                               
2025-08-19T12:26:49.3484770Z           strengths of the C language, but also steps around the type safety of 
2025-08-19T12:26:49.3484936Z   Go and can lead to                                                            
2025-08-19T12:26:49.3485285Z           buffer overflows and possible arbitrary code execution by an attacker.
2025-08-19T12:26:49.3485481Z   Only use this package                                                         
2025-08-19T12:26:49.3485809Z           if you absolutely know what you're doing.                             
2025-08-19T12:26:49.3486131Z           Details: https://sg.run/qxEx                                          
2025-08-19T12:26:49.3486911Z                                                                                 
2025-08-19T12:26:49.3487172Z           625┆ return int64(unsafe.Sizeof(value))
2025-08-19T12:26:49.3487593Z                                                        
2025-08-19T12:26:49.3487781Z     pkg/performance/distributed/telecom_load_tester.go 
2025-08-19T12:26:49.3488051Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3488311Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3488570Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3489118Z                                                                  
2025-08-19T12:26:49.3489320Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3489479Z             9┆ "math/rand"
2025-08-19T12:26:49.3489770Z                                            
2025-08-19T12:26:49.3489914Z     pkg/performance/example_integration.go 
2025-08-19T12:26:49.3490232Z        go.lang.security.audit.unsafe.use-of-unsafe-block                        
2025-08-19T12:26:49.3490591Z           Using the unsafe package in Go gives you low-level memory management  
2025-08-19T12:26:49.3490764Z   and many of the                                                               
2025-08-19T12:26:49.3491108Z           strengths of the C language, but also steps around the type safety of 
2025-08-19T12:26:49.3491282Z   Go and can lead to                                                            
2025-08-19T12:26:49.3491635Z           buffer overflows and possible arbitrary code execution by an attacker.
2025-08-19T12:26:49.3492041Z   Only use this package                                                         
2025-08-19T12:26:49.3492378Z           if you absolutely know what you're doing.                             
2025-08-19T12:26:49.3492696Z           Details: https://sg.run/qxEx                                          
2025-08-19T12:26:49.3493472Z                                                                                 
2025-08-19T12:26:49.3494016Z           183┆ ringBuffer.Push(unsafe.Pointer(&data))
2025-08-19T12:26:49.3494280Z                                        
2025-08-19T12:26:49.3494416Z     pkg/performance/goroutine_pools.go 
2025-08-19T12:26:49.3494741Z        go.lang.security.audit.unsafe.use-of-unsafe-block                        
2025-08-19T12:26:49.3495097Z           Using the unsafe package in Go gives you low-level memory management  
2025-08-19T12:26:49.3495259Z   and many of the                                                               
2025-08-19T12:26:49.3495603Z           strengths of the C language, but also steps around the type safety of 
2025-08-19T12:26:49.3495774Z   Go and can lead to                                                            
2025-08-19T12:26:49.3496126Z           buffer overflows and possible arbitrary code execution by an attacker.
2025-08-19T12:26:49.3496309Z   Only use this package                                                         
2025-08-19T12:26:49.3496649Z           if you absolutely know what you're doing.                             
2025-08-19T12:26:49.3496967Z           Details: https://sg.run/qxEx                                          
2025-08-19T12:26:49.3497746Z                                                                                 
2025-08-19T12:26:49.3498165Z           234┆ atomic.StorePointer(&wsq.tasks[tail&wsq.mask],                   
2025-08-19T12:26:49.3498359Z   unsafe.Pointer(task))                                                         
2025-08-19T12:26:49.3498680Z                                               
2025-08-19T12:26:49.3498840Z     pkg/performance/load-testing/framework.go 
2025-08-19T12:26:49.3499107Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3499369Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3499626Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3500174Z                                                                  
2025-08-19T12:26:49.3500389Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3500549Z             7┆ "math/rand"
2025-08-19T12:26:49.3500974Z                                                        
2025-08-19T12:26:49.3501162Z     pkg/performance/load-testing/telecom_generators.go 
2025-08-19T12:26:49.3501417Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3501676Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3501935Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3502482Z                                                                  
2025-08-19T12:26:49.3502679Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3502843Z             8┆ "math/rand"
2025-08-19T12:26:49.3503131Z                                            
2025-08-19T12:26:49.3503275Z     pkg/performance/load_test_scenarios.go 
2025-08-19T12:26:49.3503535Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3503938Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3504192Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3504734Z                                                                  
2025-08-19T12:26:49.3504939Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3505096Z             7┆ "math/rand"
2025-08-19T12:26:49.3505424Z                                                
2025-08-19T12:26:49.3505584Z     pkg/performance/performance_test_runner.go 
2025-08-19T12:26:49.3505989Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3506247Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3506506Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3507050Z                                                                  
2025-08-19T12:26:49.3507376Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3507534Z             7┆ "math/rand"
2025-08-19T12:26:49.3507723Z                                
2025-08-19T12:26:49.3507840Z     pkg/rag/document_loader.go 
2025-08-19T12:26:49.3508161Z        go.lang.security.audit.crypto.use_of_weak_crypto.use-of-md5              
2025-08-19T12:26:49.3508513Z           Detected MD5 hash algorithm which is considered insecure. MD5 is not  
2025-08-19T12:26:49.3508711Z   collision resistant and                                                       
2025-08-19T12:26:49.3509054Z           is therefore not suitable as a cryptographic signature. Use SHA256 or 
2025-08-19T12:26:49.3509292Z   SHA3 instead.                                                                 
2025-08-19T12:26:49.3509614Z           Details: https://sg.run/2xB5                                          
2025-08-19T12:26:49.3510392Z                                                                                 
2025-08-19T12:26:49.3510574Z          1266┆ hash := md5.New()
2025-08-19T12:26:49.3510859Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3511204Z          2241┆ Hash:           fmt.Sprintf("%x", md5.Sum([]byte(content))),
2025-08-19T12:26:49.3511467Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3511767Z          2314┆ return fmt.Sprintf("%x", md5.Sum([]byte(path)))
2025-08-19T12:26:49.3511969Z                                  
2025-08-19T12:26:49.3512092Z     pkg/rag/embedding_support.go 
2025-08-19T12:26:49.3512354Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3512622Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3512876Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3513427Z                                                                  
2025-08-19T12:26:49.3513624Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3513882Z            11┆ "math/rand"
2025-08-19T12:26:49.3514056Z                             
2025-08-19T12:26:49.3514172Z     pkg/rag/memory_cache.go 
2025-08-19T12:26:49.3514491Z        go.lang.security.audit.unsafe.use-of-unsafe-block                        
2025-08-19T12:26:49.3514839Z           Using the unsafe package in Go gives you low-level memory management  
2025-08-19T12:26:49.3515008Z   and many of the                                                               
2025-08-19T12:26:49.3515348Z           strengths of the C language, but also steps around the type safety of 
2025-08-19T12:26:49.3515513Z   Go and can lead to                                                            
2025-08-19T12:26:49.3516015Z           buffer overflows and possible arbitrary code execution by an attacker.
2025-08-19T12:26:49.3516201Z   Only use this package                                                         
2025-08-19T12:26:49.3516529Z           if you absolutely know what you're doing.                             
2025-08-19T12:26:49.3516852Z           Details: https://sg.run/qxEx                                          
2025-08-19T12:26:49.3517748Z                                                                                 
2025-08-19T12:26:49.3517987Z           749┆ return int64(unsafe.Sizeof(v))
2025-08-19T12:26:49.3518233Z                                       
2025-08-19T12:26:49.3518371Z     pkg/rag/optimized_rag_pipeline.go 
2025-08-19T12:26:49.3518686Z        go.lang.security.audit.crypto.use_of_weak_crypto.use-of-md5              
2025-08-19T12:26:49.3519029Z           Detected MD5 hash algorithm which is considered insecure. MD5 is not  
2025-08-19T12:26:49.3519242Z   collision resistant and                                                       
2025-08-19T12:26:49.3519584Z           is therefore not suitable as a cryptographic signature. Use SHA256 or 
2025-08-19T12:26:49.3519752Z   SHA3 instead.                                                                 
2025-08-19T12:26:49.3520076Z           Details: https://sg.run/2xB5                                          
2025-08-19T12:26:49.3520857Z                                                                                 
2025-08-19T12:26:49.3521159Z           577┆ return fmt.Sprintf("%x", md5.Sum([]byte(data)))
2025-08-19T12:26:49.3521323Z                            
2025-08-19T12:26:49.3521431Z     pkg/rag/redis_cache.go 
2025-08-19T12:26:49.3521746Z        go.lang.security.audit.crypto.use_of_weak_crypto.use-of-md5              
2025-08-19T12:26:49.3522089Z           Detected MD5 hash algorithm which is considered insecure. MD5 is not  
2025-08-19T12:26:49.3522294Z   collision resistant and                                                       
2025-08-19T12:26:49.3522637Z           is therefore not suitable as a cryptographic signature. Use SHA256 or 
2025-08-19T12:26:49.3522803Z   SHA3 instead.                                                                 
2025-08-19T12:26:49.3523123Z           Details: https://sg.run/2xB5                                          
2025-08-19T12:26:49.3524016Z                                                                                 
2025-08-19T12:26:49.3524185Z           761┆ h := md5.New()
2025-08-19T12:26:49.3524439Z                                        
2025-08-19T12:26:49.3524571Z     pkg/rag/weaviate_client_complex.go 
2025-08-19T12:26:49.3524828Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3525096Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3525351Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3525900Z                                                                  
2025-08-19T12:26:49.3526103Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3526262Z            11┆ "math/rand"
2025-08-19T12:26:49.3526520Z                                         
2025-08-19T12:26:49.3526652Z     pkg/security/ca/external_backend.go 
2025-08-19T12:26:49.3527011Z        go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversi
2025-08-19T12:26:49.3527160Z   on                                                                            
2025-08-19T12:26:49.3527505Z           `MinVersion` is missing from this TLS configuration.  By default, as  
2025-08-19T12:26:49.3527672Z   of Go 1.22, TLS 1.2 is                                                        
2025-08-19T12:26:49.3528016Z           currently used as the minimum. General purpose web applications should
2025-08-19T12:26:49.3528185Z   default to TLS 1.3                                                            
2025-08-19T12:26:49.3528691Z           with all other protocols disabled.  Only where it is known that a web 
2025-08-19T12:26:49.3528878Z   server must support                                                           
2025-08-19T12:26:49.3529223Z           legacy clients with unsupported an insecure browsers (such as Internet
2025-08-19T12:26:49.3529394Z   Explorer 10), it may                                                          
2025-08-19T12:26:49.3529858Z           be necessary to enable TLS 1.0 to provide support. Add `MinVersion:   
2025-08-19T12:26:49.3530049Z   tls.VersionTLS13' to the                                                      
2025-08-19T12:26:49.3530388Z           TLS configuration to bump the minimum version to TLS 1.3.             
2025-08-19T12:26:49.3530712Z           Details: https://sg.run/oxEN                                          
2025-08-19T12:26:49.3531487Z                                                                                 
2025-08-19T12:26:49.3531889Z            ▶▶┆ Autofix ▶ tls.Config{ InsecureSkipVerify:                        
2025-08-19T12:26:49.3532157Z   b.config.TLSConfig.InsecureSkipVerify, MinVersion: tls.VersionTLS13 }         
2025-08-19T12:26:49.3532365Z           601┆ tlsConfig := &tls.Config{
2025-08-19T12:26:49.3532712Z           602┆    InsecureSkipVerify:                                    
2025-08-19T12:26:49.3532936Z   b.config.TLSConfig.InsecureSkipVerify,                                 
2025-08-19T12:26:49.3533063Z           603┆ }
2025-08-19T12:26:49.3533302Z                                       
2025-08-19T12:26:49.3533431Z     pkg/security/ca/health_checker.go 
2025-08-19T12:26:49.3533883Z        go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversi
2025-08-19T12:26:49.3534026Z   on                                                                            
2025-08-19T12:26:49.3534373Z           `MinVersion` is missing from this TLS configuration.  By default, as  
2025-08-19T12:26:49.3534536Z   of Go 1.22, TLS 1.2 is                                                        
2025-08-19T12:26:49.3534886Z           currently used as the minimum. General purpose web applications should
2025-08-19T12:26:49.3535054Z   default to TLS 1.3                                                            
2025-08-19T12:26:49.3535401Z           with all other protocols disabled.  Only where it is known that a web 
2025-08-19T12:26:49.3535585Z   server must support                                                           
2025-08-19T12:26:49.3535934Z           legacy clients with unsupported an insecure browsers (such as Internet
2025-08-19T12:26:49.3536109Z   Explorer 10), it may                                                          
2025-08-19T12:26:49.3536451Z           be necessary to enable TLS 1.0 to provide support. Add `MinVersion:   
2025-08-19T12:26:49.3536645Z   tls.VersionTLS13' to the                                                      
2025-08-19T12:26:49.3536990Z           TLS configuration to bump the minimum version to TLS 1.3.             
2025-08-19T12:26:49.3537317Z           Details: https://sg.run/oxEN                                          
2025-08-19T12:26:49.3538093Z                                                                                 
2025-08-19T12:26:49.3538493Z            ▶▶┆ Autofix ▶ tls.Config{ InsecureSkipVerify:                        
2025-08-19T12:26:49.3538747Z   !hc.config.TLSVerificationEnabled, MinVersion: tls.VersionTLS13 }             
2025-08-19T12:26:49.3538956Z           335┆ tlsConfig := &tls.Config{
2025-08-19T12:26:49.3539282Z           336┆    InsecureSkipVerify:                                
2025-08-19T12:26:49.3539487Z   !hc.config.TLSVerificationEnabled,                                 
2025-08-19T12:26:49.3539605Z           337┆ }
2025-08-19T12:26:49.3539806Z                                  
2025-08-19T12:26:49.3539930Z     pkg/security/crypto_utils.go 
2025-08-19T12:26:49.3540250Z        go.lang.security.audit.unsafe.use-of-unsafe-block                        
2025-08-19T12:26:49.3540596Z           Using the unsafe package in Go gives you low-level memory management  
2025-08-19T12:26:49.3540907Z   and many of the                                                               
2025-08-19T12:26:49.3541244Z           strengths of the C language, but also steps around the type safety of 
2025-08-19T12:26:49.3541411Z   Go and can lead to                                                            
2025-08-19T12:26:49.3541879Z           buffer overflows and possible arbitrary code execution by an attacker.
2025-08-19T12:26:49.3542069Z   Only use this package                                                         
2025-08-19T12:26:49.3542398Z           if you absolutely know what you're doing.                             
2025-08-19T12:26:49.3542716Z           Details: https://sg.run/qxEx                                          
2025-08-19T12:26:49.3543497Z                                                                                 
2025-08-19T12:26:49.3543908Z           291┆ ptr := uintptr(unsafe.Pointer(&buffer.data[0]))
2025-08-19T12:26:49.3544081Z                             
2025-08-19T12:26:49.3544196Z     pkg/security/scanner.go 
2025-08-19T12:26:49.3544541Z        go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversi
2025-08-19T12:26:49.3544676Z   on                                                                            
2025-08-19T12:26:49.3545023Z           `MinVersion` is missing from this TLS configuration.  By default, as  
2025-08-19T12:26:49.3545186Z   of Go 1.22, TLS 1.2 is                                                        
2025-08-19T12:26:49.3545527Z           currently used as the minimum. General purpose web applications should
2025-08-19T12:26:49.3545696Z   default to TLS 1.3                                                            
2025-08-19T12:26:49.3546044Z           with all other protocols disabled.  Only where it is known that a web 
2025-08-19T12:26:49.3546227Z   server must support                                                           
2025-08-19T12:26:49.3546574Z           legacy clients with unsupported an insecure browsers (such as Internet
2025-08-19T12:26:49.3546751Z   Explorer 10), it may                                                          
2025-08-19T12:26:49.3547092Z           be necessary to enable TLS 1.0 to provide support. Add `MinVersion:   
2025-08-19T12:26:49.3547285Z   tls.VersionTLS13' to the                                                      
2025-08-19T12:26:49.3547634Z           TLS configuration to bump the minimum version to TLS 1.3.             
2025-08-19T12:26:49.3547952Z           Details: https://sg.run/oxEN                                          
2025-08-19T12:26:49.3548729Z                                                                                 
2025-08-19T12:26:49.3549134Z            ▶▶┆ Autofix ▶ tls.Config{ InsecureSkipVerify:                        
2025-08-19T12:26:49.3549381Z   config.SkipTLSVerification, MinVersion: tls.VersionTLS13 }                    
2025-08-19T12:26:49.3549620Z           160┆ TLSClientConfig: &tls.Config{
2025-08-19T12:26:49.3549923Z           161┆    InsecureSkipVerify:                         
2025-08-19T12:26:49.3550104Z   config.SkipTLSVerification,                                 
2025-08-19T12:26:49.3550226Z           162┆ },
2025-08-19T12:26:49.3550495Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3550832Z            ▶▶┆ Autofix ▶ tls.Config{ MaxVersion:         version,
2025-08-19T12:26:49.3551297Z                                   InsecureSkipVerify: true,      
2025-08-19T12:26:49.3551476Z   MinVersion: tls.VersionTLS13 }                                 
2025-08-19T12:26:49.3551728Z           664┆ "tcp", host+":"+port, &tls.Config{
2025-08-19T12:26:49.3551941Z           665┆    MaxVersion:              
2025-08-19T12:26:49.3552049Z   version,                                 
2025-08-19T12:26:49.3552262Z           666┆    InsecureSkipVerify:   
2025-08-19T12:26:49.3558734Z   true,                                 
2025-08-19T12:26:49.3559182Z           667┆ })
2025-08-19T12:26:49.3559513Z             ⋮┆----------------------------------------
2025-08-19T12:26:49.3559917Z            ▶▶┆ Autofix ▶ tls.Config{ , MinVersion: tls.VersionTLS13 }
2025-08-19T12:26:49.3560189Z           688┆ "tcp", host+":"+port, &tls.Config{})
2025-08-19T12:26:49.3560415Z                                    
2025-08-19T12:26:49.3560550Z     pkg/webui/realtime_handlers.go 
2025-08-19T12:26:49.3561070Z        go.gorilla.security.audit.websocket-missing-origin-check.websocket-missin
2025-08-19T12:26:49.3561260Z   g-origin-check                                                                
2025-08-19T12:26:49.3561603Z           The Origin header in the HTTP WebSocket handshake is used to guarantee
2025-08-19T12:26:49.3561792Z   that the connection                                                           
2025-08-19T12:26:49.3562132Z           accepted by the WebSocket is from a trusted origin domain. Failure to 
2025-08-19T12:26:49.3562310Z   enforce can lead to                                                           
2025-08-19T12:26:49.3562666Z           Cross Site Request Forgery (CSRF). As per "gorilla/websocket"         
2025-08-19T12:26:49.3562882Z   documentation: "A CheckOrigin                                                 
2025-08-19T12:26:49.3563236Z           function should carefully validate the request origin to prevent      
2025-08-19T12:26:49.3563426Z   cross-site request                                                            
2025-08-19T12:26:49.3563855Z           forgery."                                                             
2025-08-19T12:26:49.3564184Z           Details: https://sg.run/xXpz                                          
2025-08-19T12:26:49.3564970Z                                                                                 
2025-08-19T12:26:49.3565292Z           154┆ conn, err := s.upgrader.Upgrade(w, r, nil)
2025-08-19T12:26:49.3565426Z                       
2025-08-19T12:26:49.3565526Z     rag-python/api.py 
2025-08-19T12:26:49.3565886Z        python.flask.security.audit.app-run-param-config.avoid_app_run_with_bad_h
2025-08-19T12:26:49.3566027Z   ost                                                                           
2025-08-19T12:26:49.3566365Z           Running flask app with host 0.0.0.0 could expose the server publicly. 
2025-08-19T12:26:49.3566686Z           Details: https://sg.run/eLby                                          
2025-08-19T12:26:49.3567460Z                                                                                 
2025-08-19T12:26:49.3567704Z           374┆ app.run(host='0.0.0.0', port=5001)
2025-08-19T12:26:49.3567966Z                                         
2025-08-19T12:26:49.3568106Z     scripts/generate-security-report.py 
2025-08-19T12:26:49.3568430Z        python.lang.security.use-defused-xml.use-defused-xml                     
2025-08-19T12:26:49.3568781Z           The Python documentation recommends using `defusedxml` instead of     
2025-08-19T12:26:49.3568972Z   `xml` because the native                                                      
2025-08-19T12:26:49.3569308Z           Python `xml` library is vulnerable to XML External Entity (XXE)       
2025-08-19T12:26:49.3569505Z   attacks. These attacks can                                                    
2025-08-19T12:26:49.3569854Z           leak confidential data and "XML bombs" can cause denial of service.   
2025-08-19T12:26:49.3570170Z           Details: https://sg.run/kX47                                          
2025-08-19T12:26:49.3570941Z                                                                                 
2025-08-19T12:26:49.3571196Z            16┆ import xml.etree.ElementTree as ET
2025-08-19T12:26:49.3571435Z                                       
2025-08-19T12:26:49.3571563Z     tools/vessend/cmd/vessend/main.go 
2025-08-19T12:26:49.3571829Z        go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3572089Z           Do not use `math/rand`. Use `crypto/rand` instead.     
2025-08-19T12:26:49.3572495Z           Details: https://sg.run/6nK6                           
2025-08-19T12:26:49.3573035Z                                                                  
2025-08-19T12:26:49.3573246Z            ▶▶┆ Autofix ▶ crypto/rand
2025-08-19T12:26:49.3573404Z            14┆ "math/rand"
2025-08-19T12:26:49.3573568Z                             
2025-08-19T12:26:49.3573670Z   BLOCKING CODE RULES FIRED:
2025-08-19T12:26:49.3574247Z     generic.secrets.security.detected-pgp-private-key-block.detected-pgp-private
2025-08-19T12:26:49.3574419Z   -key-block                                                                    
2025-08-19T12:26:49.3574714Z     generic.secrets.security.detected-slack-webhook.detected-slack-webhook
2025-08-19T12:26:49.3575031Z     go.gorilla.security.audit.websocket-missing-origin-check.websocket-missing-o
2025-08-19T12:26:49.3575197Z   rigin-check                                                                   
2025-08-19T12:26:49.3575491Z     go.lang.security.audit.crypto.insecure_ssh.avoid-ssh-insecure-ignore-host-ke
2025-08-19T12:26:49.3575634Z   y                                                                             
2025-08-19T12:26:49.3575850Z     go.lang.security.audit.crypto.math_random.math-random-used
2025-08-19T12:26:49.3576157Z     go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversion
2025-08-19T12:26:49.3576381Z     go.lang.security.audit.crypto.use_of_weak_crypto.use-of-md5
2025-08-19T12:26:49.3576688Z     go.lang.security.audit.net.cookie-missing-httponly.cookie-missing-httponly
2025-08-19T12:26:49.3576964Z     go.lang.security.audit.net.cookie-missing-secure.cookie-missing-secure
2025-08-19T12:26:49.3577127Z     go.lang.security.audit.net.use-tls.use-tls
2025-08-19T12:26:49.3577310Z     go.lang.security.audit.unsafe.use-of-unsafe-block
2025-08-19T12:26:49.3577588Z     go.lang.security.decompression_bomb.potential-dos-via-decompression-bomb
2025-08-19T12:26:49.3577800Z     go.lang.security.injection.open-redirect.open-redirect
2025-08-19T12:26:49.3578022Z     go.lang.security.injection.raw-html-format.raw-html-format
2025-08-19T12:26:49.3578321Z     python.flask.security.audit.app-run-param-config.avoid_app_run_with_bad_host
2025-08-19T12:26:49.3578608Z     python.lang.security.audit.subprocess-shell-true.subprocess-shell-true
2025-08-19T12:26:49.3578807Z     python.lang.security.use-defused-xml.use-defused-xml
2025-08-19T12:26:49.3579121Z     terraform.lang.security.eks-public-endpoint-enabled.eks-public-endpoint-enab
2025-08-19T12:26:49.3579265Z   led                                                                           
2025-08-19T12:26:49.3579584Z     yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalati
2025-08-19T12:26:49.3579717Z   on                                                                            
2025-08-19T12:26:49.3580031Z     yaml.kubernetes.security.exposing-docker-socket-hostpath.exposing-docker-soc
2025-08-19T12:26:49.3580205Z   ket-hostpath                                                                  
2025-08-19T12:26:49.3580429Z     yaml.kubernetes.security.hostnetwork-pod.hostnetwork-pod
2025-08-19T12:26:49.3580614Z     yaml.kubernetes.security.hostpid-pod.hostpid-pod
2025-08-19T12:26:49.3580893Z     yaml.kubernetes.security.privileged-container.privileged-container
2025-08-19T12:26:49.3581107Z     yaml.kubernetes.security.run-as-non-root.run-as-non-root
2025-08-19T12:26:49.3581388Z     yaml.kubernetes.security.secrets-in-config-file.secrets-in-config-file
2025-08-19T12:26:49.3581690Z     yaml.kubernetes.security.skip-tls-verify-service.skip-tls-verify-service
2025-08-19T12:26:49.3582005Z     yaml.kubernetes.security.writable-filesystem-container.writable-filesystem-c
2025-08-19T12:26:49.3582161Z   ontainer                                                                      
2025-08-19T12:26:49.3582167Z 
2025-08-19T12:26:49.3582334Z                 
2025-08-19T12:26:49.3582436Z                 
2025-08-19T12:26:49.3582547Z ┌──────────────┐
2025-08-19T12:26:49.3582651Z │ Scan Summary │
2025-08-19T12:26:49.3582894Z └──────────────┘
2025-08-19T12:26:49.3583036Z Some files were skipped or only partially analyzed.
2025-08-19T12:26:49.3583162Z   Scan was limited to files tracked by git.
2025-08-19T12:26:49.3583476Z   Partially scanned: 17 files only partially analyzed due to parsing or internal Semgrep errors
2025-08-19T12:26:49.3583651Z   Scan skipped: 464 files matching .semgrepignore patterns
2025-08-19T12:26:49.3584125Z   For a full list of skipped files, run semgrep with the --verbose flag.
2025-08-19T12:26:49.3584132Z 
2025-08-19T12:26:49.3584235Z CI scan completed successfully.
2025-08-19T12:26:49.3584376Z   Found 318 findings (318 blocking) from 313 rules.
2025-08-19T12:26:49.3584538Z   Has findings for blocking rules so exiting with code 1
2025-08-19T12:26:49.3584543Z 
2025-08-19T12:26:49.3584762Z A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading
2025-08-19T12:26:49.3584767Z 
2025-08-19T12:26:49.3584976Z Versions prior to 1.76.0 are no longer supported by Semgrep.dev, please upgrade.
