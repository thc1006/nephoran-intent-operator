// Code generated by MockGen. DO NOT EDIT.
// Source: client.go
//
// Generated by this command:
//
//	mockgen -source=client.go -destination=mock_llm_client.go -package=llm
//

// Package llm is a generated GoMock package.
package llm

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockLLMClient is a mock of LLMClient interface.
type MockLLMClient struct {
	ctrl     *gomock.Controller
	recorder *MockLLMClientMockRecorder
	isgomock struct{}
}

// MockLLMClientMockRecorder is the mock recorder for MockLLMClient.
type MockLLMClientMockRecorder struct {
	mock *MockLLMClient
}

// NewMockLLMClient creates a new mock instance.
func NewMockLLMClient(ctrl *gomock.Controller) *MockLLMClient {
	mock := &MockLLMClient{ctrl: ctrl}
	mock.recorder = &MockLLMClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLLMClient) EXPECT() *MockLLMClientMockRecorder {
	return m.recorder
}

// GenerateNetworkConfig mocks base method.
func (m *MockLLMClient) GenerateNetworkConfig(ctx context.Context, request *NetworkConfigRequest) (*NetworkConfigResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateNetworkConfig", ctx, request)
	ret0, _ := ret[0].(*NetworkConfigResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateNetworkConfig indicates an expected call of GenerateNetworkConfig.
func (mr *MockLLMClientMockRecorder) GenerateNetworkConfig(ctx, request any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateNetworkConfig", reflect.TypeOf((*MockLLMClient)(nil).GenerateNetworkConfig), ctx, request)
}

// ProcessIntent mocks base method.
func (m *MockLLMClient) ProcessIntent(ctx context.Context, request *ProcessIntentRequest) (*ProcessIntentResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProcessIntent", ctx, request)
	ret0, _ := ret[0].(*ProcessIntentResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ProcessIntent indicates an expected call of ProcessIntent.
func (mr *MockLLMClientMockRecorder) ProcessIntent(ctx, request any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessIntent", reflect.TypeOf((*MockLLMClient)(nil).ProcessIntent), ctx, request)
}

// ValidateIntent mocks base method.
func (m *MockLLMClient) ValidateIntent(ctx context.Context, request *ValidateIntentRequest) (*ValidateIntentResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateIntent", ctx, request)
	ret0, _ := ret[0].(*ValidateIntentResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateIntent indicates an expected call of ValidateIntent.
func (mr *MockLLMClientMockRecorder) ValidateIntent(ctx, request any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateIntent", reflect.TypeOf((*MockLLMClient)(nil).ValidateIntent), ctx, request)
}
