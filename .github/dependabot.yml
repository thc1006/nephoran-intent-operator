# Dependabot configuration for automated dependency updates
# This configuration enables comprehensive vulnerability monitoring
# and automated security patches for all package ecosystems

version: 2

# Enable security updates globally
enable-beta-ecosystems: true

updates:
  # Go modules
  - package-ecosystem: "gomod"
    directory: "/"
    schedule:
      interval: "daily"
      time: "03:00"
      timezone: "UTC"
    open-pull-requests-limit: 10
    reviewers:
      - "security-team"
      - "platform-team"
    assignees:
      - "security-bot"
    labels:
      - "dependencies"
      - "security"
      - "automated"
    commit-message:
      prefix: "chore"
      prefix-development: "chore"
      include: "scope"
    pull-request-branch-name:
      separator: "-"
    rebase-strategy: "auto"
    allow:
      # Only allow security updates by default
      - dependency-type: "all"
    ignore:
      # Ignore specific dependencies if needed
      - dependency-name: "example-legacy-lib"
        versions: ["1.x", "2.x"]
    groups:
      # Group related dependencies
      kubernetes:
        patterns:
          - "k8s.io/*"
          - "sigs.k8s.io/*"
      testing:
        patterns:
          - "*test*"
          - "*mock*"
      security:
        patterns:
          - "*security*"
          - "*crypto*"
          - "*auth*"

  # GitHub Actions
  - package-ecosystem: "github-actions"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "monday"
      time: "04:00"
      timezone: "UTC"
    open-pull-requests-limit: 5
    reviewers:
      - "devops-team"
    labels:
      - "ci/cd"
      - "github-actions"
      - "automated"
    commit-message:
      prefix: "ci"
      include: "scope"
    pull-request-branch-name:
      separator: "-"

  # Docker dependencies
  - package-ecosystem: "docker"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "tuesday"
      time: "04:00"
      timezone: "UTC"
    open-pull-requests-limit: 5
    reviewers:
      - "platform-team"
    labels:
      - "docker"
      - "containers"
      - "automated"
    commit-message:
      prefix: "build"
      include: "scope"
    
  # Terraform (if used)
  - package-ecosystem: "terraform"
    directory: "/deployments/terraform"
    schedule:
      interval: "weekly"
      day: "wednesday"
      time: "04:00"
      timezone: "UTC"
    open-pull-requests-limit: 3
    reviewers:
      - "infrastructure-team"
    labels:
      - "infrastructure"
      - "terraform"
      - "automated"
    commit-message:
      prefix: "infra"
      include: "scope"

# Security vulnerability alerts configuration
# These settings apply to all ecosystems
registries:
  # Private registry configuration (if needed)
  private-registry:
    type: "npm-registry"
    url: "https://registry.npmjs.org"
    username: "${{ secrets.NPM_USERNAME }}"
    password: "${{ secrets.NPM_PASSWORD }}"

# Dependency review configuration
dependency-review:
  # Fail on any vulnerability with CVSS score >= 7.0
  fail-on-severity: high
  # License restrictions
  deny-licenses:
    - GPL-3.0
    - AGPL-3.0
    - SSPL-1.0
    - Commons-Clause
  # Allow specific licenses
  allow-licenses:
    - MIT
    - Apache-2.0
    - BSD-3-Clause
    - BSD-2-Clause
    - ISC
    - MPL-2.0