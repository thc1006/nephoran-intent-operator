# =============================================================================
# EMERGENCY MERGE WORKFLOW - ULTRA SPEED CI BYPASS
# =============================================================================

name: Emergency Merge

on:
  workflow_dispatch:
    inputs:
      emergency_type:
        description: 'Emergency type'
        required: true
        default: 'hotfix'
        type: choice
        options:
          - hotfix
          - critical
          - emergency

# Ultra-fast concurrency - cancel everything else
concurrency:
  group: emergency-${{ github.ref }}
  cancel-in-progress: true

env:
  GO_VERSION: "1.25"  # Updated to latest stable version
  CGO_ENABLED: "0"
  GOPROXY: "https://proxy.golang.org,direct"

jobs:
  emergency-gate:
    name: Emergency Gate
    runs-on: ubuntu-latest
    timeout-minutes: 2
    outputs:
      is_emergency: ${{ steps.check-emergency.outputs.emergency }}
      emergency_type: ${{ steps.check-emergency.outputs.type }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check for emergency keywords
        id: check-emergency
        run: |
          # Simplified emergency type detection
          echo "emergency=true" >> $GITHUB_OUTPUT
          echo "type=${{ github.event.inputs.emergency_type }}" >> $GITHUB_OUTPUT

  ultra-fast-checks:
    name: Ultra Fast Safety
    runs-on: ubuntu-latest
    needs: emergency-gate
    timeout-minutes: 8
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
          cache-dependency-path: go.sum
          
      - name: Fast Dependency Check
        run: |
          go mod download
          go mod verify
          
      - name: Critical Compilation Check
        run: |
          go build -v ./cmd/...
          go build -v ./controllers/...
          
      - name: Quick Compat Tests
        run: |
          go test -short -timeout=5m ./...