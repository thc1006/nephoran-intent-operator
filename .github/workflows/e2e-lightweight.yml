name: E2E Lightweight Test

on:
  pull_request:
    paths:
      - 'api/**'
      - 'controllers/**'
      - 'config/**'
      - 'hack/run-e2e-lightweight.sh'
      - 'tools/verify-scale.go'
  workflow_dispatch:
    inputs:
      debug:
        description: 'Enable debug output'
        required: false
        default: 'false'
        type: boolean

concurrency:
  group: e2e-lightweight-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e-test:
    name: Lightweight E2E Test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'
        cache: true

    - name: Set up Kind
      uses: helm/kind-action@v1
      with:
        install_only: true
        version: v0.29.0

    - name: Check prerequisites
      run: |
        hack/check-e2e-prereqs.sh

    - name: Run lightweight E2E test
      run: |
        # Set debug mode from workflow input
        export DEBUG="${{ inputs.debug || 'false' }}"
        
        # Run the test with timeout protection
        timeout 900 hack/run-e2e-lightweight.sh || {
          echo "‚ùå E2E test failed or timed out"
          exit 1
        }

    - name: Upload test results (on failure)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: e2e-debug-logs
        path: |
          /tmp/kind-config.yaml
          /tmp/test-deployment.yaml
          /tmp/network-intent.yaml
        retention-days: 3

    - name: Cleanup on failure
      if: failure()
      run: |
        echo "üßπ Cleaning up failed test resources"
        kind get clusters | grep nephoran-e2e | xargs -r kind delete cluster --name || true
        docker system prune -f || true

  validate-contracts:
    name: Validate Test Contracts
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Validate CRD exists
      run: |
        if [ ! -f "config/crd/bases/intent.nephoran.com_networkintents.yaml" ]; then
          echo "‚ùå Required NetworkIntent CRD not found"
          exit 1
        fi
        echo "‚úÖ NetworkIntent CRD found"

    - name: Validate verification tool
      run: |
        if [ ! -f "tools/verify-scale.go" ]; then
          echo "‚ùå Scale verification tool not found"
          exit 1
        fi
        echo "‚úÖ Scale verification tool found"

    - name: Test script syntax
      run: |
        bash -n hack/run-e2e-lightweight.sh
        bash -n hack/check-e2e-prereqs.sh
        echo "‚úÖ Script syntax validation passed"