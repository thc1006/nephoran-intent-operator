name: Dependency Security Scan

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, integrate/mvp]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  go-security:
    name: Go Dependency Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true

      - name: Run go mod tidy
        run: go mod tidy

      - name: Run govulncheck
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck -json ./... | tee govulncheck-report.json

      - name: Install Nancy (Sonatype OSS Index)
        run: |
          # Download Nancy v1.0.51 pre-built binary
          curl -L -o nancy https://github.com/sonatype-nexus-community/nancy/releases/download/v1.0.51/nancy-v1.0.51-linux-amd64
          chmod +x nancy
          sudo mv nancy /usr/local/bin/nancy
          nancy --version

      - name: Run nancy vulnerability scan
        run: |
          go list -json -deps ./... | nancy sleuth --skip-update-check

      - name: Generate Go SBOM with CycloneDX
        run: |
          go install github.com/CycloneDX/cyclonedx-gomod/cmd/cyclonedx-gomod@latest
          cyclonedx-gomod mod -json -output go-sbom.json

      - name: Upload Go SBOM
        uses: actions/upload-artifact@v4
        with:
          name: go-sbom
          path: go-sbom.json

      - name: Dependency Review (PR only)
        if: github.event_name == 'pull_request'
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: high
          deny-licenses: GPL-3.0, AGPL-3.0

  python-security:
    name: Python Dependency Security Scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        requirements: [requirements-rag.txt, requirements-docs.txt, requirements-dev.txt]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install pip-audit safety bandit[toml]

      - name: Run pip-audit
        run: |
          pip-audit -r ${{ matrix.requirements }} --format json --output pip-audit-${{ matrix.requirements }}.json
          pip-audit -r ${{ matrix.requirements }}

      - name: Run safety check
        run: |
          safety check -r ${{ matrix.requirements }} --json --output safety-${{ matrix.requirements }}.json
          safety check -r ${{ matrix.requirements }}
        continue-on-error: true

      - name: Run bandit security linter
        if: matrix.requirements == 'requirements-rag.txt'
        run: |
          bandit -r . -f json -o bandit-report.json
          bandit -r . -ll

      - name: Generate Python SBOM
        run: |
          pip install cyclonedx-bom
          cyclonedx-py requirements ${{ matrix.requirements }} --format json --output python-sbom-${{ matrix.requirements }}.json

      - name: Upload Python SBOM
        uses: actions/upload-artifact@v4
        with:
          name: python-sbom-${{ matrix.requirements }}
          path: python-sbom-${{ matrix.requirements }}.json

  container-security:
    name: Container Image Security Scan
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
          ignore-unfixed: true

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  consolidate-sbom:
    name: Consolidate and Upload SBOM
    runs-on: ubuntu-latest
    needs: [go-security, python-security]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Download all SBOMs
        uses: actions/download-artifact@v4
        with:
          pattern: '*-sbom*'
          merge-multiple: true

      - name: Merge SBOMs
        run: |
          # Install CycloneDX CLI tool
          curl -L -o cyclonedx-linux-x64 https://github.com/CycloneDX/cyclonedx-cli/releases/latest/download/cyclonedx-linux-x64
          chmod +x cyclonedx-linux-x64
          
          # Merge all SBOMs into one
          ./cyclonedx-linux-x64 merge --input-files go-sbom.json python-sbom-*.json --output-file consolidated-sbom.json

      - name: Upload consolidated SBOM
        uses: actions/upload-artifact@v4
        with:
          name: consolidated-sbom
          path: consolidated-sbom.json
          retention-days: 90

      - name: Create SBOM attestation
        uses: actions/attest-sbom@v2
        with:
          subject-path: '.'
          sbom-path: 'consolidated-sbom.json'