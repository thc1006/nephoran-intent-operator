version: '3.8'

# Nephoran Intent Operator - All Services
# Production-ready Docker Compose configuration
# Usage: docker-compose -f docker-compose.services.yml up -d

networks:
  nephoran:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  nephoran-data:
  nephoran-config:
  nephoran-logs:
  weaviate-data:
  redis-data:

services:
  # =============================================================================
  # Core Processing Services
  # =============================================================================
  
  intent-ingest:
    build:
      context: .
      dockerfile: cmd/intent-ingest/Dockerfile
      args:
        VERSION: ${VERSION:-dev}
        BUILD_DATE: ${BUILD_DATE}
        VCS_REF: ${VCS_REF}
    image: nephoran/intent-ingest:${VERSION:-latest}
    container_name: nephoran-intent-ingest
    restart: unless-stopped
    ports:
      - "8081:8081"  # Intent API
      - "9091:9090"  # Metrics
      - "8001:8080"  # Health
    volumes:
      - nephoran-config:/config:ro
      - nephoran-data:/data
      - nephoran-logs:/logs
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - INTENT_API_PORT=8081
      - METRICS_PORT=9090
      - HEALTH_PORT=8080
    networks:
      nephoran:
        ipv4_address: 172.20.0.10
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  llm-processor:
    build:
      context: .
      dockerfile: cmd/llm-processor/Dockerfile
      args:
        VERSION: ${VERSION:-dev}
        BUILD_DATE: ${BUILD_DATE}
        VCS_REF: ${VCS_REF}
    image: nephoran/llm-processor:${VERSION:-latest}
    container_name: nephoran-llm-processor
    restart: unless-stopped
    ports:
      - "8083:8083"  # LLM API
      - "9093:9090"  # Metrics
      - "8003:8080"  # Health
    volumes:
      - nephoran-config:/config:ro
      - nephoran-data:/data
      - nephoran-logs:/logs
      - ./models:/models:ro
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LLM_API_PORT=8083
      - METRICS_PORT=9090
      - HEALTH_PORT=8080
      - RAG_ENABLED=true
      - WEAVIATE_URL=http://weaviate:8080
      - REDIS_URL=redis://redis:6379
    networks:
      nephoran:
        ipv4_address: 172.20.0.11
    depends_on:
      - weaviate
      - redis
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '1.0'

  nephio-bridge:
    build:
      context: .
      dockerfile: cmd/nephio-bridge/Dockerfile
      args:
        VERSION: ${VERSION:-dev}
        BUILD_DATE: ${BUILD_DATE}
        VCS_REF: ${VCS_REF}
    image: nephoran/nephio-bridge:${VERSION:-latest}
    container_name: nephoran-nephio-bridge
    restart: unless-stopped
    ports:
      - "8082:8082"  # Nephio API
      - "9092:9090"  # Metrics
      - "8002:8080"  # Health
    volumes:
      - nephoran-config:/config:ro
      - nephoran-data:/data
      - nephoran-logs:/logs
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - NEPHIO_API_PORT=8082
      - METRICS_PORT=9090
      - HEALTH_PORT=8080
      - PORCH_URL=${PORCH_URL:-http://porch-server:7007}
    networks:
      nephoran:
        ipv4_address: 172.20.0.12
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  oran-adaptor:
    build:
      context: .
      dockerfile: cmd/oran-adaptor/Dockerfile
      args:
        VERSION: ${VERSION:-dev}
        BUILD_DATE: ${BUILD_DATE}
        VCS_REF: ${VCS_REF}
    image: nephoran/oran-adaptor:${VERSION:-latest}
    container_name: nephoran-oran-adaptor
    restart: unless-stopped
    ports:
      - "8084:8084"  # O-RAN API
      - "9094:9090"  # Metrics
      - "8004:8080"  # Health
    volumes:
      - nephoran-config:/config:ro
      - nephoran-data:/data
      - nephoran-logs:/logs
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - ORAN_API_PORT=8084
      - METRICS_PORT=9090
      - HEALTH_PORT=8080
    networks:
      nephoran:
        ipv4_address: 172.20.0.13
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  conductor:
    build:
      context: .
      dockerfile: cmd/conductor/Dockerfile
      args:
        VERSION: ${VERSION:-dev}
        BUILD_DATE: ${BUILD_DATE}
        VCS_REF: ${VCS_REF}
    image: nephoran/conductor:${VERSION:-latest}
    container_name: nephoran-conductor
    restart: unless-stopped
    ports:
      - "8085:8085"  # Conductor API
      - "9095:9090"  # Metrics
      - "8005:8080"  # Health
    volumes:
      - nephoran-config:/config:ro
      - nephoran-data:/data
      - nephoran-logs:/logs
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - CONDUCTOR_API_PORT=8085
      - METRICS_PORT=9090
      - HEALTH_PORT=8080
    networks:
      nephoran:
        ipv4_address: 172.20.0.14
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  conductor-loop:
    build:
      context: .
      dockerfile: cmd/conductor-loop/Dockerfile
      args:
        VERSION: ${VERSION:-dev}
        BUILD_DATE: ${BUILD_DATE}
        VCS_REF: ${VCS_REF}
    image: nephoran/conductor-loop:${VERSION:-latest}
    container_name: nephoran-conductor-loop
    restart: unless-stopped
    ports:
      - "9096:9090"  # Metrics
      - "8006:8080"  # Health
    volumes:
      - nephoran-config:/config:ro
      - nephoran-data:/data
      - nephoran-logs:/logs
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - METRICS_PORT=9090
      - HEALTH_PORT=8080
      - CONDUCTOR_HANDOFF_IN_PATH=/data/handoff
      - CONDUCTOR_HANDOFF_OUT_PATH=/data/output
    networks:
      nephoran:
        ipv4_address: 172.20.0.15
    depends_on:
      - conductor
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'

  porch-publisher:
    build:
      context: .
      dockerfile: cmd/porch-publisher/Dockerfile
      args:
        VERSION: ${VERSION:-dev}
        BUILD_DATE: ${BUILD_DATE}
        VCS_REF: ${VCS_REF}
    image: nephoran/porch-publisher:${VERSION:-latest}
    container_name: nephoran-porch-publisher
    restart: unless-stopped
    ports:
      - "8086:8086"  # Publisher API
      - "9097:9090"  # Metrics
      - "8007:8080"  # Health
    volumes:
      - nephoran-config:/config:ro
      - nephoran-data:/data
      - nephoran-logs:/logs
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - PUBLISHER_API_PORT=8086
      - METRICS_PORT=9090
      - HEALTH_PORT=8080
      - PORCH_URL=${PORCH_URL:-http://porch-server:7007}
    networks:
      nephoran:
        ipv4_address: 172.20.0.16
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # =============================================================================
  # O-RAN Simulation Services
  # =============================================================================
  
  a1-sim:
    build:
      context: .
      dockerfile: cmd/a1-sim/Dockerfile
      args:
        VERSION: ${VERSION:-dev}
        BUILD_DATE: ${BUILD_DATE}
        VCS_REF: ${VCS_REF}
    image: nephoran/a1-sim:${VERSION:-latest}
    container_name: nephoran-a1-sim
    restart: unless-stopped
    ports:
      - "9001:9001"  # A1 Interface
      - "9101:9090"  # Metrics
      - "8101:8080"  # Health
    volumes:
      - nephoran-config:/config:ro
      - nephoran-data:/data
      - nephoran-logs:/logs
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - A1_PORT=9001
      - METRICS_PORT=9090
      - HEALTH_PORT=8080
    networks:
      nephoran:
        ipv4_address: 172.20.0.21
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

  e2-kpm-sim:
    build:
      context: .
      dockerfile: cmd/e2-kpm-sim/Dockerfile
      args:
        VERSION: ${VERSION:-dev}
        BUILD_DATE: ${BUILD_DATE}
        VCS_REF: ${VCS_REF}
    image: nephoran/e2-kpm-sim:${VERSION:-latest}
    container_name: nephoran-e2-kpm-sim
    restart: unless-stopped
    ports:
      - "9002:9002"  # E2 Interface
      - "9102:9090"  # Metrics
      - "8102:8080"  # Health
    volumes:
      - nephoran-config:/config:ro
      - nephoran-data:/data
      - nephoran-logs:/logs
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - E2_PORT=9002
      - METRICS_PORT=9090
      - HEALTH_PORT=8080
    networks:
      nephoran:
        ipv4_address: 172.20.0.22
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

  fcaps-sim:
    build:
      context: .
      dockerfile: cmd/fcaps-sim/Dockerfile
      args:
        VERSION: ${VERSION:-dev}
        BUILD_DATE: ${BUILD_DATE}
        VCS_REF: ${VCS_REF}
    image: nephoran/fcaps-sim:${VERSION:-latest}
    container_name: nephoran-fcaps-sim
    restart: unless-stopped
    ports:
      - "9003:9003"  # FCAPS/VES
      - "9103:9090"  # Metrics
      - "8103:8080"  # Health
    volumes:
      - nephoran-config:/config:ro
      - nephoran-data:/data
      - nephoran-logs:/logs
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - FCAPS_PORT=9003
      - METRICS_PORT=9090
      - HEALTH_PORT=8080
    networks:
      nephoran:
        ipv4_address: 172.20.0.23
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

  o1-ves-sim:
    build:
      context: .
      dockerfile: cmd/o1-ves-sim/Dockerfile
      args:
        VERSION: ${VERSION:-dev}
        BUILD_DATE: ${BUILD_DATE}
        VCS_REF: ${VCS_REF}
    image: nephoran/o1-ves-sim:${VERSION:-latest}
    container_name: nephoran-o1-ves-sim
    restart: unless-stopped
    ports:
      - "9004:9004"  # O1/VES
      - "9104:9090"  # Metrics
      - "8104:8080"  # Health
    volumes:
      - nephoran-config:/config:ro
      - nephoran-data:/data
      - nephoran-logs:/logs
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - O1_VES_PORT=9004
      - METRICS_PORT=9090
      - HEALTH_PORT=8080
    networks:
      nephoran:
        ipv4_address: 172.20.0.24
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

  # =============================================================================
  # Infrastructure Services
  # =============================================================================
  
  weaviate:
    image: semitechnologies/weaviate:1.27.4
    container_name: nephoran-weaviate
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "50051:50051"
    volumes:
      - weaviate-data:/var/lib/weaviate
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      ENABLE_MODULES: 'text2vec-openai,text2vec-cohere,text2vec-huggingface,ref2vec-centroid,generative-openai,qna-openai'
      CLUSTER_HOSTNAME: 'node1'
    networks:
      nephoran:
        ipv4_address: 172.20.0.30
    healthcheck:
      test: wget --no-verbose --tries=3 --spider http://localhost:8080/v1/.well-known/ready || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  redis:
    image: redis:7.4-alpine
    container_name: nephoran-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    networks:
      nephoran:
        ipv4_address: 172.20.0.31
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # =============================================================================
  # Monitoring Stack
  # =============================================================================
  
  prometheus:
    image: prom/prometheus:v2.58.0
    container_name: nephoran-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/rules:/etc/prometheus/rules:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      nephoran:
        ipv4_address: 172.20.0.40
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  grafana:
    image: grafana/grafana:11.4.0
    container_name: nephoran-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana:/etc/grafana/provisioning:ro
      - ./monitoring/dashboards:/var/lib/grafana/dashboards:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      nephoran:
        ipv4_address: 172.20.0.41
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'