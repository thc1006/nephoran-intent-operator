# golangci-lint configuration for 2025 best practices
# Compatible with golangci-lint v2.x and Go 1.24+
# Optimized for O-RAN/Nephio Kubernetes operator development

run:
  timeout: 20m
  issues-exit-code: 1
  tests: true
  go: "1.24"
  
  build-tags:
    - integration
    - e2e
    - test
    - benchmarks
    - debug
    - race
    - tools
  
  modules-download-mode: readonly
  concurrency: 0

output:
  formats:
    - format: colored-line-number
    - format: json
      path: golangci-report.json
  print-issued-lines: true
  print-linter-name: true
  sort-results: true

# 2025 linter configuration - comprehensive but practical
linters:
  disable-all: true
  enable:
    # Core quality linters (always enabled)
    - revive          # Comprehensive replacement for golint
    - staticcheck     # Advanced static analysis
    - govet           # Standard Go vet checks
    - gosimple        # Simplify code suggestions
    - unused          # Find unused code
    - typecheck       # Type-checking errors
    
    # Error handling and robustness
    - errcheck        # Check for unchecked errors
    - errorlint       # Error wrapping with %w
    - nilerr          # Return nil even if error is not nil
    
    # Security linters (critical for telecom)
    - gosec           # Security vulnerabilities
    
    # Performance and efficiency
    - ineffassign     # Ineffective assignments
    - unconvert       # Unnecessary type conversions
    - prealloc        # Preallocate slices
    - gocritic        # Comprehensive performance checks
    - noctx           # HTTP requests without context
    - bodyclose       # HTTP response body close
    - rowserrcheck    # SQL rows.Err check
    
    # Code style and maintainability
    - misspell        # Spell checking
    - unparam         # Unused function parameters
    - gci             # Import formatting
    - gofumpt         # Strict formatting
    - whitespace      # Whitespace issues
    - nolintlint      # Nolint directive usage
    - godot           # Comment periods
    - stylecheck      # Style guide compliance
    - predeclared     # Predeclared identifier shadowing
    
    # Modern Go features (Go 1.18+)
    - copyloopvar     # Loop variable copying (automatic in Go 1.22+)
    - intrange        # Integer range patterns
    - testifylint     # Testify usage patterns
    - testpackage     # Test package naming
    - tparallel       # Parallel test detection
    
    # Kubernetes/Cloud-native specific  
    - noctx           # HTTP requests without context
    
    # Additional quality linters for 2025
    - durationcheck   # Duration multiplication checks
    - goconst         # Repeated strings that could be constants
    - gocritic        # Comprehensive code review
    - godox           # TODO/FIXME/BUG comments
    - goimports       # Import management
    - gomnd           # Magic numbers detection
    - lll             # Line length limits
    - maintidx        # Maintainability index
    - makezero        # Make slice with zero length
    - nakedret        # Naked return detection
    - nestif          # Nested if complexity
    - nlreturn        # New line before return
    - perfsprint      # Performance of sprint functions
    - sqlclosecheck   # SQL Close() calls
    - tagliatelle     # Struct tag formatting
    - tenv            # Testing environment variables
    - wastedassign    # Wasted assignments
    - wrapcheck       # Error wrapping requirements

linters-settings:
  # Go vet configuration
  govet:
    enable-all: true
    disable:
      - fieldalignment  # Too noisy for most projects
    # shadow analyzer handled by settings below
    settings:
      printf:
        funcs:
          - (github.com/sirupsen/logrus.Entry).Debugf
          - (github.com/sirupsen/logrus.Entry).Infof
          - (github.com/sirupsen/logrus.Entry).Warnf
          - (github.com/sirupsen/logrus.Entry).Errorf
          - (github.com/sirupsen/logrus.Entry).Fatalf
          - (github.com/sirupsen/logrus.Entry).Panicf
  
  # Security configuration (enhanced for telecom)
  gosec:
    severity: "medium"
    confidence: "medium"
    includes:
      - G101  # Hardcoded credentials
      - G102  # Network binding
      - G103  # Unsafe blocks audit
      - G104  # Errors not checked
      - G106  # SSH host key verification
      - G107  # URL taint input
      - G108  # Profiling endpoint exposed
      - G109  # Integer overflow
      - G110  # Decompression bomb
      - G201  # SQL query construction
      - G202  # SQL query construction
      - G203  # HTML template XSS
      - G204  # Command injection
      - G301  # File permissions
      - G302  # File permissions
      - G303  # File permissions
      - G304  # Path traversal
      - G305  # ZIP extraction
      - G306  # File permissions
      - G307  # Poor file permissions when creating or using files
      - G401  # Weak crypto
      - G402  # TLS config
      - G403  # Weak crypto
      - G404  # Weak random
      - G501  # Blocklisted import MD5
      - G502  # Blocklisted import DES
      - G503  # Blocklisted import RC4
      - G504  # Blocklisted import CGI
      - G505  # Blocklisted import SHA1
      - G601  # Implicit aliasing
    excludes: []
    config:
      global:
        audit: true
        nosec: false
      G301: "0750"  # Directory permissions
      G302: "0640"  # File permissions  
      G306: "0640"  # File permissions
  
  # Error checking configuration
  errcheck:
    check-type-assertions: true
    check-blank: true
    exclude-functions:
      # Logging functions where errors are typically ignored
      - (github.com/sirupsen/logrus.Logger).Debug
      - (github.com/sirupsen/logrus.Logger).Debugf
      - (github.com/sirupsen/logrus.Logger).Info
      - (github.com/sirupsen/logrus.Logger).Infof
      - (github.com/sirupsen/logrus.Logger).Warn
      - (github.com/sirupsen/logrus.Logger).Warnf
      - (github.com/sirupsen/logrus.Entry).Debug
      - (github.com/sirupsen/logrus.Entry).Debugf
      - (github.com/sirupsen/logrus.Entry).Info
      - (github.com/sirupsen/logrus.Entry).Infof
      - (github.com/sirupsen/logrus.Entry).Warn
      - (github.com/sirupsen/logrus.Entry).Warnf
      # Standard library functions where errors are commonly ignored
      - io.Copy(*bytes.Buffer)
      - io.Copy(os.Stdout)
      - io.Copy(os.Stderr)
      - (*bytes.Buffer).Write
      - (*bytes.Buffer).WriteString
      - (*strings.Builder).Write
      - (*strings.Builder).WriteString
      - fmt.Print
      - fmt.Printf
      - fmt.Println
      - fmt.Fprint
      - fmt.Fprintf
      - fmt.Fprintln
  
  # Code critic configuration (comprehensive)
  gocritic:
    enabled-tags:
      - diagnostic    # Detect suspicious constructs
      - style        # Style issues
      - performance  # Performance issues
      - experimental # Experimental checks
      - opinionated  # Opinionated checks
    disabled-checks:
      - commentedOutCode  # Too noisy
      - whyNoLint        # Covered by nolintlint
      - hugeParam        # Sometimes necessary
      - unnamedResult    # Sometimes appropriate
      - importShadow     # Too restrictive
      - ifElseChain      # Sometimes appropriate
      - singleCaseSwitch # Sometimes more readable
    settings:
      captLocal:
        paramsOnly: false
      elseif:
        skipBalanced: false
      hugeParam:
        sizeThreshold: 80
      rangeExprCopy:
        sizeThreshold: 512
      rangeValCopy:
        sizeThreshold: 128
      tooManyResultsChecker:
        maxResults: 5
      truncateCmp:
        skipArchDependent: true
      underef:
        skipRecvDeref: true
      unnamedResult:
        checkExported: true
  
  # Revive configuration (comprehensive replacement for golint)
  revive:
    severity: warning
    confidence: 0.8
    rules:
      # Import and package rules
      - name: blank-imports
      - name: dot-imports
        disabled: false
        exclude: ["pkg/test/*", "*_test.go"]
      
      # Context rules
      - name: context-as-argument
        arguments: 
          - allowTypesBefore: "*testing.T,*http.Request"
      - name: context-keys-type
      
      # Error handling rules  
      - name: error-return
      - name: error-strings
      - name: error-naming
      - name: errorf
      - name: indent-error-flow
      
      # Documentation rules
      - name: exported
        arguments: 
          - "checkPrivateReceivers"
          - "sayRepetitiveInsteadOfStutters"
          - "disableStutteringCheck"
      - name: package-comments
      - name: receiver-naming
      
      # Naming conventions
      - name: var-naming
        arguments: 
          - ["ID", "URL", "HTTP", "JSON", "API", "K8s", "CRD", "CNF", "VNF", "RAN", "AI", "ML", "mTLS", "TLS", "TCP", "UDP", "IP", "DNS", "CPU", "RAM", "SLA", "KPI", "VES", "FCAPS", "ORAN", "gRPC", "REST", "YAML", "XML", "SQL", "DB", "OS", "UI", "CLI", "SDK", "JWT", "OAuth", "LDAP", "RBAC", "ACL", "PKI", "CA", "CSR", "SPIFFE", "SPIRE"]
          - []
      - name: var-declaration
      - name: time-naming
      
      # Function complexity rules
      - name: function-result-limit
        arguments: [4]  # Allow up to 4 return values
      - name: argument-limit  
        arguments: [6]  # Allow up to 6 parameters
      - name: cognitive-complexity
        arguments: [20] # Increased for complex Kubernetes logic
      - name: cyclomatic
        arguments: [15] # Reasonable complexity limit
      
      # Control flow rules
      - name: if-return
      - name: increment-decrement
      - name: range
      - name: range-val-in-closure
      - name: range-val-address
      - name: superfluous-else
      - name: empty-block
      - name: empty-lines
      - name: confusing-naming
      - name: confusing-results
      
      # Performance rules
      - name: string-of-int
      - name: struct-tag
      - name: atomic
      - name: bool-literal-in-expr
      - name: constant-logical-expr
      - name: early-return
      - name: identical-branches
      - name: optimize-operands-order
      - name: string-format
      - name: unconditional-recursion
      - name: unnecessary-stmt
      - name: unreachable-code
      - name: unused-parameter
        disabled: true  # Too noisy, handled by unparam
      - name: unused-receiver
        disabled: true  # Too noisy
      - name: use-any
      - name: useless-break
      - name: waitgroup-by-value
      
      # Disabled rules (too noisy or inappropriate)
      - name: deep-exit
        disabled: true
      - name: flag-parameter
        disabled: true
      - name: max-public-structs
        disabled: true
      - name: line-length-limit
        disabled: true  # Handled by lll linter
      - name: add-constant
        disabled: true  # Too opinionated
      - name: file-header
        disabled: true  # Not needed
  
  # Static check configuration
  staticcheck:
    checks: ["all", "-ST1000", "-ST1003", "-ST1016", "-SA5011"]
    
  # Import formatting
  gci:
    sections:
      - standard                                              # Standard library
      - default                                               # Default (external packages)
      - prefix(github.com/thc1006/nephoran-intent-operator) # Local packages
      - prefix(sigs.k8s.io)                                  # Kubernetes SIG packages
      - prefix(k8s.io)                                       # Kubernetes packages
    skip-generated: true
    custom-order: true
    
  # Strict formatting
  gofumpt:
    extra-rules: true
    
  # Error linting
  errorlint:
    errorf: true
    asserts: true
    comparison: true
    
  # Nolint linting
  nolintlint:
    require-explanation: true
    require-specific: true
    
  # Comment periods
  godot:
    scope: declarations
    exclude:
      - "Check that"
      - "Make sure"
      - "TODO"
      - "FIXME"
      - "BUG"
      - "NOTE"
    capital: false
    
  # Style check
  stylecheck:
    checks: ["all", "-ST1003", "-ST1016", "-ST1020", "-ST1021", "-ST1022"]
    
  # Predeclared identifiers
  predeclared:
    ignore: ""
    q: false
  
  # Line length
  lll:
    line-length: 140  # Reasonable for modern monitors
    tab-width: 4
  
  # Magic numbers
  gomnd:
    settings:
      mnd:
        checks:
          - argument
          - case  
          - condition
          - operation
          - return
          - assign
        ignored-numbers:
          - '0'
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '8'
          - '10'
          - '16'
          - '32'
          - '64'
          - '100'
          - '200'
          - '400'
          - '404'
          - '500'
          - '1000'
          - '1024'
          - '2048'
          - '4096'
          - '8080'
          - '9090'
          - '443'
          - '80'
        ignored-functions:
          - 'math.*'
          - 'time.*'
          - 'strconv.*'
  
  # Unused parameters
  unparam:
    check-exported: false
    
  # Interface bloat
  interfacebloat:
    max: 10  # Maximum 10 methods per interface
  
  # Maintainability index
  maintidx:
    under: 20  # Maintainability index threshold
  
  # Nested if complexity  
  nestif:
    min-complexity: 6
  
  # Cyclomatic complexity
  gocyclo:
    min-complexity: 15
  
  # Function length
  funlen:
    lines: 100      # Maximum function length
    statements: 50   # Maximum statements per function
  
  # Testify linter
  testifylint:
    enable-all: true
    disable:
      - float-compare  # Sometimes necessary for tolerance
      - go-require     # Not always appropriate

# Issue filtering and exclusions
issues:
  max-issues-per-linter: 0
  max-same-issues: 0
  new: false
  fix: false  # Don't auto-fix by default
  
  exclude-files:
    # Generated files
    - '.*\.pb\.go$'
    - '.*_generated\.go$'
    - '.*_gen\.go$'
    - 'zz_generated\..*\.go$'
    - '.*deepcopy.*\.go$'
    - '.*clientset.*\.go$'
    - '.*informers.*\.go$'
    - '.*listers.*\.go$'
    - '.*versioned.*\.go$'
    - '.*fake.*\.go$'
    
    # Mock files
    - 'mock_.*\.go$'
    - '.*_mock\.go$'
    - '.*\.mock\.go$'
    
    # Test utilities
    - 'test_.*\.go$'
    
    # Directories to exclude
    - 'vendor/.*'
    - 'testdata/.*'
    - '.*/out/.*\.go$'
    - '.*/bin/.*\.go$'
    - '.*/tmp/.*\.go$'
    - '.*/temp/.*\.go$'
    - '.*/\.cache/.*\.go$'
    - '.*/test-results/.*\.go$'
    - '.*/coverage/.*\.go$'
  
  exclude-rules:
    # Test files get relaxed rules
    - path: '_test\.go'
      linters:
        - gosec          # Security less critical in tests
        - unparam        # Test functions often have unused params
        - errcheck       # Tests often ignore errors intentionally
        - gocyclo        # Tests can be complex
        - funlen         # Test functions can be long
        - maintidx       # Maintainability less critical in tests
        - gocritic       # Less critical in tests
        - gomnd          # Magic numbers OK in tests
        - lll            # Long lines OK in tests
        - dupl           # Duplication OK in tests
        - goconst        # Constants less important in tests
        - noctx          # Context not always needed in tests
        - bodyclose      # HTTP body closing less critical in tests
        - interfacebloat # Large interfaces OK in test mocks
        - cyclop         # Complexity OK in tests
        - nestif         # Nested ifs OK in tests
        - gocognit       # Cognitive complexity OK in tests
    
    # Generated files - exclude most linters
    - path: '(.*\.pb\.go|.*_generated\.go|.*_gen\.go|zz_generated\..*\.go|.*deepcopy.*\.go|.*clientset.*\.go|.*informers.*\.go|.*listers.*\.go|.*versioned.*\.go)'
      linters:
        - revive
        - gocritic
        - gosec
        - staticcheck
        - govet
        - errcheck
        - ineffassign
        - stylecheck
        - gci
        - gofumpt
        - godot
        - gomnd
        - goconst
        - unparam
        - unused
        - lll
        - funlen
        - gocyclo
        - maintidx
    
    # Mock files - relaxed rules
    - path: '(mock_.*\.go|.*_mock\.go|.*\.mock\.go|.*fake.*\.go)'
      linters:
        - revive
        - stylecheck
        - godot
        - unused
        - unparam
        - errcheck
        - gocritic
        - interfacebloat
        - funlen
        - gocyclo
    
    # Vendor directory - exclude all custom linters
    - path: 'vendor/'
      linters:
        - revive
        - gocritic
        - gosec
        - stylecheck
        - gci
        - gomnd
        - goconst
        - unparam
        - unused
        - errcheck
        - staticcheck
        - govet
    
    # Allow dot imports in test files
    - path: '_test\.go'
      text: "should not use dot imports"
      linters:
        - revive
        - stylecheck
    
    # Main functions can be longer and more complex
    - path: 'main\.go'
      linters:
        - funlen
        - gocyclo
        - maintidx
        - gocognit
        - cyclop
    
    # Specific exclusions for common false positives
    - text: "G404: Use of weak random number generator"
      linters:
        - gosec
      path: '_test\.go'
    
    # Package comment not required for certain packages
    - text: "ST1000: at least one file in a package should have a package comment"
      linters:
        - stylecheck
      path: '(pkg/controllers|pkg/webhooks|internal)/.*\.go'
    
    # TODO/FIXME comments allowed during development
    - source: "TODO|FIXME|BUG"
      linters:
        - godox
    
    # Package comment exclusions
    - text: "should have a package comment"
      path: '(pkg/webhooks|pkg/controllers|internal)/.*\.go'
    
    # Context cancellation false positives
    - text: "context.WithCancel should be used with its cancel function"
      linters:
        - govet
    
    # Kubernetes client-go patterns
    - text: "should not use built-in type string as key for value"
      path: '.*controller.*\.go'
    
    # Allow long lines in certain contexts
    - text: "line is \\d+ characters"
      path: '.*_test\.go'
      linters:
        - lll
    
    # Exclude certain patterns from error checks
    - text: "Error return value of .*(Close|Flush|Remove|Write).*not checked"
      linters:
        - errcheck
      path: '(_test\.go|.*_test\.go)$'

  exclude-dirs:
    - vendor
    - testdata
    - examples
    - third_party
    - out
    - bin
    - test-results
    - coverage
    - tmp
    - temp
    - node_modules
    - .git

  # Include certain excluded-by-default issues
  include:
    - EXC0002  # golint: disable comment should be of the form
    - EXC0003  # golint: func name will be used as test.Test* by other packages
    - EXC0004  # govet: composite literal uses unkeyed fields
    - EXC0005  # staticcheck: SA4006 this value of X is never used
    - EXC0011  # stylecheck: ST1000 missing package comment
    - EXC0012  # revive: exported * should have comment or be unexported
    - EXC0013  # revive: package comment should be of the form
    - EXC0014  # revive: comment on exported * should be of the form
    - EXC0015  # revive: should have a package comment

# Severity configuration
severity:
  default-severity: warning
  case-sensitive: false
  rules:
    - linters: [gosec]
      severity: error
    - linters: [govet, staticcheck, typecheck]
      severity: error  
    - linters: [errcheck, ineffassign, unused]
      severity: error
    - linters: [revive, stylecheck, gocritic] 
      severity: warning
    - linters: [misspell, godot, gci, gofumpt]
      severity: info