# Pre-commit configuration for Nephoran Intent Operator
# Prevents invalid golangci-lint configurations from being committed
# Designed for Linux Kubernetes operator development

repos:
  # Golangci-lint configuration validation
  - repo: local
    hooks:
      - id: validate-golangci-config
        name: Validate golangci-lint configuration
        entry: scripts/hooks/validate-golangci-config.sh
        language: script
        files: ^\.golangci.*\.ya?ml$
        pass_filenames: true
        verbose: true
        
      - id: syntax-check-golangci
        name: Syntax check golangci-lint config
        entry: bash -c 'golangci-lint config path -c .golangci-fast.yml > /dev/null'
        language: system
        files: ^\.golangci.*\.ya?ml$
        pass_filenames: false
        
      - id: lint-config-compatibility
        name: Check golangci-lint version compatibility
        entry: scripts/hooks/check-lint-compatibility.sh
        language: script
        files: ^\.golangci.*\.ya?ml$
        pass_filenames: false

  # Go code quality checks
  - repo: local
    hooks:
      - id: go-fmt
        name: Go Format
        entry: gofmt
        language: system
        args: ["-w"]
        files: \.go$
        
      - id: go-vet
        name: Go Vet
        entry: bash -c 'go vet ./...'
        language: system
        files: \.go$
        pass_filenames: false
        
      - id: go-mod-tidy
        name: Go Mod Tidy
        entry: bash -c 'go mod tidy && git diff --exit-code go.mod go.sum'
        language: system
        files: ^(go\.mod|go\.sum)$
        pass_filenames: false

  # Fast golangci-lint check on changed files only
  - repo: local
    hooks:
      - id: golangci-lint-fast
        name: golangci-lint (fast check on changed files)
        entry: bash -c 'golangci-lint run --config=.golangci-fast.yml --new-from-rev=HEAD~1 --timeout=2m'
        language: system
        files: \.go$
        pass_filenames: false

  # YAML validation
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        args: [-c=.yamllint.yml]
        files: ^\.golangci.*\.ya?ml$

  # Generic checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-added-large-files
        args: ['--maxkb=500']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-yaml
        files: ^\.golangci.*\.ya?ml$
      - id: end-of-file-fixer
        exclude: \.golangci.*\.ya?ml$  # Skip golangci files to avoid format changes
      - id: trailing-whitespace
        exclude: \.golangci.*\.ya?ml$  # Skip golangci files to avoid format changes

# Pre-commit configuration
default_stages: [commit]
fail_fast: false
minimum_pre_commit_version: "2.20.0"

# CI integration
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [golangci-lint-fast]  # Skip in CI as it's handled by main CI pipeline
  submodules: false