run:
  timeout: 30m
  tests: true
  build-tags:
    - integration
  skip-dirs:
    - vendor
    - third_party
    - testdata
    - examples
    - docs

linters:
  enable:
    - gofmt
    - govet
    - errcheck
    - staticcheck
    - gosec
    - ineffassign
    - typecheck
    - gocritic
    - gci
    - whitespace
    - gosimple
    - stylecheck
    - godot
    - revive
    - bodyclose
    - noctx
    - contextcheck
    - errorlint
    - prealloc
    - unconvert
    - gofumpt
    - intrange
    - nolintlint

  disable:
    - unused        # Too many false positives
    - unparam       # Too aggressive for interface implementations
    - dupl          # Too many false positives
    - gocyclo       # Complexity is sometimes necessary
    - funlen        # Long functions are sometimes necessary
    - gomnd         # Magic numbers are sometimes OK
    - lll           # Line length is not critical
    - gocognit      # Cognitive complexity varies
    - nestif        # Nested ifs are sometimes clearer
    - goconst       # Constants not always needed
    - exhaustive    # Exhaustive switches not always needed
    - wsl           # Whitespace linter too strict
    - nlreturn      # Newline return too strict
    - forcetypeassert # Type assertions are sometimes safe
    - tagliatelle   # JSON tags don't need to be camelCase
    - varnamelen    # Short variable names are OK
    - wrapcheck     # Error wrapping not always needed

linters-settings:
  errcheck:
    check-type-assertions: false
    check-blank: false
    exclude-functions:
      - io.Copy
      - io.WriteString
      - fmt.Print
      - fmt.Printf
      - fmt.Println
      - fmt.Fprint
      - fmt.Fprintf
      - fmt.Fprintln

  govet:
    enable-all: true
    disable:
      - fieldalignment  # Struct field alignment optimization not critical
      - shadow         # Variable shadowing is sometimes OK

  gosec:
    excludes:
      - G104  # Errors unhandled - covered by errcheck
      - G304  # File path provided as taint input - false positives
      - G307  # Deferring unsafe method - false positives
      - G401  # Use of weak crypto - for non-security contexts
      - G501  # Weak crypto imports - for non-security contexts
      - G601  # Implicit memory aliasing - too many false positives

  gocritic:
    enabled-tags:
      - diagnostic
      - style
      - performance
    disabled-checks:
      - hugeParam      # Large params are sometimes necessary
      - rangeValCopy   # Range value copies are sometimes OK
      - appendAssign   # Append assignments are clear enough
      - commentedOutCode # Sometimes useful for debugging

  revive:
    rules:
      - name: exported
        disabled: true  # Too many false positives
      - name: var-naming
        disabled: true  # Too strict for some cases
      - name: if-return
        disabled: true  # Sometimes clearer with if
      - name: max-public-structs
        disabled: true  # Not relevant
      - name: cognitive-complexity
        disabled: true  # Sometimes complexity is needed

  staticcheck:
    checks: ["all", "-ST1000", "-ST1003", "-ST1016", "-ST1020", "-ST1021", "-ST1022"]

  stylecheck:
    checks: ["all", "-ST1000", "-ST1003", "-ST1016", "-ST1020", "-ST1021", "-ST1022"]
    initialisms: ["ACL", "API", "ASCII", "CPU", "CSS", "DNS", "EOF", "GUID", "HTML", 
                  "HTTP", "HTTPS", "ID", "IP", "JSON", "JWT", "LHS", "QPS", "RAM", 
                  "RHS", "RPC", "SLA", "SMTP", "SQL", "SSH", "TCP", "TLS", "TTL", 
                  "UDP", "UI", "UID", "UUID", "URI", "URL", "UTF8", "VM", "XML", 
                  "XMPP", "XSRF", "XSS", "CNF", "VNF", "AMF", "SMF", "UPF", "RIC",
                  "O1", "O2", "E2", "A1", "ORAN", "KPM", "FCAPS", "VES", "LLM", "RAG"]

  prealloc:
    simple: false
    range-loops: false
    for-loops: false

  gci:
    sections:
      - standard
      - default
      - prefix(github.com/nephio-project/nephoran-intent-operator)

  contextcheck:
    exclude-dirs:
      - test
      - tests
      - testing

issues:
  max-same-issues: 0
  max-issues-per-linter: 0

  exclude-rules:
    # Exclude test files from certain linters
    - path: _test\.go
      linters:
        - errcheck
        - gosec
        - dupl
        - funlen
        - goconst
        - unparam

    # Exclude generated files
    - path: _generated\.go
      linters:
        - all

    # Exclude certain patterns
    - path: "api/.*\\.go"
      linters:
        - revive
      text: "exported"

    # Allow TODO comments
    - text: "TODO"
      linters:
        - godot

    # Allow large functions in main packages
    - path: "cmd/.*/main\\.go"
      linters:
        - funlen
        - gocyclo
        - gocognit

    # Allow unused parameters in interface implementations
    - path: ".*"
      text: "unused-parameter"
      linters:
        - revive

    # Allow certain gosec issues in non-critical code
    - path: "internal/.*"
      linters:
        - gosec
      text: "G115"

    # Contextcheck exceptions for background workers
    - path: ".*"
      text: "Non-inherited new context"
      linters:
        - contextcheck

  exclude-use-default: false
  exclude:
    # Common false positives
    - "Error return value of .((Close|Write|Flush|Remove|Rollback)|(.*\\.Wait)) is not checked"
    - "exported (type|method|function|const|var) .* should have comment or be unexported"
    - "should have a package comment"
    - "(comment on exported (method|function|type|const)|should have( a package)? comment|comment should be of the form)"
    - "at least one file in a package should have a package comment"