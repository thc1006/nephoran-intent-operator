# golangci-lint config. This file is designed to pass in CI for MVP.
# Ref: https://golangci-lint.run/docs/configuration/file/

run:
  # Total timeout for the whole run.
  timeout: 5m
  # Avoid modifying go.mod/go.sum during lint.
  modules-download-mode: readonly
  # 🚦 IMPORTANT: do not fail CI because of linter findings during MVP.
  # 0 means: exit code 0 even if issues are found.
  issues-exit-code: 0
  # Keep tests included (some linters look at *_test.go).
  tests: true
  # Allow multiple runners on CI to reduce flakiness.
  allow-parallel-runners: true
  allow-serial-runners: true

linters:
  # Start minimal: enable a few safe/default linters.
  # You can add more later without breaking CI.
  disable-all: true
  enable:
    - govet
    - staticcheck
    - errcheck
    - revive

linters-settings:
  revive:
    # A gentle ruleset; strict ones can be added later.
    severity: warning
    rules:
      - name: blank-imports
      - name: context-as-argument
      - name: exported
        arguments: ["disableStutteringCheck"]
      - name: receiver-naming
      - name: increment-decrement

# All issue-related filters and exclusions live under "issues" in v2.
issues:
  # Only flag problems introduced in this branch by default.
  # （在大型既有專案中非常好用，不會一次炸出歷史債）
  new: false
  # 如果要只看 PR 相對於 integrate/mvp 的新問題，可把上面改回 true，
  # 並設 new-from-merge-base: integrate/mvp
  # new-from-merge-base: integrate/mvp

  # Don’t limit counts while we’re stabilizing the codebase.
  max-issues-per-linter: 0
  max-same-issues: 0
  
  # Exclude specific directories from analysis
  exclude-dirs:
    - docs
    - examples
    - deployments
    - testdata
    - vendor
  
  # Exclude generated files
  exclude-generated: lax

# Optional: Output configuration
output:
  # Default format for CI
  formats:
    - format: colored-line-number
